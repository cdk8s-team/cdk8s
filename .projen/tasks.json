{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "lerna run build"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "integ": {
      "name": "integ",
      "steps": [
        {
          "exec": "bash test/test-all.sh"
        }
      ]
    },
    "integ:update": {
      "name": "integ:update",
      "env": {
        "UPDATE_SNAPSHOTS": "1"
      },
      "steps": [
        {
          "exec": "bash test/test-all.sh"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "lerna run test -- -u"
        },
        {
          "spawn": "integ:update"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --dep dev --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep optional --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep peer --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep prod --upgrade --target=minor"
        },
        {
          "exec": "npm-check-updates --dep bundle --upgrade --target=minor"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade"
        },
        {
          "exec": "npx projen"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
