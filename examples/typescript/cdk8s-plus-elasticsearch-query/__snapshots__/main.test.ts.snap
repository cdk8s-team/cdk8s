// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Placeholder Empty 1`] = `
Array [
  Object {
    "apiVersion": "elasticsearch.k8s.elastic.co/v1",
    "kind": "Elasticsearch",
    "metadata": Object {
      "name": "test-chart-elasticsearch-5921e846",
    },
    "spec": Object {
      "http": Object {
        "service": Object {
          "spec": Object {
            "ports": Array [
              Object {
                "port": 9200,
              },
            ],
          },
        },
        "tls": Object {
          "selfSignedCertificate": Object {
            "disabled": true,
          },
        },
      },
      "nodeSets": Array [
        Object {
          "config": Object {
            "node.data": true,
            "node.ingest": true,
            "node.master": true,
            "node.store.allow_mmap": false,
            "xpack.security.enabled": true,
            "xpack.security.http.ssl.enabled": false,
          },
          "count": 1,
          "name": "default",
        },
      ],
      "version": "7.7.1",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "query.js": "\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const http = require(\\"http\\");
const querystring = require(\\"querystring\\");
const endpoint = process.env.ELASTIC_ENDPOINT;
const username = process.env.ELASTIC_USERNAME;
const password = process.env.ELASTIC_PASSWORD;
if (!endpoint) {
    throw new Error('ELASTIC_ENDPOINT env variable is required');
}
if (!password) {
    throw new Error('ELASTIC_PASSWORD env variable is required');
}
if (!username) {
    throw new Error('ELASTIC_USERNAME env variable is required');
}
var port = process.argv[2];
console.log('Creating a server...');
http.createServer(function (req, res) {
    var _a;
    function sendResponse(data) {
        res.write(data);
        res.end();
    }
    try {
        console.log(\`Received request: \${req.url}\`);
        let uri = (_a = req.url) === null || _a === void 0 ? void 0 : _a.split('?')[1];
        if (!uri) {
            throw new Error('URI is undefined');
        }
        doSearch(uri, sendResponse);
    }
    catch (err) {
        sendResponse(err.message);
    }
}).listen(port);
function doSearch(uri, callback) {
    console.log(\`URI is: \${uri}\`);
    const queryParams = querystring.parse(uri);
    if (!queryParams) {
        throw new Error('Illegal Query. Use ?search=<free-text>');
    }
    console.log(\`Params: \${JSON.stringify(queryParams)}\`);
    const search = queryParams['search'];
    const hostAndPort = endpoint.split('//')[1].split(':');
    const options = {
        headers: {
            'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64'),
        },
        path: \`/_search?q=\${search}\`,
        port: hostAndPort[1],
        host: hostAndPort[0]
    };
    console.log(\`Sending search query to elasticsearch: \${JSON.stringify(options)}\`);
    http.get(options, (esResponse) => {
        let data = '';
        esResponse.on('data', (chunk) => {
            data += chunk;
        });
        esResponse.on('end', () => {
            callback(data);
        });
    }).on('error', (err) => {
        callback(err.message);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJxdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQUM3QiwyQ0FBMkM7QUFHM0MsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQztBQUM5QyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDO0FBQzlDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUM7QUFFOUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtJQUNiLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztDQUM5RDtBQUVELElBQUksQ0FBQyxRQUFRLEVBQUU7SUFDYixNQUFNLElBQUksS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7Q0FDOUQ7QUFFRCxJQUFJLENBQUMsUUFBUSxFQUFFO0lBQ2IsTUFBTSxJQUFJLEtBQUssQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0NBQzlEO0FBRUQsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUUzQixPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDcEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLEdBQXlCLEVBQUUsR0FBd0I7O0lBRTdFLFNBQVMsWUFBWSxDQUFDLElBQVk7UUFDaEMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQixHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWixDQUFDO0lBRUQsSUFBSTtRQUVGLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBRTVDLElBQUksR0FBRyxTQUFHLEdBQUcsQ0FBQyxHQUFHLDBDQUFFLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFakMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztTQUNyQztRQUVELFFBQVEsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQUM7S0FHN0I7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNaLFlBQVksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDM0I7QUFFSCxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFaEIsU0FBUyxRQUFRLENBQUMsR0FBVyxFQUFFLFFBQWdDO0lBRTdELE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBRTlCLE1BQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBSSxDQUFDLENBQUM7SUFFNUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7S0FDM0Q7SUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFdEQsTUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRXJDLE1BQU0sV0FBVyxHQUFHLFFBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXhELE1BQU0sT0FBTyxHQUFzQjtRQUNqQyxPQUFPLEVBQUU7WUFDUCxlQUFlLEVBQUUsUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO1NBQ3RGO1FBQ0QsSUFBSSxFQUFFLGNBQWMsTUFBTSxFQUFFO1FBQzVCLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO0tBQ3JCLENBQUE7SUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLDBDQUEwQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVqRixJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDLFVBQWUsRUFBRSxFQUFFO1FBRXBDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUVkLFVBQVUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBVSxFQUFFLEVBQUU7WUFDbkMsSUFBSSxJQUFJLEtBQUssQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztRQUVILFVBQVUsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtZQUN4QixRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7SUFFTCxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBVSxFQUFFLEVBQUU7UUFDNUIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN4QixDQUFDLENBQUMsQ0FBQztBQUVMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0ICogYXMgcXVlcnlzdHJpbmcgZnJvbSAncXVlcnlzdHJpbmcnO1xuaW1wb3J0IHsgQ2xpZW50UmVxdWVzdEFyZ3MgfSBmcm9tICdodHRwJztcblxuY29uc3QgZW5kcG9pbnQgPSBwcm9jZXNzLmVudi5FTEFTVElDX0VORFBPSU5UO1xuY29uc3QgdXNlcm5hbWUgPSBwcm9jZXNzLmVudi5FTEFTVElDX1VTRVJOQU1FO1xuY29uc3QgcGFzc3dvcmQgPSBwcm9jZXNzLmVudi5FTEFTVElDX1BBU1NXT1JEO1xuXG5pZiAoIWVuZHBvaW50KSB7XG4gIHRocm93IG5ldyBFcnJvcignRUxBU1RJQ19FTkRQT0lOVCBlbnYgdmFyaWFibGUgaXMgcmVxdWlyZWQnKTtcbn1cblxuaWYgKCFwYXNzd29yZCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0VMQVNUSUNfUEFTU1dPUkQgZW52IHZhcmlhYmxlIGlzIHJlcXVpcmVkJyk7XG59XG5cbmlmICghdXNlcm5hbWUpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdFTEFTVElDX1VTRVJOQU1FIGVudiB2YXJpYWJsZSBpcyByZXF1aXJlZCcpO1xufVxuXG52YXIgcG9ydCA9IHByb2Nlc3MuYXJndlsyXTtcblxuY29uc29sZS5sb2coJ0NyZWF0aW5nIGEgc2VydmVyLi4uJyk7XG5odHRwLmNyZWF0ZVNlcnZlcihmdW5jdGlvbiAocmVxOiBodHRwLkluY29taW5nTWVzc2FnZSwgcmVzOiBodHRwLlNlcnZlclJlc3BvbnNlKSB7XG5cbiAgZnVuY3Rpb24gc2VuZFJlc3BvbnNlKGRhdGE6IHN0cmluZykge1xuICAgIHJlcy53cml0ZShkYXRhKTtcbiAgICByZXMuZW5kKCk7XG4gIH1cblxuICB0cnkge1xuXG4gICAgY29uc29sZS5sb2coYFJlY2VpdmVkIHJlcXVlc3Q6ICR7cmVxLnVybH1gKTtcblxuICAgIGxldCB1cmkgPSByZXEudXJsPy5zcGxpdCgnPycpWzFdO1xuXG4gICAgaWYgKCF1cmkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVVJJIGlzIHVuZGVmaW5lZCcpO1xuICAgIH1cblxuICAgIGRvU2VhcmNoKHVyaSwgc2VuZFJlc3BvbnNlKTtcblxuXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHNlbmRSZXNwb25zZShlcnIubWVzc2FnZSk7XG4gIH1cblxufSkubGlzdGVuKHBvcnQpO1xuXG5mdW5jdGlvbiBkb1NlYXJjaCh1cmk6IHN0cmluZywgY2FsbGJhY2s6IChkYXRhOiBzdHJpbmcpID0+IHZvaWQpIHtcblxuICBjb25zb2xlLmxvZyhgVVJJIGlzOiAke3VyaX1gKTtcblxuICBjb25zdCBxdWVyeVBhcmFtcyA9IHF1ZXJ5c3RyaW5nLnBhcnNlKHVyaSEpO1xuXG4gIGlmICghcXVlcnlQYXJhbXMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0lsbGVnYWwgUXVlcnkuIFVzZSA/c2VhcmNoPTxmcmVlLXRleHQ+Jyk7XG4gIH1cblxuICBjb25zb2xlLmxvZyhgUGFyYW1zOiAke0pTT04uc3RyaW5naWZ5KHF1ZXJ5UGFyYW1zKX1gKTtcblxuICBjb25zdCBzZWFyY2ggPSBxdWVyeVBhcmFtc1snc2VhcmNoJ107XG5cbiAgY29uc3QgaG9zdEFuZFBvcnQgPSBlbmRwb2ludCEuc3BsaXQoJy8vJylbMV0uc3BsaXQoJzonKTtcblxuICBjb25zdCBvcHRpb25zOiBDbGllbnRSZXF1ZXN0QXJncyA9IHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICAnQXV0aG9yaXphdGlvbic6ICdCYXNpYyAnICsgQnVmZmVyLmZyb20odXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCkudG9TdHJpbmcoJ2Jhc2U2NCcpLFxuICAgIH0sXG4gICAgcGF0aDogYC9fc2VhcmNoP3E9JHtzZWFyY2h9YCxcbiAgICBwb3J0OiBob3N0QW5kUG9ydFsxXSxcbiAgICBob3N0OiBob3N0QW5kUG9ydFswXVxuICB9XG5cbiAgY29uc29sZS5sb2coYFNlbmRpbmcgc2VhcmNoIHF1ZXJ5IHRvIGVsYXN0aWNzZWFyY2g6ICR7SlNPTi5zdHJpbmdpZnkob3B0aW9ucyl9YCk7XG5cbiAgaHR0cC5nZXQob3B0aW9ucywgKGVzUmVzcG9uc2U6IGFueSkgPT4ge1xuXG4gICAgbGV0IGRhdGEgPSAnJztcblxuICAgIGVzUmVzcG9uc2Uub24oJ2RhdGEnLCAoY2h1bms6IGFueSkgPT4ge1xuICAgICAgZGF0YSArPSBjaHVuaztcbiAgICB9KTtcblxuICAgIGVzUmVzcG9uc2Uub24oJ2VuZCcsICgpID0+IHtcbiAgICAgIGNhbGxiYWNrKGRhdGEpO1xuICAgIH0pO1xuXG4gIH0pLm9uKCdlcnJvcicsIChlcnI6IEVycm9yKSA9PiB7XG4gICAgY2FsbGJhY2soZXJyLm1lc3NhZ2UpO1xuICB9KTtcblxufSJdfQ==",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "test-chart-config-configmap-233db8e7",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-chart-deployment-pod-1ef542cf",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.deployment": "testchartDeploymentAAAF687B",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "testchartDeploymentAAAF687B",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "command": Array [
                "node",
                "query.js",
                "8000",
              ],
              "env": Array [
                Object {
                  "name": "ELASTIC_USERNAME",
                  "value": "elastic",
                },
                Object {
                  "name": "ELASTIC_ENDPOINT",
                  "value": "http://test-chart-elasticsearch-5921e846-es-http:9200",
                },
                Object {
                  "name": "ELASTIC_PASSWORD",
                  "valueFrom": Object {
                    "secretKeyRef": Object {
                      "key": "elastic",
                      "name": "test-chart-elasticsearch-5921e846-es-elastic-user",
                    },
                  },
                },
              ],
              "image": "node:12.18.0-stretch",
              "name": "main",
              "ports": Array [
                Object {
                  "containerPort": 8000,
                },
              ],
              "volumeMounts": Array [
                Object {
                  "mountPath": "/root",
                  "name": "configmap-test-chart-config-configmap-233db8e7",
                },
              ],
              "workingDir": "/root",
            },
          ],
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "test-chart-config-configmap-233db8e7",
              },
              "name": "configmap-test-chart-config-configmap-233db8e7",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-chart-deployment-service-pod-28e7837f",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 9000,
          "targetPort": 8000,
        },
      ],
      "selector": Object {
        "cdk8s.deployment": "testchartDeploymentAAAF687B",
      },
      "type": "ClusterIP",
    },
  },
]
`;
