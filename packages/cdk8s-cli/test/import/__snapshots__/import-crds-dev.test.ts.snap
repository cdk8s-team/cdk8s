// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`crds.dev import github:crossplane/crossplane@0.14.0 emit module per API group 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "cdk8s": "999.999.999",
    "constructs": "3.3.71",
  },
  "dependencyClosure": Object {
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "go": Object {
          "moduleName": "github.com/awslabs/cdk8s-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
    "constructs": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Constructs",
          "packageId": "Constructs",
        },
        "go": Object {
          "moduleName": "github.com/aws/constructs-go",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "constructs",
            "groupId": "software.constructs",
          },
          "package": "software.constructs",
        },
        "js": Object {
          "npm": "constructs",
        },
        "python": Object {
          "distName": "constructs",
          "module": "constructs",
        },
      },
    },
  },
  "description": "metapkgcrossplaneio",
  "fingerprint": "<fingerprint>",
  "homepage": "http://generated",
  "jsiiVersion": "1.29.0 (build 41df200)",
  "license": "Apache-2.0",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "metapkgcrossplaneio",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "metapkgcrossplaneio",
    },
  },
  "types": Object {
    "metapkgcrossplaneio.Configuration": Object {
      "assembly": "metapkgcrossplaneio",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "Configuration",
        },
        "summary": "A Configuration is the description of a Crossplane Configuration package.",
      },
      "fqn": "metapkgcrossplaneio.Configuration",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"Configuration\\" API object.",
        },
        "locationInModule": Object {
          "filename": "meta.pkg.crossplane.io.ts",
          "line": 39,
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "constructs.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "id",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "initialization props.",
            },
            "name": "props",
            "type": Object {
              "fqn": "metapkgcrossplaneio.ConfigurationProps",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "meta.pkg.crossplane.io.ts",
        "line": 10,
      },
      "methods": Array [
        Object {
          "docs": Object {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "summary": "Renders a Kubernetes manifest for \\"Configuration\\".",
          },
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 26,
          },
          "name": "manifest",
          "parameters": Array [
            Object {
              "docs": Object {
                "summary": "initialization props.",
              },
              "name": "props",
              "type": Object {
                "fqn": "metapkgcrossplaneio.ConfigurationProps",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "primitive": "any",
            },
          },
          "static": true,
        },
      ],
      "name": "Configuration",
      "properties": Array [
        Object {
          "const": true,
          "docs": Object {
            "summary": "Returns the apiVersion and kind for \\"Configuration\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 14,
          },
          "name": "GVK",
          "static": true,
          "type": Object {
            "fqn": "cdk8s.GroupVersionKind",
          },
        },
      ],
    },
    "metapkgcrossplaneio.ConfigurationProps": Object {
      "assembly": "metapkgcrossplaneio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "Configuration",
        },
        "summary": "A Configuration is the description of a Crossplane Configuration package.",
      },
      "fqn": "metapkgcrossplaneio.ConfigurationProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "meta.pkg.crossplane.io.ts",
        "line": 49,
      },
      "name": "ConfigurationProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Configuration#spec",
            },
            "summary": "ConfigurationSpec specifies the configuration of a Configuration.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 60,
          },
          "name": "spec",
          "type": Object {
            "fqn": "metapkgcrossplaneio.ConfigurationSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "Configuration#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 53,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "primitive": "any",
          },
        },
      ],
    },
    "metapkgcrossplaneio.ConfigurationSpec": Object {
      "assembly": "metapkgcrossplaneio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ConfigurationSpec",
        },
        "summary": "ConfigurationSpec specifies the configuration of a Configuration.",
      },
      "fqn": "metapkgcrossplaneio.ConfigurationSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "meta.pkg.crossplane.io.ts",
        "line": 69,
      },
      "name": "ConfigurationSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpec#crossplane",
            },
            "summary": "Semantic version constraints of Crossplane that package is compatible with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 75,
          },
          "name": "crossplane",
          "optional": true,
          "type": Object {
            "fqn": "metapkgcrossplaneio.ConfigurationSpecCrossplane",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpec#dependsOn",
            },
            "summary": "Dependencies on other packages.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 82,
          },
          "name": "dependsOn",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "metapkgcrossplaneio.ConfigurationSpecDependsOn",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "metapkgcrossplaneio.ConfigurationSpecCrossplane": Object {
      "assembly": "metapkgcrossplaneio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ConfigurationSpecCrossplane",
        },
        "summary": "Semantic version constraints of Crossplane that package is compatible with.",
      },
      "fqn": "metapkgcrossplaneio.ConfigurationSpecCrossplane",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "meta.pkg.crossplane.io.ts",
        "line": 91,
      },
      "name": "ConfigurationSpecCrossplane",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpecCrossplane#version",
            },
            "summary": "Semantic version constraints of Crossplane that package is compatible with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 97,
          },
          "name": "version",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "metapkgcrossplaneio.ConfigurationSpecDependsOn": Object {
      "assembly": "metapkgcrossplaneio",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "ConfigurationSpecDependsOn",
        },
        "remarks": "One of Provider or Configuration may be supplied.",
        "summary": "Dependency is a dependency on another package.",
      },
      "fqn": "metapkgcrossplaneio.ConfigurationSpecDependsOn",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "meta.pkg.crossplane.io.ts",
        "line": 106,
      },
      "name": "ConfigurationSpecDependsOn",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpecDependsOn#version",
            },
            "summary": "Version is the semantic version constraints of the dependency image.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 126,
          },
          "name": "version",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpecDependsOn#configuration",
            },
            "summary": "Configuration is the name of a Configuration package image.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 112,
          },
          "name": "configuration",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "ConfigurationSpecDependsOn#provider",
            },
            "summary": "Provider is the name of a Provider package image.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "meta.pkg.crossplane.io.ts",
            "line": 119,
          },
          "name": "provider",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;
