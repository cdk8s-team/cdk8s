// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate and compile 1.14.0 1`] = `
Object {
  "author": Object {
    "name": "dummy@dummy.com",
    "roles": Array [
      "author",
    ],
  },
  "dependencies": Object {
    "@aws-cdk/core": "*",
    "cdk8s": "*",
  },
  "dependencyClosure": Object {
    "@aws-cdk/core": Object {
      "targets": Object {
        "dotnet": Object {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true,
        },
        "java": Object {
          "maven": Object {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk",
          },
          "package": "software.amazon.awscdk.core",
        },
        "js": Object {
          "npm": "@aws-cdk/core",
        },
        "python": Object {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core",
        },
      },
    },
    "@aws-cdk/cx-api": Object {
      "targets": Object {
        "dotnet": Object {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true,
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk",
          },
          "package": "software.amazon.awscdk.cxapi",
        },
        "js": Object {
          "npm": "@aws-cdk/cx-api",
        },
        "python": Object {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api",
        },
      },
    },
    "cdk8s": Object {
      "targets": Object {
        "dotnet": Object {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s",
        },
        "java": Object {
          "maven": Object {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s",
          },
          "package": "org.cdk8s",
        },
        "js": Object {
          "npm": "cdk8s",
        },
        "python": Object {
          "distName": "cdk8s",
          "module": "cdk8s",
        },
      },
    },
  },
  "description": "dummy",
  "fingerprint": "7grJlHvp3CPF0xFRlDjOlRAxlHghtwLV8OqoCHRURBA=",
  "homepage": "http://repo",
  "jsiiVersion": "1.0.0 (build eb2db9d)",
  "license": "Apache-2.0",
  "name": "dummy",
  "repository": Object {
    "type": "git",
    "url": "http://repo",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "dummy",
    },
    "python": Object {
      "distName": "k8s",
      "module": "k8s",
    },
  },
  "types": Object {
    "dummy.APIService": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService",
        },
        "remarks": "Name must be \\"version.group\\".",
        "summary": "APIService represents a server for a particular GroupVersion.",
      },
      "fqn": "dummy.APIService",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.APIServiceOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2207,
      },
      "name": "APIService",
    },
    "dummy.APIServiceList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList",
        },
        "summary": "APIServiceList is a list of APIService objects.",
      },
      "fqn": "dummy.APIServiceList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.APIServiceListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2229,
      },
      "name": "APIServiceList",
    },
    "dummy.APIServiceListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList",
        },
        "summary": "APIServiceList is a list of APIService objects.",
      },
      "fqn": "dummy.APIServiceListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4656,
      },
      "name": "APIServiceListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList#items",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4660,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.APIService",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4665,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.APIServiceOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService",
        },
        "remarks": "Name must be \\"version.group\\".",
        "summary": "APIService represents a server for a particular GroupVersion.",
      },
      "fqn": "dummy.APIServiceOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4636,
      },
      "name": "APIServiceOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4640,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService#spec",
            },
            "summary": "Spec contains information for locating and communicating with a server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4647,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.APIServiceSpec",
          },
        },
      ],
    },
    "dummy.APIServiceSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec",
        },
        "remarks": "Only https is supported, though you are able to disable certificate verification.",
        "summary": "APIServiceSpec contains information for locating and communicating with a server.",
      },
      "fqn": "dummy.APIServiceSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7283,
      },
      "name": "APIServiceSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#groupPriorityMinimum",
            },
            "remarks": "Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s",
            "summary": "GroupPriorityMininum is the priority this group should have at least.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7303,
          },
          "name": "groupPriorityMinimum",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#service",
            },
            "remarks": "It must communicate on port 443 If the Service is nil, that means the handling for the API groupversion is handled locally on this server. The call will simply delegate to the normal handler chain to be fulfilled.",
            "summary": "Service is a reference to the service for this API server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7317,
          },
          "name": "service",
          "type": Object {
            "fqn": "dummy.ServiceReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#versionPriority",
            },
            "remarks": "Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is \\"kube-like\\", it will sort above non \\"kube-like\\" version strings, which are ordered lexicographically. \\"Kube-like\\" versions start with a \\"v\\", then are followed by a number (the major version), then optionally the string \\"alpha\\" or \\"beta\\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
            "summary": "VersionPriority controls the ordering of this API version inside of its group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7331,
          },
          "name": "versionPriority",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#caBundle",
            },
            "remarks": "If unspecified, system trust roots on the apiserver are used.",
            "summary": "CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7289,
          },
          "name": "caBundle",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#group",
            },
            "summary": "Group is the API group name this server hosts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7296,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#insecureSkipTLSVerify",
            },
            "remarks": "This is strongly discouraged.  You should use the CABundle instead.",
            "summary": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7310,
          },
          "name": "insecureSkipTLSVerify",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec#version",
            },
            "remarks": "For example, \\"v1\\"",
            "summary": "Version is the API version this server hosts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7324,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.AWSElasticBlockStoreVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource",
        },
        "remarks": "An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a Persistent Disk resource in AWS.",
      },
      "fqn": "dummy.AWSElasticBlockStoreVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7961,
      },
      "name": "AWSElasticBlockStoreVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#volumeID",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7988,
          },
          "name": "volumeID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7967,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty).",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7974,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource#readOnly",
            },
            "remarks": "If omitted, the default is \\"false\\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "Specify \\"true\\" to force and set the ReadOnly property in VolumeMounts to \\"true\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7981,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Affinity": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Affinity",
        },
        "summary": "Affinity is a group of affinity scheduling rules.",
      },
      "fqn": "dummy.Affinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9005,
      },
      "name": "Affinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Affinity#nodeAffinity",
            },
            "summary": "Describes node affinity scheduling rules for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9011,
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NodeAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Affinity#podAffinity",
            },
            "summary": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9018,
          },
          "name": "podAffinity",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Affinity#podAntiAffinity",
            },
            "summary": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9025,
          },
          "name": "podAntiAffinity",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodAntiAffinity",
          },
        },
      ],
    },
    "dummy.AggregationRule": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.AggregationRule",
        },
        "summary": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole.",
      },
      "fqn": "dummy.AggregationRule",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6911,
      },
      "name": "AggregationRule",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.AggregationRule#clusterRoleSelectors",
            },
            "remarks": "If any of the selectors match, then the ClusterRole's permissions will be added",
            "summary": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6917,
          },
          "name": "clusterRoleSelectors",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LabelSelector",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.AllowedCSIDriver": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.AllowedCSIDriver",
        },
        "summary": "AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.",
      },
      "fqn": "dummy.AllowedCSIDriver",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9767,
      },
      "name": "AllowedCSIDriver",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.AllowedCSIDriver#name",
            },
            "summary": "Name is the registered name of the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9773,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.AllowedFlexVolume": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.AllowedFlexVolume",
        },
        "summary": "AllowedFlexVolume represents a single Flexvolume that is allowed to be used.",
      },
      "fqn": "dummy.AllowedFlexVolume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9782,
      },
      "name": "AllowedFlexVolume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.AllowedFlexVolume#driver",
            },
            "summary": "driver is the name of the Flexvolume driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9788,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.AllowedHostPath": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.AllowedHostPath",
        },
        "remarks": "It requires the path prefix to be defined.",
        "summary": "AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use.",
      },
      "fqn": "dummy.AllowedHostPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9797,
      },
      "name": "AllowedHostPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.AllowedHostPath#pathPrefix",
            },
            "remarks": "It does not support \`*\`. Trailing slashes are trimmed when validating the path prefix with a host path.

Examples: \`/foo\` would allow \`/foo\`, \`/foo/\` and \`/foo/bar\` \`/foo\` would not allow \`/food\` or \`/etc/foo\`",
            "summary": "pathPrefix is the path prefix that the host volume must match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9805,
          },
          "name": "pathPrefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.AllowedHostPath#readOnly",
            },
            "summary": "when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9812,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.AuditSink": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSink",
        },
        "summary": "AuditSink represents a cluster level audit sink.",
      },
      "fqn": "dummy.AuditSink",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.auditregistration.v1alpha1.AuditSink\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.AuditSinkOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 344,
      },
      "name": "AuditSink",
    },
    "dummy.AuditSinkList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkList",
        },
        "summary": "AuditSinkList is a list of AuditSink items.",
      },
      "fqn": "dummy.AuditSinkList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.auditregistration.v1alpha1.AuditSinkList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.AuditSinkListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 366,
      },
      "name": "AuditSinkList",
    },
    "dummy.AuditSinkListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkList",
        },
        "summary": "AuditSinkList is a list of AuditSink items.",
      },
      "fqn": "dummy.AuditSinkListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2604,
      },
      "name": "AuditSinkListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkList#items",
            },
            "summary": "List of audit configurations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2610,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.AuditSink",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2615,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.AuditSinkOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSink",
        },
        "summary": "AuditSink represents a cluster level audit sink.",
      },
      "fqn": "dummy.AuditSinkOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2584,
      },
      "name": "AuditSinkOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSink#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2588,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSink#spec",
            },
            "summary": "Spec defines the audit configuration spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2595,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AuditSinkSpec",
          },
        },
      ],
    },
    "dummy.AuditSinkSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkSpec",
        },
        "summary": "AuditSinkSpec holds the spec for the audit sink.",
      },
      "fqn": "dummy.AuditSinkSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5221,
      },
      "name": "AuditSinkSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkSpec#policy",
            },
            "summary": "Policy defines the policy for selecting which events should be sent to the webhook required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5227,
          },
          "name": "policy",
          "type": Object {
            "fqn": "dummy.Policy",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.AuditSinkSpec#webhook",
            },
            "summary": "Webhook to send events required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5234,
          },
          "name": "webhook",
          "type": Object {
            "fqn": "dummy.Webhook",
          },
        },
      ],
    },
    "dummy.AzureDiskVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource",
        },
        "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      },
      "fqn": "dummy.AzureDiskVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7997,
      },
      "name": "AzureDiskVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#diskName",
            },
            "summary": "The Name of the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8010,
          },
          "name": "diskName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#diskURI",
            },
            "summary": "The URI the data disk in the blob storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8017,
          },
          "name": "diskURI",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#cachingMode",
            },
            "summary": "Host Caching mode: None, Read Only, Read Write.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8003,
          },
          "name": "cachingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8024,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#kind",
            },
            "remarks": "defaults to shared",
            "summary": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8031,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureDiskVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8039,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.AzureFilePersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "dummy.AzureFilePersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8048,
      },
      "name": "AzureFilePersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8062,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8076,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8055,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFilePersistentVolumeSource#secretNamespace",
            },
            "summary": "the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8069,
          },
          "name": "secretNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.AzureFileVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.AzureFileVolumeSource",
        },
        "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      },
      "fqn": "dummy.AzureFileVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11013,
      },
      "name": "AzureFileVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#secretName",
            },
            "summary": "the name of secret that contains Azure Storage Account Name and Key.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11027,
          },
          "name": "secretName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#shareName",
            },
            "summary": "Share Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11034,
          },
          "name": "shareName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.AzureFileVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11020,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Binding": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Binding",
        },
        "remarks": "for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
        "summary": "Binding ties one object to another;",
      },
      "fqn": "dummy.Binding",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Binding\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.BindingOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 718,
      },
      "name": "Binding",
    },
    "dummy.BindingOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Binding",
        },
        "remarks": "for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.",
        "summary": "Binding ties one object to another;",
      },
      "fqn": "dummy.BindingOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2936,
      },
      "name": "BindingOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Binding#target",
            },
            "summary": "The target object that you want to bind to the standard object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2949,
          },
          "name": "target",
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Binding#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2942,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.CSIDriver": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSIDriver",
        },
        "remarks": "CSI drivers do not need to create the CSIDriver object directly. Instead they may use the cluster-driver-registrar sidecar container. When deployed with a CSI driver it automatically creates a CSIDriver object representing the driver. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
        "summary": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster.",
      },
      "fqn": "dummy.CSIDriver",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1beta1.CSIDriver\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CSIDriverOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2053,
      },
      "name": "CSIDriver",
    },
    "dummy.CSIDriverList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSIDriverList",
        },
        "summary": "CSIDriverList is a collection of CSIDriver objects.",
      },
      "fqn": "dummy.CSIDriverList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1beta1.CSIDriverList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CSIDriverListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2075,
      },
      "name": "CSIDriverList",
    },
    "dummy.CSIDriverListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSIDriverList",
        },
        "summary": "CSIDriverList is a collection of CSIDriver objects.",
      },
      "fqn": "dummy.CSIDriverListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4487,
      },
      "name": "CSIDriverListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriverList#items",
            },
            "summary": "items is the list of CSIDriver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4493,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CSIDriver",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriverList#metadata",
            },
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4500,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.CSIDriverOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSIDriver",
        },
        "remarks": "CSI drivers do not need to create the CSIDriver object directly. Instead they may use the cluster-driver-registrar sidecar container. When deployed with a CSI driver it automatically creates a CSIDriver object representing the driver. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.",
        "summary": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster.",
      },
      "fqn": "dummy.CSIDriverOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4465,
      },
      "name": "CSIDriverOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriver#spec",
            },
            "summary": "Specification of the CSI Driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4478,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.CSIDriverSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriver#metadata",
            },
            "remarks": "metadata.Name indicates the name of the CSI driver that this object refers to; it MUST be the same name returned by the CSI GetPluginName() call for that driver. The driver name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), dots (.), and alphanumerics between. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4471,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.CSIDriverSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSIDriverSpec",
        },
        "summary": "CSIDriverSpec is the specification of a CSIDriver.",
      },
      "fqn": "dummy.CSIDriverSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7122,
      },
      "name": "CSIDriverSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriverSpec#attachRequired",
            },
            "remarks": "The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.",
            "summary": "attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7128,
          },
          "name": "attachRequired",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSIDriverSpec#podInfoOnMount",
            },
            "default": "false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \\"csi.storage.k8s.io/pod.name\\": pod.Name \\"csi.storage.k8s.io/pod.namespace\\": pod.Namespace \\"csi.storage.k8s.io/pod.uid\\": string(pod.UID)",
            "summary": "If set to true, podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations. If set to false, pod information will not be passed on mount. Default is false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. \\"csi.storage.k8s.io/pod.name\\": pod.Name \\"csi.storage.k8s.io/pod.namespace\\": pod.Namespace \\"csi.storage.k8s.io/pod.uid\\": string(pod.UID).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7136,
          },
          "name": "podInfoOnMount",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.CSINode": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINode",
        },
        "remarks": "CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
        "summary": "CSINode holds information about all CSI drivers installed on a node.",
      },
      "fqn": "dummy.CSINode",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1beta1.CSINode\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CSINodeOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2097,
      },
      "name": "CSINode",
    },
    "dummy.CSINodeDriver": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINodeDriver",
        },
        "summary": "CSINodeDriver holds information about the specification of one CSI driver installed on a node.",
      },
      "fqn": "dummy.CSINodeDriver",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10142,
      },
      "name": "CSINodeDriver",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeDriver#name",
            },
            "remarks": "This MUST be the same name returned by the CSI GetPluginName() call for that driver.",
            "summary": "This is the name of the CSI driver that this object refers to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10148,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeDriver#nodeID",
            },
            "remarks": "This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as \\"node1\\", but the storage system may refer to the same node as \\"nodeA\\". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. \\"nodeA\\" instead of \\"node1\\". This field is required.",
            "summary": "nodeID of the node from the driver point of view.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10155,
          },
          "name": "nodeID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeDriver#topologyKeys",
            },
            "remarks": "When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. \\"company.com/zone\\", \\"company.com/region\\"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.",
            "summary": "topologyKeys is the list of keys supported by the driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10162,
          },
          "name": "topologyKeys",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.CSINodeList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINodeList",
        },
        "summary": "CSINodeList is a collection of CSINode objects.",
      },
      "fqn": "dummy.CSINodeList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1beta1.CSINodeList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CSINodeListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2119,
      },
      "name": "CSINodeList",
    },
    "dummy.CSINodeListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINodeList",
        },
        "summary": "CSINodeList is a collection of CSINode objects.",
      },
      "fqn": "dummy.CSINodeListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4531,
      },
      "name": "CSINodeListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeList#items",
            },
            "summary": "items is the list of CSINode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4537,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CSINode",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeList#metadata",
            },
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4544,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.CSINodeOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINode",
        },
        "remarks": "CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.",
        "summary": "CSINode holds information about all CSI drivers installed on a node.",
      },
      "fqn": "dummy.CSINodeOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4509,
      },
      "name": "CSINodeOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINode#spec",
            },
            "summary": "spec is the specification of CSINode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4522,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.CSINodeSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINode#metadata",
            },
            "summary": "metadata.name must be the Kubernetes node name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4515,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.CSINodeSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1beta1.CSINodeSpec",
        },
        "summary": "CSINodeSpec holds information about the specification of all CSI drivers installed on a node.",
      },
      "fqn": "dummy.CSINodeSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7145,
      },
      "name": "CSINodeSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1beta1.CSINodeSpec#drivers",
            },
            "remarks": "If all drivers in the list are uninstalled, this can become empty.",
            "summary": "drivers is a list of information of all CSI Drivers existing on a node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7151,
          },
          "name": "drivers",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CSINodeDriver",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.CSIPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource",
        },
        "summary": "Represents storage that is managed by an external CSI volume driver (Beta feature).",
      },
      "fqn": "dummy.CSIPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8191,
      },
      "name": "CSIPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#driver",
            },
            "remarks": "Required.",
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8204,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#volumeHandle",
            },
            "remarks": "Required.",
            "summary": "VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8247,
          },
          "name": "volumeHandle",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#controllerPublishSecretRef",
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "summary": "ControllerPublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI ControllerPublishVolume and ControllerUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8197,
          },
          "name": "controllerPublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8211,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8218,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#nodeStageSecretRef",
            },
            "remarks": "This field is optional, and may be empty if no secret is required. If the secret object contains more than one secret, all secrets are passed.",
            "summary": "NodeStageSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodeStageVolume and NodeStageVolume and NodeUnstageVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8225,
          },
          "name": "nodeStageSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Optional: The value to pass to ControllerPublishVolumeRequest.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8233,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIPersistentVolumeSource#volumeAttributes",
            },
            "summary": "Attributes of the volume to publish.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8240,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "dummy.CSIVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CSIVolumeSource",
        },
        "summary": "Represents a source location of a volume to mount, managed by an external CSI driver.",
      },
      "fqn": "dummy.CSIVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11170,
      },
      "name": "CSIVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#driver",
            },
            "remarks": "Consult with your admin for the correct name as registered in the cluster.",
            "summary": "Driver is the name of the CSI driver that handles this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11176,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11183,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#nodePublishSecretRef",
            },
            "remarks": "This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
            "summary": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11190,
          },
          "name": "nodePublishSecretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#readOnly",
            },
            "default": "false (read/write).",
            "remarks": "Defaults to false (read/write).",
            "summary": "Specifies a read-only configuration for the volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11198,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CSIVolumeSource#volumeAttributes",
            },
            "remarks": "Consult your driver's documentation for supported values.",
            "summary": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11205,
          },
          "name": "volumeAttributes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "dummy.Capabilities": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Capabilities",
        },
        "summary": "Adds and removes POSIX capabilities from running containers.",
      },
      "fqn": "dummy.Capabilities",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12382,
      },
      "name": "Capabilities",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Capabilities#add",
            },
            "summary": "Added capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12388,
          },
          "name": "add",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Capabilities#drop",
            },
            "summary": "Removed capabilities.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12395,
          },
          "name": "drop",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.CephFSPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource",
        },
        "summary": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      },
      "fqn": "dummy.CephFSPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8103,
      },
      "name": "CephFSPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8109,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8116,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8124,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8131,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#secretRef",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8138,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSPersistentVolumeSource#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8145,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CephFSVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CephFSVolumeSource",
        },
        "summary": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      },
      "fqn": "dummy.CephFSVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11043,
      },
      "name": "CephFSVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#monitors",
            },
            "summary": "Required: Monitors is a collection of Ceph monitors More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11049,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#path",
            },
            "summary": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11056,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11064,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#secretFile",
            },
            "summary": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11071,
          },
          "name": "secretFile",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#secretRef",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
            "summary": "Optional: SecretRef is reference to the authentication secret for User, default is empty.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11078,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CephFSVolumeSource#user",
            },
            "summary": "Optional: User is the rados user name, default is admin More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11085,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CertificateSigningRequest": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequest",
        },
        "summary": "Describes a certificate signing request.",
      },
      "fqn": "dummy.CertificateSigningRequest",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.certificates.v1beta1.CertificateSigningRequest\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.CertificateSigningRequestOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 630,
      },
      "name": "CertificateSigningRequest",
    },
    "dummy.CertificateSigningRequestList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList",
        },
        "summary": "undefined.",
      },
      "fqn": "dummy.CertificateSigningRequestList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.certificates.v1beta1.CertificateSigningRequestList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CertificateSigningRequestListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 652,
      },
      "name": "CertificateSigningRequestList",
    },
    "dummy.CertificateSigningRequestListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList",
        },
      },
      "fqn": "dummy.CertificateSigningRequestListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2874,
      },
      "name": "CertificateSigningRequestListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList#items",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2878,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CertificateSigningRequest",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2883,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.CertificateSigningRequestOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequest",
        },
        "summary": "Describes a certificate signing request.",
      },
      "fqn": "dummy.CertificateSigningRequestOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2856,
      },
      "name": "CertificateSigningRequestOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequest#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2860,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequest#spec",
            },
            "summary": "The certificate request itself and any additional information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2867,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CertificateSigningRequestSpec",
          },
        },
      ],
    },
    "dummy.CertificateSigningRequestSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec",
        },
        "remarks": "Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.",
        "summary": "This information is immutable after the request is created.",
      },
      "fqn": "dummy.CertificateSigningRequestSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5511,
      },
      "name": "CertificateSigningRequestSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#request",
            },
            "summary": "Base64-encoded PKCS#10 CSR data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5531,
          },
          "name": "request",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#extra",
            },
            "remarks": "See user.Info interface for details.",
            "summary": "Extra information about the requesting user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5517,
          },
          "name": "extra",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "collection": Object {
                  "elementtype": Object {
                    "primitive": "string",
                  },
                  "kind": "array",
                },
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#groups",
            },
            "remarks": "See user.Info interface for details.",
            "summary": "Group information about the requesting user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5524,
          },
          "name": "groups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#uid",
            },
            "remarks": "See user.Info interface for details.",
            "summary": "UID information about the requesting user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5538,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#usages",
            },
            "remarks": "See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
https://tools.ietf.org/html/rfc5280#section-4.2.1.12",
            "summary": "allowedUsages specifies a set of usage contexts the key will be valid for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5546,
          },
          "name": "usages",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec#username",
            },
            "remarks": "See user.Info interface for details.",
            "summary": "Information about the requesting user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5553,
          },
          "name": "username",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CinderPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource",
        },
        "remarks": "A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a cinder volume resource in Openstack.",
      },
      "fqn": "dummy.CinderPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8154,
      },
      "name": "CinderPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#volumeID",
            },
            "summary": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8182,
          },
          "name": "volumeID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8160,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8168,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderPersistentVolumeSource#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8175,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
      ],
    },
    "dummy.CinderVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.CinderVolumeSource",
        },
        "remarks": "A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a cinder volume resource in Openstack.",
      },
      "fqn": "dummy.CinderVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11094,
      },
      "name": "CinderVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#volumeID",
            },
            "summary": "volume id used to identify the volume in cinder More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11122,
          },
          "name": "volumeID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11100,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11108,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.CinderVolumeSource#secretRef",
            },
            "summary": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11115,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
      ],
    },
    "dummy.ClientIPConfig": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ClientIPConfig",
        },
        "summary": "ClientIPConfig represents the configurations of Client IP based session affinity.",
      },
      "fqn": "dummy.ClientIPConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11757,
      },
      "name": "ClientIPConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ClientIPConfig#timeoutSeconds",
            },
            "remarks": "The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \\"ClientIP\\". Default value is 10800(for 3 hours).",
            "summary": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11763,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.ClusterRole": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRole",
        },
        "summary": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
      },
      "fqn": "dummy.ClusterRole",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.ClusterRole\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ClusterRoleOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1697,
      },
      "name": "ClusterRole",
    },
    "dummy.ClusterRoleBinding": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding",
        },
        "remarks": "It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
        "summary": "ClusterRoleBinding references a ClusterRole, but not contain it.",
      },
      "fqn": "dummy.ClusterRoleBinding",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.ClusterRoleBinding\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ClusterRoleBindingOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1719,
      },
      "name": "ClusterRoleBinding",
    },
    "dummy.ClusterRoleBindingList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList",
        },
        "summary": "ClusterRoleBindingList is a collection of ClusterRoleBindings.",
      },
      "fqn": "dummy.ClusterRoleBindingList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.ClusterRoleBindingList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ClusterRoleBindingListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1741,
      },
      "name": "ClusterRoleBindingList",
    },
    "dummy.ClusterRoleBindingListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList",
        },
        "summary": "ClusterRoleBindingList is a collection of ClusterRoleBindings.",
      },
      "fqn": "dummy.ClusterRoleBindingListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4093,
      },
      "name": "ClusterRoleBindingListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList#items",
            },
            "summary": "Items is a list of ClusterRoleBindings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4099,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ClusterRoleBinding",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBindingList#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4106,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ClusterRoleBindingOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding",
        },
        "remarks": "It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
        "summary": "ClusterRoleBinding references a ClusterRole, but not contain it.",
      },
      "fqn": "dummy.ClusterRoleBindingOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4064,
      },
      "name": "ClusterRoleBindingOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#roleRef",
            },
            "remarks": "If the RoleRef cannot be resolved, the Authorizer must return an error.",
            "summary": "RoleRef can only reference a ClusterRole in the global namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4077,
          },
          "name": "roleRef",
          "type": Object {
            "fqn": "dummy.RoleRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4070,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleBinding#subjects",
            },
            "summary": "Subjects holds references to the objects the role applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4084,
          },
          "name": "subjects",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Subject",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ClusterRoleList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleList",
        },
        "summary": "ClusterRoleList is a collection of ClusterRoles.",
      },
      "fqn": "dummy.ClusterRoleList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.ClusterRoleList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ClusterRoleListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1763,
      },
      "name": "ClusterRoleList",
    },
    "dummy.ClusterRoleListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRoleList",
        },
        "summary": "ClusterRoleList is a collection of ClusterRoles.",
      },
      "fqn": "dummy.ClusterRoleListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4115,
      },
      "name": "ClusterRoleListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleList#items",
            },
            "summary": "Items is a list of ClusterRoles.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4121,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ClusterRole",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRoleList#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4128,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ClusterRoleOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.ClusterRole",
        },
        "summary": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
      },
      "fqn": "dummy.ClusterRoleOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4035,
      },
      "name": "ClusterRoleOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#aggregationRule",
            },
            "remarks": "If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.",
            "summary": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4041,
          },
          "name": "aggregationRule",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AggregationRule",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4048,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.ClusterRole#rules",
            },
            "summary": "Rules holds all the PolicyRules for this ClusterRole.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4055,
          },
          "name": "rules",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PolicyRule",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ComponentCondition": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ComponentCondition",
        },
        "summary": "Information about the condition of a component.",
      },
      "fqn": "dummy.ComponentCondition",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5662,
      },
      "name": "ComponentCondition",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentCondition#status",
            },
            "remarks": "Valid values for \\"Healthy\\": \\"True\\", \\"False\\", or \\"Unknown\\".",
            "summary": "Status of the condition for a component.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5682,
          },
          "name": "status",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentCondition#type",
            },
            "remarks": "Valid value: \\"Healthy\\"",
            "summary": "Type of condition for a component.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5689,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentCondition#error",
            },
            "remarks": "For example, a health check error code.",
            "summary": "Condition error code for a component.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5668,
          },
          "name": "error",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentCondition#message",
            },
            "remarks": "For example, information about a health check.",
            "summary": "Message about the condition for a component.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5675,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ComponentStatus": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ComponentStatus",
        },
        "summary": "ComponentStatus (and ComponentStatusList) holds the cluster validation info.",
      },
      "fqn": "dummy.ComponentStatus",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ComponentStatus\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ComponentStatusOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 740,
      },
      "name": "ComponentStatus",
    },
    "dummy.ComponentStatusList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ComponentStatusList",
        },
        "summary": "Status of all the conditions for the component as a list of ComponentStatus objects.",
      },
      "fqn": "dummy.ComponentStatusList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ComponentStatusList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ComponentStatusListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 762,
      },
      "name": "ComponentStatusList",
    },
    "dummy.ComponentStatusListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ComponentStatusList",
        },
        "summary": "Status of all the conditions for the component as a list of ComponentStatus objects.",
      },
      "fqn": "dummy.ComponentStatusListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2980,
      },
      "name": "ComponentStatusListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentStatusList#items",
            },
            "summary": "List of ComponentStatus objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2986,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ComponentStatus",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentStatusList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2993,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ComponentStatusOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ComponentStatus",
        },
        "summary": "ComponentStatus (and ComponentStatusList) holds the cluster validation info.",
      },
      "fqn": "dummy.ComponentStatusOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2958,
      },
      "name": "ComponentStatusOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentStatus#conditions",
            },
            "summary": "List of component conditions observed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2964,
          },
          "name": "conditions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ComponentCondition",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ComponentStatus#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2971,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.ConfigMap": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMap",
        },
        "summary": "ConfigMap holds configuration data for pods to consume.",
      },
      "fqn": "dummy.ConfigMap",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ConfigMap\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ConfigMapOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 784,
      },
      "name": "ConfigMap",
    },
    "dummy.ConfigMapEnvSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapEnvSource",
        },
        "remarks": "The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
        "summary": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.",
      },
      "fqn": "dummy.ConfigMapEnvSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11902,
      },
      "name": "ConfigMapEnvSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapEnvSource#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11908,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapEnvSource#optional",
            },
            "summary": "Specify whether the ConfigMap must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11915,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.ConfigMapKeySelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapKeySelector",
        },
        "summary": "Selects a key from a ConfigMap.",
      },
      "fqn": "dummy.ConfigMapKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12549,
      },
      "name": "ConfigMapKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#key",
            },
            "summary": "The key to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12555,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12562,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapKeySelector#optional",
            },
            "summary": "Specify whether the ConfigMap or it's key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12569,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.ConfigMapList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapList",
        },
        "summary": "ConfigMapList is a resource containing a list of ConfigMap objects.",
      },
      "fqn": "dummy.ConfigMapList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ConfigMapList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ConfigMapListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 806,
      },
      "name": "ConfigMapList",
    },
    "dummy.ConfigMapListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapList",
        },
        "summary": "ConfigMapList is a resource containing a list of ConfigMap objects.",
      },
      "fqn": "dummy.ConfigMapListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3031,
      },
      "name": "ConfigMapListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapList#items",
            },
            "summary": "Items is the list of ConfigMaps.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3037,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ConfigMap",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapList#metadata",
            },
            "summary": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3044,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ConfigMapNodeConfigSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource",
        },
        "summary": "ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.",
      },
      "fqn": "dummy.ConfigMapNodeConfigSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10558,
      },
      "name": "ConfigMapNodeConfigSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#kubeletConfigKey",
            },
            "summary": "KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10564,
          },
          "name": "kubeletConfigKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#name",
            },
            "summary": "Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10571,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#namespace",
            },
            "summary": "Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10578,
          },
          "name": "namespace",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#resourceVersion",
            },
            "summary": "ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10585,
          },
          "name": "resourceVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapNodeConfigSource#uid",
            },
            "summary": "UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10592,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ConfigMapOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMap",
        },
        "summary": "ConfigMap holds configuration data for pods to consume.",
      },
      "fqn": "dummy.ConfigMapOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3002,
      },
      "name": "ConfigMapOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMap#binaryData",
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process. Using this field will require 1.10+ apiserver and kubelet.",
            "summary": "BinaryData contains the binary data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3008,
          },
          "name": "binaryData",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMap#data",
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
            "summary": "Data contains the configuration data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3015,
          },
          "name": "data",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMap#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3022,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.ConfigMapProjection": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapProjection",
        },
        "remarks": "The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
        "summary": "Adapts a ConfigMap into a projected volume.",
      },
      "fqn": "dummy.ConfigMapProjection",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12758,
      },
      "name": "ConfigMapProjection",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12764,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.KeyToPath",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12771,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapProjection#optional",
            },
            "summary": "Specify whether the ConfigMap or it's keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12778,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.ConfigMapVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource",
        },
        "remarks": "The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
        "summary": "Adapts a ConfigMap into a volume.",
      },
      "fqn": "dummy.ConfigMapVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11133,
      },
      "name": "ConfigMapVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11140,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11147,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.KeyToPath",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11154,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ConfigMapVolumeSource#optional",
            },
            "summary": "Specify whether the ConfigMap or it's keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11161,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Container": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Container",
        },
        "summary": "A single application container that you want to run within a pod.",
      },
      "fqn": "dummy.Container",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9034,
      },
      "name": "Container",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#name",
            },
            "remarks": "Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
            "summary": "Name of the container specified as a DNS_LABEL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9097,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#args",
            },
            "remarks": "The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Arguments to the entrypoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9040,
          },
          "name": "args",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#command",
            },
            "remarks": "Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
            "summary": "Entrypoint array.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9047,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#env",
            },
            "remarks": "Cannot be updated.",
            "summary": "List of environment variables to set in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9054,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EnvVar",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#envFrom",
            },
            "remarks": "The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
            "summary": "List of sources to populate environment variables in the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9061,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EnvFromSource",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#image",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
            "summary": "Docker image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9068,
          },
          "name": "image",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#imagePullPolicy",
            },
            "default": "Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "remarks": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
            "summary": "Image pull policy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9076,
          },
          "name": "imagePullPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#lifecycle",
            },
            "remarks": "Cannot be updated.",
            "summary": "Actions that the management system should take in response to container lifecycle events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9083,
          },
          "name": "lifecycle",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Lifecycle",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#livenessProbe",
            },
            "remarks": "Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container liveness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9090,
          },
          "name": "livenessProbe",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Probe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#ports",
            },
            "remarks": "Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\"0.0.0.0\\" address inside a container will be accessible from the network. Cannot be updated.",
            "summary": "List of ports to expose from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9104,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ContainerPort",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#readinessProbe",
            },
            "remarks": "Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Periodic probe of container service readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9111,
          },
          "name": "readinessProbe",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Probe",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#resources",
            },
            "remarks": "Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Compute Resources required by this container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9118,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceRequirements",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#securityContext",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "Security options the pod should run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9125,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#stdin",
            },
            "default": "false.",
            "remarks": "If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
            "summary": "Whether this container should allocate a buffer for stdin in the container runtime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9133,
          },
          "name": "stdin",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#stdinOnce",
            },
            "default": "false",
            "remarks": "When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
            "summary": "Whether the container runtime should close the stdin channel after it has been opened by a single attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9141,
          },
          "name": "stdinOnce",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#terminationMessagePath",
            },
            "default": "dev/termination-log. Cannot be updated.",
            "remarks": "Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
            "summary": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9149,
          },
          "name": "terminationMessagePath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#terminationMessagePolicy",
            },
            "default": "File. Cannot be updated.",
            "remarks": "File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
            "summary": "Indicate how the termination message should be populated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9157,
          },
          "name": "terminationMessagePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#tty",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9165,
          },
          "name": "tty",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#volumeDevices",
            },
            "remarks": "This is a beta feature.",
            "summary": "volumeDevices is the list of block devices to be used by the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9172,
          },
          "name": "volumeDevices",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.VolumeDevice",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#volumeMounts",
            },
            "remarks": "Cannot be updated.",
            "summary": "Pod volumes to mount into the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9179,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.VolumeMount",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Container#workingDir",
            },
            "remarks": "If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
            "summary": "Container's working directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9186,
          },
          "name": "workingDir",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ContainerPort": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ContainerPort",
        },
        "summary": "ContainerPort represents a network port in a single container.",
      },
      "fqn": "dummy.ContainerPort",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10794,
      },
      "name": "ContainerPort",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ContainerPort#containerPort",
            },
            "remarks": "This must be a valid port number, 0 < x < 65536.",
            "summary": "Number of port to expose on the pod's IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10800,
          },
          "name": "containerPort",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ContainerPort#hostIP",
            },
            "summary": "What host IP to bind the external port to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10807,
          },
          "name": "hostIP",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ContainerPort#hostPort",
            },
            "remarks": "If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
            "summary": "Number of port to expose on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10814,
          },
          "name": "hostPort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ContainerPort#name",
            },
            "remarks": "Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
            "summary": "If specified, this must be an IANA_SVC_NAME and unique within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10821,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ContainerPort#protocol",
            },
            "default": "TCP\\".",
            "remarks": "Must be UDP, TCP, or SCTP. Defaults to \\"TCP\\".",
            "summary": "Protocol for port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10829,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ControllerRevision": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ControllerRevision",
        },
        "remarks": "Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
        "summary": "ControllerRevision implements an immutable snapshot of state data.",
      },
      "fqn": "dummy.ControllerRevision",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.ControllerRevision\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ControllerRevisionOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 99,
      },
      "name": "ControllerRevision",
    },
    "dummy.ControllerRevisionList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ControllerRevisionList",
        },
        "summary": "ControllerRevisionList is a resource containing a list of ControllerRevision objects.",
      },
      "fqn": "dummy.ControllerRevisionList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.ControllerRevisionList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ControllerRevisionListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 121,
      },
      "name": "ControllerRevisionList",
    },
    "dummy.ControllerRevisionListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ControllerRevisionList",
        },
        "summary": "ControllerRevisionList is a resource containing a list of ControllerRevision objects.",
      },
      "fqn": "dummy.ControllerRevisionListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2367,
      },
      "name": "ControllerRevisionListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ControllerRevisionList#items",
            },
            "summary": "Items is the list of ControllerRevisions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2373,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ControllerRevision",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ControllerRevisionList#metadata",
            },
            "summary": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2380,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ControllerRevisionOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ControllerRevision",
        },
        "remarks": "Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.",
        "summary": "ControllerRevision implements an immutable snapshot of state data.",
      },
      "fqn": "dummy.ControllerRevisionOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2338,
      },
      "name": "ControllerRevisionOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#revision",
            },
            "summary": "Revision indicates the revision of the state represented by Data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2358,
          },
          "name": "revision",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#data",
            },
            "summary": "Data is the serialized representation of the state.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2344,
          },
          "name": "data",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RawExtension",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ControllerRevision#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2351,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.CronJob": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.CronJob",
        },
        "summary": "CronJob represents the configuration of a single cron job.",
      },
      "fqn": "dummy.CronJob",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.batch.v1beta1.CronJob\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.CronJobOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 586,
      },
      "name": "CronJob",
    },
    "dummy.CronJobList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.CronJobList",
        },
        "summary": "CronJobList is a collection of cron jobs.",
      },
      "fqn": "dummy.CronJobList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.batch.v1beta1.CronJobList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CronJobListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 608,
      },
      "name": "CronJobList",
    },
    "dummy.CronJobListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.CronJobList",
        },
        "summary": "CronJobList is a collection of cron jobs.",
      },
      "fqn": "dummy.CronJobListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2834,
      },
      "name": "CronJobListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobList#items",
            },
            "summary": "items is the list of CronJobs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2840,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CronJob",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2847,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.CronJobOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.CronJob",
        },
        "summary": "CronJob represents the configuration of a single cron job.",
      },
      "fqn": "dummy.CronJobOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2812,
      },
      "name": "CronJobOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJob#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2818,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJob#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of a cron job, including the schedule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2825,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CronJobSpec",
          },
        },
      ],
    },
    "dummy.CronJobSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.CronJobSpec",
        },
        "summary": "CronJobSpec describes how the job execution will look like and when it will actually run.",
      },
      "fqn": "dummy.CronJobSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5451,
      },
      "name": "CronJobSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#jobTemplate",
            },
            "summary": "Specifies the job that will be created when executing a CronJob.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5472,
          },
          "name": "jobTemplate",
          "type": Object {
            "fqn": "dummy.JobTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#schedule",
            },
            "summary": "The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5479,
          },
          "name": "schedule",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#concurrencyPolicy",
            },
            "remarks": "Valid values are: - \\"Allow\\" (default): allows CronJobs to run concurrently; - \\"Forbid\\": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \\"Replace\\": cancels currently running job and replaces it with a new one",
            "summary": "Specifies how to treat concurrent executions of a Job.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5457,
          },
          "name": "concurrencyPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#failedJobsHistoryLimit",
            },
            "default": "1.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
            "summary": "The number of failed finished jobs to retain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5465,
          },
          "name": "failedJobsHistoryLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#startingDeadlineSeconds",
            },
            "remarks": "Missed jobs executions will be counted as failed ones.",
            "summary": "Optional deadline in seconds for starting the job if it misses scheduled time for any reason.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5486,
          },
          "name": "startingDeadlineSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#successfulJobsHistoryLimit",
            },
            "default": "3.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.",
            "summary": "The number of successful finished jobs to retain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5494,
          },
          "name": "successfulJobsHistoryLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.CronJobSpec#suspend",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5502,
          },
          "name": "suspend",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.CrossVersionObjectReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference",
        },
        "summary": "CrossVersionObjectReference contains enough information to let you identify the referred resource.",
      },
      "fqn": "dummy.CrossVersionObjectReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7741,
      },
      "name": "CrossVersionObjectReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#kind",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\\"",
            "summary": "Kind of the referent;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7754,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#name",
            },
            "remarks": "More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name of the referent;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7761,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.CrossVersionObjectReference#apiVersion",
            },
            "summary": "API version of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7747,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CustomResourceColumnDefinition": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition",
        },
        "summary": "CustomResourceColumnDefinition specifies a column for server side printing.",
      },
      "fqn": "dummy.CustomResourceColumnDefinition",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10171,
      },
      "name": "CustomResourceColumnDefinition",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#name",
            },
            "summary": "name is a human readable name for the column.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10198,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#type",
            },
            "remarks": "See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
            "summary": "type is an OpenAPI type definition for this column.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10212,
          },
          "name": "type",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#description",
            },
            "summary": "description is a human readable description of this column.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10184,
          },
          "name": "description",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#format",
            },
            "remarks": "The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
            "summary": "format is an optional OpenAPI type definition for this column.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10191,
          },
          "name": "format",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#JSONPath",
            },
            "summary": "JSONPath is a simple JSON path, i.e. with array notation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10177,
          },
          "name": "jsonPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition#priority",
            },
            "remarks": "Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
            "summary": "priority is an integer defining the relative importance of this column compared to others.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10205,
          },
          "name": "priority",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.CustomResourceConversion": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion",
        },
        "summary": "CustomResourceConversion describes how to convert different versions of a CR.",
      },
      "fqn": "dummy.CustomResourceConversion",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10221,
      },
      "name": "CustomResourceConversion",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion#strategy",
            },
            "remarks": "Allowed values are: - \`None\`: The converter only change the apiVersion and would not touch any other field in the CR. - \`Webhook\`: API Server will call to an external webhook to do the conversion. Additional information is needed for this option.",
            "summary": "\`strategy\` specifies the conversion strategy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10235,
          },
          "name": "strategy",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion#conversionReviewVersions",
            },
            "default": "v1beta1']\`.",
            "remarks": "API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, conversion will fail for this object. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Default to \`['v1beta1']\`.",
            "summary": "ConversionReviewVersions is an ordered list of preferred \`ConversionReview\` versions the Webhook expects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10228,
          },
          "name": "conversionReviewVersions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion#webhookClientConfig",
            },
            "remarks": "This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature.",
            "summary": "\`webhookClientConfig\` is the instructions for how to call the webhook if strategy is \`Webhook\`.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10242,
          },
          "name": "webhookClientConfig",
          "optional": true,
          "type": Object {
            "fqn": "dummy.WebhookClientConfig",
          },
        },
      ],
    },
    "dummy.CustomResourceDefinition": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition",
        },
        "remarks": "Its name MUST be in the format <.spec.name>.<.spec.group>.",
        "summary": "CustomResourceDefinition represents a resource that should be exposed on the API server.",
      },
      "fqn": "dummy.CustomResourceDefinition",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CustomResourceDefinitionOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2141,
      },
      "name": "CustomResourceDefinition",
    },
    "dummy.CustomResourceDefinitionList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList",
        },
        "summary": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
      },
      "fqn": "dummy.CustomResourceDefinitionList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.CustomResourceDefinitionListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2163,
      },
      "name": "CustomResourceDefinitionList",
    },
    "dummy.CustomResourceDefinitionListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList",
        },
        "summary": "CustomResourceDefinitionList is a list of CustomResourceDefinition objects.",
      },
      "fqn": "dummy.CustomResourceDefinitionListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4573,
      },
      "name": "CustomResourceDefinitionListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList#items",
            },
            "summary": "Items individual CustomResourceDefinitions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4579,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CustomResourceDefinition",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4584,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.CustomResourceDefinitionNames": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames",
        },
        "summary": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition.",
      },
      "fqn": "dummy.CustomResourceDefinitionNames",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10251,
      },
      "name": "CustomResourceDefinitionNames",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#kind",
            },
            "remarks": "It is normally CamelCase and singular.",
            "summary": "Kind is the serialized kind of the resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10264,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#plural",
            },
            "remarks": "It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
            "summary": "Plural is the plural name of the resource to serve.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10279,
          },
          "name": "plural",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#categories",
            },
            "summary": "Categories is a list of grouped resources custom resources belong to (e.g. 'all').",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10257,
          },
          "name": "categories",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#listKind",
            },
            "default": "kind>List.",
            "remarks": "Defaults to <kind>List.",
            "summary": "ListKind is the serialized kind of the list for this resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10272,
          },
          "name": "listKind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#shortNames",
            },
            "remarks": "It must be all lowercase.",
            "summary": "ShortNames are short names for the resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10286,
          },
          "name": "shortNames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames#singular",
            },
            "default": "lowercased <kind>",
            "remarks": "It must be all lowercase  Defaults to lowercased <kind>",
            "summary": "Singular is the singular name of the resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10294,
          },
          "name": "singular",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CustomResourceDefinitionOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition",
        },
        "remarks": "Its name MUST be in the format <.spec.name>.<.spec.group>.",
        "summary": "CustomResourceDefinition represents a resource that should be exposed on the API server.",
      },
      "fqn": "dummy.CustomResourceDefinitionOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4553,
      },
      "name": "CustomResourceDefinitionOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition#spec",
            },
            "summary": "Spec describes how the user wants the resources to appear.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4564,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.CustomResourceDefinitionSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4557,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.CustomResourceDefinitionSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec",
        },
        "summary": "CustomResourceDefinitionSpec describes how a user wants their resource to appear.",
      },
      "fqn": "dummy.CustomResourceDefinitionSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7160,
      },
      "name": "CustomResourceDefinitionSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#group",
            },
            "summary": "Group is the group this resource belongs in.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7181,
          },
          "name": "group",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#names",
            },
            "summary": "Names are the names used to describe this custom resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7188,
          },
          "name": "names",
          "type": Object {
            "fqn": "dummy.CustomResourceDefinitionNames",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#scope",
            },
            "default": "namespaced",
            "remarks": "Default is namespaced",
            "summary": "Scope indicates whether this resource is cluster or namespace scoped.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7196,
          },
          "name": "scope",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#additionalPrinterColumns",
            },
            "default": "a created-at column. Optional, the global columns for all versions. Top-level and per-version columns are mutually exclusive.",
            "summary": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Optional, the global columns for all versions. Top-level and per-version columns are mutually exclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7167,
          },
          "name": "additionalPrinterColumns",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CustomResourceColumnDefinition",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#conversion",
            },
            "summary": "\`conversion\` defines conversion settings for the CRD.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7174,
          },
          "name": "conversion",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceConversion",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#subresources",
            },
            "remarks": "Top-level and per-version subresources are mutually exclusive.",
            "summary": "Subresources describes the subresources for CustomResource Optional, the global subresources for all versions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7203,
          },
          "name": "subresources",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceSubresources",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#validation",
            },
            "remarks": "Top-level and per-version schemas are mutually exclusive.",
            "summary": "Validation describes the validation methods for CustomResources Optional, the global validation schema for all versions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7210,
          },
          "name": "validation",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceValidation",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#version",
            },
            "remarks": "Optional, but at least one of Version or Versions must be set. Deprecated: Please use \`Versions\`.",
            "summary": "Version is the version this resource belongs in Should be always first item in Versions field if provided.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7217,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec#versions",
            },
            "remarks": "If Version field is provided, this field is optional. Validation: All versions must use the same validation schema for now. i.e., top level Validation field is applied to all of these versions. Order: The version name will be used to compute the order. If the version string is \\"kube-like\\", it will sort above non \\"kube-like\\" version strings, which are ordered lexicographically. \\"Kube-like\\" versions start with a \\"v\\", then are followed by a number (the major version), then optionally the string \\"alpha\\" or \\"beta\\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.",
            "summary": "Versions is the list of all supported versions for this resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7224,
          },
          "name": "versions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CustomResourceDefinitionVersion",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.CustomResourceDefinitionVersion": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion",
        },
        "summary": "CustomResourceDefinitionVersion describes a version for CRD.",
      },
      "fqn": "dummy.CustomResourceDefinitionVersion",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10340,
      },
      "name": "CustomResourceDefinitionVersion",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#name",
            },
            "summary": "Name is the version name, e.g. “v1”, “v2beta1”, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10354,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#served",
            },
            "summary": "Served is a flag enabling/disabling this version from being served via REST APIs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10368,
          },
          "name": "served",
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#storage",
            },
            "remarks": "There must be exactly one flagged as storage version.",
            "summary": "Storage flags the version as storage version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10375,
          },
          "name": "storage",
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#additionalPrinterColumns",
            },
            "default": "a created-at column. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature. NOTE: CRDs created prior to 1.13 populated the top-level additionalPrinterColumns field by default. To apply an update that changes to per-version additionalPrinterColumns, the top-level additionalPrinterColumns field must be explicitly set to null",
            "summary": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature. NOTE: CRDs created prior to 1.13 populated the top-level additionalPrinterColumns field by default. To apply an update that changes to per-version additionalPrinterColumns, the top-level additionalPrinterColumns field must be explicitly set to null.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10347,
          },
          "name": "additionalPrinterColumns",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.CustomResourceColumnDefinition",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#schema",
            },
            "remarks": "Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature.",
            "summary": "Schema describes the schema for CustomResource used in validation, pruning, and defaulting.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10361,
          },
          "name": "schema",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceValidation",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion#subresources",
            },
            "remarks": "Per-version subresources must not all be set to identical values (top-level subresources should be used instead) This field is alpha-level and is only honored by servers that enable the CustomResourceWebhookConversion feature.",
            "summary": "Subresources describes the subresources for CustomResource Top-level and per-version subresources are mutually exclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10382,
          },
          "name": "subresources",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceSubresources",
          },
        },
      ],
    },
    "dummy.CustomResourceSubresourceScale": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale",
        },
        "summary": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
      },
      "fqn": "dummy.CustomResourceSubresourceScale",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11948,
      },
      "name": "CustomResourceSubresourceScale",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale#specReplicasPath",
            },
            "summary": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11961,
          },
          "name": "specReplicasPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale#statusReplicasPath",
            },
            "summary": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11968,
          },
          "name": "statusReplicasPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale#labelSelectorPath",
            },
            "summary": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11954,
          },
          "name": "labelSelectorPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CustomResourceSubresources": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources",
        },
        "summary": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
      },
      "fqn": "dummy.CustomResourceSubresources",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10303,
      },
      "name": "CustomResourceSubresources",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources#scale",
            },
            "summary": "Scale denotes the scale subresource for CustomResources.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10309,
          },
          "name": "scale",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CustomResourceSubresourceScale",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources#status",
            },
            "summary": "Status denotes the status subresource for CustomResources.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10316,
          },
          "name": "status",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.CustomResourceValidation": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation",
        },
        "summary": "CustomResourceValidation is a list of validation methods for CustomResources.",
      },
      "fqn": "dummy.CustomResourceValidation",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10325,
      },
      "name": "CustomResourceValidation",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation#openAPIV3Schema",
            },
            "summary": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10331,
          },
          "name": "openAPIV3Schema",
          "optional": true,
          "type": Object {
            "fqn": "dummy.JSONSchemaProps",
          },
        },
      ],
    },
    "dummy.DaemonSet": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSet",
        },
        "summary": "DaemonSet represents the configuration of a daemon set.",
      },
      "fqn": "dummy.DaemonSet",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.DaemonSet\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.DaemonSetOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 143,
      },
      "name": "DaemonSet",
    },
    "dummy.DaemonSetList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSetList",
        },
        "summary": "DaemonSetList is a collection of daemon sets.",
      },
      "fqn": "dummy.DaemonSetList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.DaemonSetList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.DaemonSetListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 165,
      },
      "name": "DaemonSetList",
    },
    "dummy.DaemonSetListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSetList",
        },
        "summary": "DaemonSetList is a collection of daemon sets.",
      },
      "fqn": "dummy.DaemonSetListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2411,
      },
      "name": "DaemonSetListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetList#items",
            },
            "summary": "A list of daemon sets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2417,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.DaemonSet",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2424,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.DaemonSetOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSet",
        },
        "summary": "DaemonSet represents the configuration of a daemon set.",
      },
      "fqn": "dummy.DaemonSetOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2389,
      },
      "name": "DaemonSetOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSet#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2395,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSet#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "The desired behavior of this daemon set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2402,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DaemonSetSpec",
          },
        },
      ],
    },
    "dummy.DaemonSetSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSetSpec",
        },
        "summary": "DaemonSetSpec is the specification of a daemon set.",
      },
      "fqn": "dummy.DaemonSetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4991,
      },
      "name": "DaemonSetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#selector",
            },
            "remarks": "Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "summary": "A label query over pods that are managed by the daemon set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5013,
          },
          "name": "selector",
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#template",
            },
            "remarks": "The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "summary": "An object that describes the pod that will be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5020,
          },
          "name": "template",
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#minReadySeconds",
            },
            "default": "0 (pod will be considered available as soon as it is ready).",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready).",
            "summary": "The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4998,
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#revisionHistoryLimit",
            },
            "default": "10.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
            "summary": "The number of old history to retain to allow rollback.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5006,
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetSpec#updateStrategy",
            },
            "summary": "An update strategy to replace existing DaemonSet pods with new pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5027,
          },
          "name": "updateStrategy",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DaemonSetUpdateStrategy",
          },
        },
      ],
    },
    "dummy.DaemonSetUpdateStrategy": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy",
        },
        "summary": "DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.",
      },
      "fqn": "dummy.DaemonSetUpdateStrategy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7571,
      },
      "name": "DaemonSetUpdateStrategy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy#rollingUpdate",
            },
            "remarks": "Present only if type = \\"RollingUpdate\\".",
            "summary": "Rolling update config params.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7577,
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RollingUpdateDaemonSet",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DaemonSetUpdateStrategy#type",
            },
            "default": "RollingUpdate.",
            "remarks": "Can be \\"RollingUpdate\\" or \\"OnDelete\\". Default is RollingUpdate.",
            "summary": "Type of daemon set update.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7585,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.DeleteOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions",
        },
        "summary": "DeleteOptions may be provided when deleting an API object.",
      },
      "fqn": "dummy.DeleteOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6824,
      },
      "name": "DeleteOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#apiVersion",
            },
            "remarks": "Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
            "summary": "APIVersion defines the versioned schema of this representation of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6830,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#dryRun",
            },
            "remarks": "An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "summary": "When present, indicates that modifications should not be persisted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6837,
          },
          "name": "dryRun",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#gracePeriodSeconds",
            },
            "default": "a per object value if not specified. zero means delete immediately.",
            "remarks": "Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
            "summary": "The duration in seconds before the object should be deleted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6845,
          },
          "name": "gracePeriodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#kind",
            },
            "remarks": "Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Kind is a string value representing the REST resource this object represents.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6852,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#orphanDependents",
            },
            "summary": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \\"orphan\\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6859,
          },
          "name": "orphanDependents",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#preconditions",
            },
            "remarks": "If not possible, a 409 Conflict status will be returned.",
            "summary": "Must be fulfilled before a deletion is carried out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6866,
          },
          "name": "preconditions",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Preconditions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions#propagationPolicy",
            },
            "remarks": "Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
            "summary": "Whether and how garbage collection will be performed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6873,
          },
          "name": "propagationPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Deployment": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.Deployment",
        },
        "summary": "Deployment enables declarative updates for Pods and ReplicaSets.",
      },
      "fqn": "dummy.Deployment",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.Deployment\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.DeploymentOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 187,
      },
      "name": "Deployment",
    },
    "dummy.DeploymentList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DeploymentList",
        },
        "summary": "DeploymentList is a list of Deployments.",
      },
      "fqn": "dummy.DeploymentList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.DeploymentList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.DeploymentListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 209,
      },
      "name": "DeploymentList",
    },
    "dummy.DeploymentListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DeploymentList",
        },
        "summary": "DeploymentList is a list of Deployments.",
      },
      "fqn": "dummy.DeploymentListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2455,
      },
      "name": "DeploymentListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentList#items",
            },
            "summary": "Items is the list of Deployments.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2461,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Deployment",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentList#metadata",
            },
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2468,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.DeploymentOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.Deployment",
        },
        "summary": "Deployment enables declarative updates for Pods and ReplicaSets.",
      },
      "fqn": "dummy.DeploymentOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2433,
      },
      "name": "DeploymentOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.Deployment#metadata",
            },
            "summary": "Standard object metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2439,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.Deployment#spec",
            },
            "summary": "Specification of the desired behavior of the Deployment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2446,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DeploymentSpec",
          },
        },
      ],
    },
    "dummy.DeploymentSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DeploymentSpec",
        },
        "summary": "DeploymentSpec is the specification of the desired behavior of the Deployment.",
      },
      "fqn": "dummy.DeploymentSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5036,
      },
      "name": "DeploymentSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#selector",
            },
            "remarks": "Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment. It must match the pod template's labels.",
            "summary": "Label selector for pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5081,
          },
          "name": "selector",
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#template",
            },
            "summary": "Template describes the pods that will be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5095,
          },
          "name": "template",
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#minReadySeconds",
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5043,
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#paused",
            },
            "summary": "Indicates that the deployment is paused.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5050,
          },
          "name": "paused",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#progressDeadlineSeconds",
            },
            "default": "600s.",
            "remarks": "The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.",
            "summary": "The maximum time in seconds for a deployment to make progress before it is considered to be failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5058,
          },
          "name": "progressDeadlineSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#replicas",
            },
            "default": "1.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
            "summary": "Number of desired pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5066,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#revisionHistoryLimit",
            },
            "default": "10.",
            "remarks": "This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.",
            "summary": "The number of old ReplicaSets to retain to allow rollback.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5074,
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentSpec#strategy",
            },
            "summary": "The deployment strategy to use to replace existing pods with new ones.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5088,
          },
          "name": "strategy",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DeploymentStrategy",
          },
        },
      ],
    },
    "dummy.DeploymentStrategy": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.DeploymentStrategy",
        },
        "summary": "DeploymentStrategy describes how to replace existing pods with new ones.",
      },
      "fqn": "dummy.DeploymentStrategy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7594,
      },
      "name": "DeploymentStrategy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentStrategy#rollingUpdate",
            },
            "remarks": "Present only if DeploymentStrategyType = RollingUpdate.",
            "summary": "Rolling update config params.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7600,
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RollingUpdateDeployment",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.DeploymentStrategy#type",
            },
            "default": "RollingUpdate.",
            "remarks": "Can be \\"Recreate\\" or \\"RollingUpdate\\". Default is RollingUpdate.",
            "summary": "Type of deployment.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7608,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.DownwardAPIProjection": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.DownwardAPIProjection",
        },
        "remarks": "Note that this is identical to a downwardAPI volume source without the default mode.",
        "summary": "Represents downward API info for projecting into a projected volume.",
      },
      "fqn": "dummy.DownwardAPIProjection",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12787,
      },
      "name": "DownwardAPIProjection",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIProjection#items",
            },
            "summary": "Items is a list of DownwardAPIVolume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12793,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.DownwardAPIVolumeFile",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.DownwardAPIVolumeFile": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile",
        },
        "summary": "DownwardAPIVolumeFile represents information to create the file containing the pod field.",
      },
      "fqn": "dummy.DownwardAPIVolumeFile",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12433,
      },
      "name": "DownwardAPIVolumeFile",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#path",
            },
            "remarks": "Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
            "summary": "Required: Path is  the relative path name of the file to be created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12453,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#fieldRef",
            },
            "summary": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12439,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectFieldSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12446,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeFile#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12460,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceFieldSelector",
          },
        },
      ],
    },
    "dummy.DownwardAPIVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource",
        },
        "remarks": "Downward API volumes support ownership management and SELinux relabeling.",
        "summary": "DownwardAPIVolumeSource represents a volume containing downward API info.",
      },
      "fqn": "dummy.DownwardAPIVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11214,
      },
      "name": "DownwardAPIVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11221,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.DownwardAPIVolumeSource#items",
            },
            "summary": "Items is a list of downward API volume file.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11228,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.DownwardAPIVolumeFile",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.EmptyDirVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource",
        },
        "remarks": "Empty directory volumes support ownership management and SELinux relabeling.",
        "summary": "Represents an empty directory for a pod.",
      },
      "fqn": "dummy.EmptyDirVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11237,
      },
      "name": "EmptyDirVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource#medium",
            },
            "remarks": "The default is \\"\\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "What type of storage medium should back this directory.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11243,
          },
          "name": "medium",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EmptyDirVolumeSource#sizeLimit",
            },
            "remarks": "The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
            "summary": "Total amount of local storage required for this EmptyDir volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11250,
          },
          "name": "sizeLimit",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Quantity",
          },
        },
      ],
    },
    "dummy.EndpointAddress": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EndpointAddress",
        },
        "summary": "EndpointAddress is a tuple that describes single IP address.",
      },
      "fqn": "dummy.EndpointAddress",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7792,
      },
      "name": "EndpointAddress",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointAddress#ip",
            },
            "remarks": "May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.",
            "summary": "The IP of this endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7805,
          },
          "name": "ip",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointAddress#hostname",
            },
            "summary": "The Hostname of this endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7798,
          },
          "name": "hostname",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointAddress#nodeName",
            },
            "remarks": "This can be used to determine endpoints local to a node.",
            "summary": "Optional: Node hosting this endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7812,
          },
          "name": "nodeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointAddress#targetRef",
            },
            "summary": "Reference to object providing the endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7819,
          },
          "name": "targetRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
      ],
    },
    "dummy.EndpointPort": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EndpointPort",
        },
        "summary": "EndpointPort is a tuple that describes a single port.",
      },
      "fqn": "dummy.EndpointPort",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7828,
      },
      "name": "EndpointPort",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointPort#port",
            },
            "summary": "The port number of the endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7841,
          },
          "name": "port",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointPort#name",
            },
            "summary": "The name of this port (corresponds to ServicePort.Name). Must be a DNS_LABEL. Optional only if one port is defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7834,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointPort#protocol",
            },
            "default": "TCP.",
            "remarks": "Must be UDP, TCP, or SCTP. Default is TCP.",
            "summary": "The IP protocol for this port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7849,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.EndpointSubset": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EndpointSubset",
        },
        "remarks": "The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
{
  Addresses: [{\\"ip\\": \\"10.10.1.1\\"}, {\\"ip\\": \\"10.10.2.2\\"}],
  Ports:     [{\\"name\\": \\"a\\", \\"port\\": 8675}, {\\"name\\": \\"b\\", \\"port\\": 309}]
}
The resulting set of endpoints can be viewed as:
  a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
  b: [ 10.10.1.1:309, 10.10.2.2:309 ]",
        "summary": "EndpointSubset is a group of addresses with a common set of ports.",
      },
      "fqn": "dummy.EndpointSubset",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5705,
      },
      "name": "EndpointSubset",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointSubset#addresses",
            },
            "remarks": "These endpoints should be considered safe for load balancers and clients to utilize.",
            "summary": "IP addresses which offer the related ports that are marked as ready.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5711,
          },
          "name": "addresses",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EndpointAddress",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointSubset#notReadyAddresses",
            },
            "summary": "IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5718,
          },
          "name": "notReadyAddresses",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EndpointAddress",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointSubset#ports",
            },
            "summary": "Port numbers available on the related IP addresses.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5725,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EndpointPort",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Endpoints": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Endpoints",
        },
        "remarks": "Example:
Name: \\"mysvc\\",
Subsets: [
  {
    Addresses: [{\\"ip\\": \\"10.10.1.1\\"}, {\\"ip\\": \\"10.10.2.2\\"}],
    Ports: [{\\"name\\": \\"a\\", \\"port\\": 8675}, {\\"name\\": \\"b\\", \\"port\\": 309}]
  },
  {
    Addresses: [{\\"ip\\": \\"10.10.3.3\\"}],
    Ports: [{\\"name\\": \\"a\\", \\"port\\": 93}, {\\"name\\": \\"b\\", \\"port\\": 76}]
  },
]",
        "summary": "Endpoints is a collection of endpoints that implement the actual service.",
      },
      "fqn": "dummy.Endpoints",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Endpoints\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.EndpointsOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 839,
      },
      "name": "Endpoints",
    },
    "dummy.EndpointsList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EndpointsList",
        },
        "summary": "EndpointsList is a list of endpoints.",
      },
      "fqn": "dummy.EndpointsList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.EndpointsList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.EndpointsListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 861,
      },
      "name": "EndpointsList",
    },
    "dummy.EndpointsListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EndpointsList",
        },
        "summary": "EndpointsList is a list of endpoints.",
      },
      "fqn": "dummy.EndpointsListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3086,
      },
      "name": "EndpointsListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointsList#items",
            },
            "summary": "List of endpoints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3092,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Endpoints",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EndpointsList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3099,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.EndpointsOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Endpoints",
        },
        "remarks": "Example:
Name: \\"mysvc\\",
Subsets: [
  {
    Addresses: [{\\"ip\\": \\"10.10.1.1\\"}, {\\"ip\\": \\"10.10.2.2\\"}],
    Ports: [{\\"name\\": \\"a\\", \\"port\\": 8675}, {\\"name\\": \\"b\\", \\"port\\": 309}]
  },
  {
    Addresses: [{\\"ip\\": \\"10.10.3.3\\"}],
    Ports: [{\\"name\\": \\"a\\", \\"port\\": 93}, {\\"name\\": \\"b\\", \\"port\\": 76}]
  },
]",
        "summary": "Endpoints is a collection of endpoints that implement the actual service.",
      },
      "fqn": "dummy.EndpointsOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3064,
      },
      "name": "EndpointsOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Endpoints#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3070,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Endpoints#subsets",
            },
            "remarks": "Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.",
            "summary": "The set of all endpoints is the union of all subsets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3077,
          },
          "name": "subsets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EndpointSubset",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.EnvFromSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EnvFromSource",
        },
        "summary": "EnvFromSource represents the source of a set of ConfigMaps.",
      },
      "fqn": "dummy.EnvFromSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10023,
      },
      "name": "EnvFromSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvFromSource#configMapRef",
            },
            "summary": "The ConfigMap to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10029,
          },
          "name": "configMapRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ConfigMapEnvSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvFromSource#prefix",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "An optional identifier to prepend to each key in the ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10036,
          },
          "name": "prefix",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvFromSource#secretRef",
            },
            "summary": "The Secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10043,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretEnvSource",
          },
        },
      ],
    },
    "dummy.EnvVar": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EnvVar",
        },
        "summary": "EnvVar represents an environment variable present in a Container.",
      },
      "fqn": "dummy.EnvVar",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9993,
      },
      "name": "EnvVar",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVar#name",
            },
            "remarks": "Must be a C_IDENTIFIER.",
            "summary": "Name of the environment variable.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9999,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVar#value",
            },
            "default": ".",
            "remarks": "If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\"\\".",
            "summary": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10007,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVar#valueFrom",
            },
            "remarks": "Cannot be used if value is not empty.",
            "summary": "Source for the environment variable's value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10014,
          },
          "name": "valueFrom",
          "optional": true,
          "type": Object {
            "fqn": "dummy.EnvVarSource",
          },
        },
      ],
    },
    "dummy.EnvVarSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EnvVarSource",
        },
        "summary": "EnvVarSource represents a source for the value of an EnvVar.",
      },
      "fqn": "dummy.EnvVarSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11864,
      },
      "name": "EnvVarSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVarSource#configMapKeyRef",
            },
            "summary": "Selects a key of a ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11870,
          },
          "name": "configMapKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ConfigMapKeySelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVarSource#fieldRef",
            },
            "summary": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11877,
          },
          "name": "fieldRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectFieldSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVarSource#resourceFieldRef",
            },
            "summary": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11884,
          },
          "name": "resourceFieldRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceFieldSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EnvVarSource#secretKeyRef",
            },
            "summary": "Selects a key of a secret in the pod's namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11891,
          },
          "name": "secretKeyRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretKeySelector",
          },
        },
      ],
    },
    "dummy.Event": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Event",
        },
        "summary": "Event is a report of an event somewhere in the cluster.",
      },
      "fqn": "dummy.Event",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Event\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.EventOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 883,
      },
      "name": "Event",
    },
    "dummy.EventList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EventList",
        },
        "summary": "EventList is a list of events.",
      },
      "fqn": "dummy.EventList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.EventList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.EventListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 905,
      },
      "name": "EventList",
    },
    "dummy.EventListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EventList",
        },
        "summary": "EventList is a list of events.",
      },
      "fqn": "dummy.EventListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3221,
      },
      "name": "EventListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventList#items",
            },
            "summary": "List of events.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3227,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Event",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3234,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.EventOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Event",
        },
        "summary": "Event is a report of an event somewhere in the cluster.",
      },
      "fqn": "dummy.EventOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3108,
      },
      "name": "EventOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#involvedObject",
            },
            "summary": "The object that this event is about.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3142,
          },
          "name": "involvedObject",
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3163,
          },
          "name": "metadata",
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#action",
            },
            "summary": "What action was taken/failed regarding to the Regarding object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3114,
          },
          "name": "action",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#count",
            },
            "summary": "The number of times this event has occurred.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3121,
          },
          "name": "count",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#eventTime",
            },
            "summary": "Time when this Event was first observed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3128,
          },
          "name": "eventTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#firstTimestamp",
            },
            "remarks": "(Time of server receipt is in TypeMeta.)",
            "summary": "The time at which the event was first recorded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3135,
          },
          "name": "firstTimestamp",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#lastTimestamp",
            },
            "summary": "The time at which the most recent occurrence of this event was recorded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3149,
          },
          "name": "lastTimestamp",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#message",
            },
            "summary": "A human-readable description of the status of this operation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3156,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#reason",
            },
            "summary": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3170,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#related",
            },
            "summary": "Optional secondary object for more complex actions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3177,
          },
          "name": "related",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#reportingComponent",
            },
            "summary": "Name of the controller that emitted this Event, e.g. \`kubernetes.io/kubelet\`.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3184,
          },
          "name": "reportingComponent",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#reportingInstance",
            },
            "summary": "ID of the controller instance, e.g. \`kubelet-xyzf\`.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3191,
          },
          "name": "reportingInstance",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#series",
            },
            "summary": "Data about the Event series this event represents or nil if it's a singleton Event.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3198,
          },
          "name": "series",
          "optional": true,
          "type": Object {
            "fqn": "dummy.EventSeries",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#source",
            },
            "remarks": "Should be a short machine understandable string.",
            "summary": "The component reporting this event.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3205,
          },
          "name": "source",
          "optional": true,
          "type": Object {
            "fqn": "dummy.EventSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Event#type",
            },
            "summary": "Type of this event (Normal, Warning), new types could be added in the future.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3212,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.EventSeries": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EventSeries",
        },
        "summary": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.",
      },
      "fqn": "dummy.EventSeries",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5748,
      },
      "name": "EventSeries",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventSeries#count",
            },
            "summary": "Number of occurrences in this series up to the last heartbeat time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5754,
          },
          "name": "count",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventSeries#lastObservedTime",
            },
            "summary": "Time of the last occurrence observed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5761,
          },
          "name": "lastObservedTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventSeries#state",
            },
            "summary": "State of this Series: Ongoing or Finished.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5768,
          },
          "name": "state",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.EventSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.EventSource",
        },
        "summary": "EventSource contains information for an event.",
      },
      "fqn": "dummy.EventSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5777,
      },
      "name": "EventSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventSource#component",
            },
            "summary": "Component from which the event is generated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5783,
          },
          "name": "component",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.EventSource#host",
            },
            "summary": "Node name on which the event is generated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5790,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Eviction": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.Eviction",
        },
        "remarks": "This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
        "summary": "Eviction evicts a pod from its node subject to certain policies and safety constraints.",
      },
      "fqn": "dummy.Eviction",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.policy.v1beta1.Eviction\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.EvictionOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1631,
      },
      "name": "Eviction",
    },
    "dummy.EvictionOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.Eviction",
        },
        "remarks": "This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.",
        "summary": "Eviction evicts a pod from its node subject to certain policies and safety constraints.",
      },
      "fqn": "dummy.EvictionOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3975,
      },
      "name": "EvictionOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.Eviction#deleteOptions",
            },
            "summary": "DeleteOptions may be provided.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3981,
          },
          "name": "deleteOptions",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DeleteOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.Eviction#metadata",
            },
            "summary": "ObjectMeta describes the pod that is being evicted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3988,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.ExecAction": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ExecAction",
        },
        "summary": "ExecAction describes a \\"run in container\\" action.",
      },
      "fqn": "dummy.ExecAction",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12301,
      },
      "name": "ExecAction",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ExecAction#command",
            },
            "remarks": "The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
            "summary": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12307,
          },
          "name": "command",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ExternalDocumentation": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation",
        },
        "summary": "ExternalDocumentation allows referencing an external resource for extended documentation.",
      },
      "fqn": "dummy.ExternalDocumentation",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12680,
      },
      "name": "ExternalDocumentation",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation#description",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12684,
          },
          "name": "description",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation#url",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12689,
          },
          "name": "url",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.FCVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.FCVolumeSource",
        },
        "remarks": "Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a Fibre Channel volume.",
      },
      "fqn": "dummy.FCVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8256,
      },
      "name": "FCVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8262,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#lun",
            },
            "summary": "Optional: FC target lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8269,
          },
          "name": "lun",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8277,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#targetWWNs",
            },
            "summary": "Optional: FC target worldwide names (WWNs).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8284,
          },
          "name": "targetWWNs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FCVolumeSource#wwids",
            },
            "summary": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8291,
          },
          "name": "wwids",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.FSGroupStrategyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions",
        },
        "summary": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
      },
      "fqn": "dummy.FSGroupStrategyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9821,
      },
      "name": "FSGroupStrategyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions#ranges",
            },
            "remarks": "If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.",
            "summary": "ranges are the allowed ranges of fs groups.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9827,
          },
          "name": "ranges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IDRange",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions#rule",
            },
            "summary": "rule is the strategy that will dictate what FSGroup is used in the SecurityContext.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9834,
          },
          "name": "rule",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.FlexPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource",
        },
        "summary": "FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "dummy.FlexPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8300,
      },
      "name": "FlexPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8306,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8313,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8320,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8328,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexPersistentVolumeSource#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8335,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
      ],
    },
    "dummy.FlexVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.FlexVolumeSource",
        },
        "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      },
      "fqn": "dummy.FlexVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11259,
      },
      "name": "FlexVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#driver",
            },
            "summary": "Driver is the name of the driver to use for this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11265,
          },
          "name": "driver",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default filesystem depends on FlexVolume script.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11272,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#options",
            },
            "summary": "Optional: Extra command options if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11279,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Optional: Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11287,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlexVolumeSource#secretRef",
            },
            "remarks": "This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
            "summary": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11294,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
      ],
    },
    "dummy.FlockerVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.FlockerVolumeSource",
        },
        "remarks": "One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents a Flocker volume mounted by the Flocker agent.",
      },
      "fqn": "dummy.FlockerVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8344,
      },
      "name": "FlockerVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlockerVolumeSource#datasetName",
            },
            "summary": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8350,
          },
          "name": "datasetName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.FlockerVolumeSource#datasetUUID",
            },
            "remarks": "This is unique identifier of a Flocker dataset",
            "summary": "UUID of the dataset.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8357,
          },
          "name": "datasetUUID",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.GCEPersistentDiskVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource",
        },
        "remarks": "A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
        "summary": "Represents a Persistent Disk resource in Google Compute Engine.",
      },
      "fqn": "dummy.GCEPersistentDiskVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8368,
      },
      "name": "GCEPersistentDiskVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#pdName",
            },
            "remarks": "Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Unique name of the PD resource in GCE.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8388,
          },
          "name": "pdName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8374,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#partition",
            },
            "remarks": "If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \\"1\\". Similarly, the volume partition for /dev/sda is \\"0\\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "The partition in the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8381,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8396,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.GitRepoVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.GitRepoVolumeSource",
        },
        "remarks": "Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
        "summary": "Represents a volume that is populated with the contents of a git repository.",
      },
      "fqn": "dummy.GitRepoVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11305,
      },
      "name": "GitRepoVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#repository",
            },
            "summary": "Repository URL.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11318,
          },
          "name": "repository",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#directory",
            },
            "remarks": "Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
            "summary": "Target directory name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11311,
          },
          "name": "directory",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GitRepoVolumeSource#revision",
            },
            "summary": "Commit hash for the specified revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11325,
          },
          "name": "revision",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.GlusterfsPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource",
        },
        "remarks": "Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents a Glusterfs mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.GlusterfsPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8405,
      },
      "name": "GlusterfsPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#endpoints",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8411,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#path",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8425,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#endpointsNamespace",
            },
            "remarks": "If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsNamespace is the namespace that contains Glusterfs endpoint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8418,
          },
          "name": "endpointsNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource#readOnly",
            },
            "default": "false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8433,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.GlusterfsVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource",
        },
        "remarks": "Glusterfs volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents a Glusterfs mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.GlusterfsVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11334,
      },
      "name": "GlusterfsVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#endpoints",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "EndpointsName is the endpoint name that details Glusterfs topology.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11340,
          },
          "name": "endpoints",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#path",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "Path is the Glusterfs volume path.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11347,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.GlusterfsVolumeSource#readOnly",
            },
            "default": "false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "remarks": "Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
            "summary": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11355,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.HTTPGetAction": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.HTTPGetAction",
        },
        "summary": "HTTPGetAction describes an action based on HTTP Get requests.",
      },
      "fqn": "dummy.HTTPGetAction",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12316,
      },
      "name": "HTTPGetAction",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Name or number of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12343,
          },
          "name": "port",
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#host",
            },
            "remarks": "You probably want to set \\"Host\\" in httpHeaders instead.",
            "summary": "Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12322,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#httpHeaders",
            },
            "remarks": "HTTP allows repeated headers.",
            "summary": "Custom headers to set in the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12329,
          },
          "name": "httpHeaders",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.HTTPHeader",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#path",
            },
            "summary": "Path to access on the HTTP server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12336,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPGetAction#scheme",
            },
            "default": "HTTP.",
            "remarks": "Defaults to HTTP.",
            "summary": "Scheme to use for connecting to the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12351,
          },
          "name": "scheme",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.HTTPHeader": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.HTTPHeader",
        },
        "summary": "HTTPHeader describes a custom header to be used in HTTP probes.",
      },
      "fqn": "dummy.HTTPHeader",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12734,
      },
      "name": "HTTPHeader",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPHeader#name",
            },
            "summary": "The header field name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12740,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HTTPHeader#value",
            },
            "summary": "The header field value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12747,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.HTTPIngressPath": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.HTTPIngressPath",
        },
        "remarks": "Incoming urls matching the path are forwarded to the backend.",
        "summary": "HTTPIngressPath associates a path regex with a backend.",
      },
      "fqn": "dummy.HTTPIngressPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12505,
      },
      "name": "HTTPIngressPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.HTTPIngressPath#backend",
            },
            "summary": "Backend defines the referenced service endpoint to which the traffic will be forwarded to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12511,
          },
          "name": "backend",
          "type": Object {
            "fqn": "dummy.IngressBackend",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.HTTPIngressPath#path",
            },
            "summary": "Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \\"path\\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12518,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.HTTPIngressRuleValue": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.HTTPIngressRuleValue",
        },
        "remarks": "In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.",
        "summary": "HTTPIngressRuleValue is a list of http selectors pointing to backends.",
      },
      "fqn": "dummy.HTTPIngressRuleValue",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11772,
      },
      "name": "HTTPIngressRuleValue",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.HTTPIngressRuleValue#paths",
            },
            "summary": "A collection of paths that map requests to backends.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11778,
          },
          "name": "paths",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.HTTPIngressPath",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Handler": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Handler",
        },
        "summary": "Handler defines a specific action that should be taken.",
      },
      "fqn": "dummy.Handler",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12272,
      },
      "name": "Handler",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Handler#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12278,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ExecAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Handler#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12285,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HTTPGetAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Handler#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12292,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "dummy.TCPSocketAction",
          },
        },
      ],
    },
    "dummy.HorizontalPodAutoscaler": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler",
        },
        "summary": "configuration of a horizontal pod autoscaler.",
      },
      "fqn": "dummy.HorizontalPodAutoscaler",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.HorizontalPodAutoscalerOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 498,
      },
      "name": "HorizontalPodAutoscaler",
    },
    "dummy.HorizontalPodAutoscalerList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList",
        },
        "summary": "list of horizontal pod autoscaler objects.",
      },
      "fqn": "dummy.HorizontalPodAutoscalerList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.HorizontalPodAutoscalerListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 520,
      },
      "name": "HorizontalPodAutoscalerList",
    },
    "dummy.HorizontalPodAutoscalerListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList",
        },
        "summary": "list of horizontal pod autoscaler objects.",
      },
      "fqn": "dummy.HorizontalPodAutoscalerListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2746,
      },
      "name": "HorizontalPodAutoscalerListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList#items",
            },
            "summary": "list of horizontal pod autoscaler objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2752,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.HorizontalPodAutoscaler",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList#metadata",
            },
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2759,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.HorizontalPodAutoscalerOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler",
        },
        "summary": "configuration of a horizontal pod autoscaler.",
      },
      "fqn": "dummy.HorizontalPodAutoscalerOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2724,
      },
      "name": "HorizontalPodAutoscalerOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2730,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
            "summary": "behaviour of autoscaler.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2737,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HorizontalPodAutoscalerSpec",
          },
        },
      ],
    },
    "dummy.HorizontalPodAutoscalerSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec",
        },
        "summary": "specification of a horizontal pod autoscaler.",
      },
      "fqn": "dummy.HorizontalPodAutoscalerSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5350,
      },
      "name": "HorizontalPodAutoscalerSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#maxReplicas",
            },
            "remarks": "cannot be smaller than MinReplicas.",
            "summary": "upper limit for the number of pods that can be set by the autoscaler;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5356,
          },
          "name": "maxReplicas",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#scaleTargetRef",
            },
            "remarks": "horizontal pod autoscaler will learn the current resource consumption and will set the desired number of pods by using its Scale subresource.",
            "summary": "reference to scaled resource;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5370,
          },
          "name": "scaleTargetRef",
          "type": Object {
            "fqn": "dummy.CrossVersionObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#minReplicas",
            },
            "summary": "lower limit for the number of pods that can be set by the autoscaler, default 1.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5363,
          },
          "name": "minReplicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec#targetCPUUtilizationPercentage",
            },
            "remarks": "if not specified the default autoscaling policy will be used.",
            "summary": "target average CPU utilization (represented as a percentage of requested CPU) over all the pods;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5377,
          },
          "name": "targetCPUUtilizationPercentage",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.HostAlias": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.HostAlias",
        },
        "summary": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
      },
      "fqn": "dummy.HostAlias",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9224,
      },
      "name": "HostAlias",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HostAlias#hostnames",
            },
            "summary": "Hostnames for the above IP address.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9230,
          },
          "name": "hostnames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HostAlias#ip",
            },
            "summary": "IP address of the host file entry.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9237,
          },
          "name": "ip",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.HostPathVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.HostPathVolumeSource",
        },
        "remarks": "Host path volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents a host path mapped into a pod.",
      },
      "fqn": "dummy.HostPathVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8442,
      },
      "name": "HostPathVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HostPathVolumeSource#path",
            },
            "remarks": "If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Path of the directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8448,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.HostPathVolumeSource#type",
            },
            "default": "More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "Type for HostPath Volume Defaults to \\"\\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8456,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.HostPortRange": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.HostPortRange",
        },
        "remarks": "It requires both the start and end to be defined.",
        "summary": "HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.",
      },
      "fqn": "dummy.HostPortRange",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9843,
      },
      "name": "HostPortRange",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.HostPortRange#max",
            },
            "summary": "max is the end of the range, inclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9849,
          },
          "name": "max",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.HostPortRange#min",
            },
            "summary": "min is the start of the range, inclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9856,
          },
          "name": "min",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.IDRange": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.IDRange",
        },
        "summary": "IDRange provides a min/max of an allowed range of IDs.",
      },
      "fqn": "dummy.IDRange",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11842,
      },
      "name": "IDRange",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.IDRange#max",
            },
            "summary": "max is the end of the range, inclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11848,
          },
          "name": "max",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.IDRange#min",
            },
            "summary": "min is the start of the range, inclusive.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11855,
          },
          "name": "min",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.IPBlock": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.IPBlock",
        },
        "remarks": "\\"192.168.1.1/24\\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
        "summary": "IPBlock describes a particular CIDR (Ex.",
      },
      "fqn": "dummy.IPBlock",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12527,
      },
      "name": "IPBlock",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.IPBlock#cidr",
            },
            "summary": "CIDR is a string representing the IP Block Valid examples are \\"192.168.1.1/24\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12533,
          },
          "name": "cidr",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.IPBlock#except",
            },
            "summary": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \\"192.168.1.1/24\\" Except values will be rejected if they are outside the CIDR range.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12540,
          },
          "name": "except",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ISCSIPersistentVolumeSource": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource",
        },
        "remarks": "ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "summary": "ISCSIPersistentVolumeSource represents an ISCSI disk.",
      },
      "fqn": "dummy.ISCSIPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8465,
      },
      "name": "ISCSIPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8499,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8514,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8543,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8471,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8478,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8485,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8492,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8507,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#portals",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8521,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8529,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIPersistentVolumeSource#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8536,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
      ],
    },
    "dummy.ISCSIVolumeSource": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ISCSIVolumeSource",
        },
        "remarks": "ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
        "summary": "Represents an ISCSI disk.",
      },
      "fqn": "dummy.ISCSIVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11364,
      },
      "name": "ISCSIVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#iqn",
            },
            "summary": "Target iSCSI Qualified Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11398,
          },
          "name": "iqn",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#lun",
            },
            "summary": "iSCSI Target Lun number.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11413,
          },
          "name": "lun",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#targetPortal",
            },
            "remarks": "The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11442,
          },
          "name": "targetPortal",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#chapAuthDiscovery",
            },
            "summary": "whether support iSCSI Discovery CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11370,
          },
          "name": "chapAuthDiscovery",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#chapAuthSession",
            },
            "summary": "whether support iSCSI Session CHAP authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11377,
          },
          "name": "chapAuthSession",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11384,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#initiatorName",
            },
            "remarks": "If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.",
            "summary": "Custom iSCSI Initiator Name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11391,
          },
          "name": "initiatorName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#iscsiInterface",
            },
            "default": "default' (tcp).",
            "remarks": "Defaults to 'default' (tcp).",
            "summary": "iSCSI Interface Name that uses an iSCSI transport.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11406,
          },
          "name": "iscsiInterface",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#portals",
            },
            "remarks": "The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
            "summary": "iSCSI Target Portal List.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11420,
          },
          "name": "portals",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11428,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ISCSIVolumeSource#secretRef",
            },
            "summary": "CHAP Secret for iSCSI target and initiator authentication.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11435,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
      ],
    },
    "dummy.Ingress": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.Ingress",
        },
        "remarks": "An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
        "summary": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend.",
      },
      "fqn": "dummy.Ingress",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.networking.v1beta1.Ingress\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.IngressOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1455,
      },
      "name": "Ingress",
    },
    "dummy.IngressBackend": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressBackend",
        },
        "summary": "IngressBackend describes all endpoints for a given service and port.",
      },
      "fqn": "dummy.IngressBackend",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9653,
      },
      "name": "IngressBackend",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressBackend#serviceName",
            },
            "summary": "Specifies the name of the referenced service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9659,
          },
          "name": "serviceName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressBackend#servicePort",
            },
            "summary": "Specifies the port of the referenced service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9666,
          },
          "name": "servicePort",
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
      ],
    },
    "dummy.IngressList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressList",
        },
        "summary": "IngressList is a collection of Ingress.",
      },
      "fqn": "dummy.IngressList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.networking.v1beta1.IngressList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.IngressListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1477,
      },
      "name": "IngressList",
    },
    "dummy.IngressListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressList",
        },
        "summary": "IngressList is a collection of Ingress.",
      },
      "fqn": "dummy.IngressListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3821,
      },
      "name": "IngressListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressList#items",
            },
            "summary": "Items is the list of Ingress.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3827,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Ingress",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3834,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.IngressOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.Ingress",
        },
        "remarks": "An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.",
        "summary": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend.",
      },
      "fqn": "dummy.IngressOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3799,
      },
      "name": "IngressOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.Ingress#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3805,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.Ingress#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec is the desired state of the Ingress.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3812,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IngressSpec",
          },
        },
      ],
    },
    "dummy.IngressRule": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressRule",
        },
        "remarks": "Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.",
        "summary": "IngressRule represents the rules mapping the paths under a specified host to the related backend services.",
      },
      "fqn": "dummy.IngressRule",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9675,
      },
      "name": "IngressRule",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressRule#host",
            },
            "remarks": "Note the following deviations from the \\"host\\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
IP in the Spec of the parent Ingress.
2. The \`:\` delimiter is not respected because ports are not allowed.
Currently the port of an Ingress is implicitly :80 for http and
:443 for https.
Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.",
            "summary": "Host is the fully qualified domain name of a network host, as defined by RFC 3986.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9686,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressRule#http",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9691,
          },
          "name": "http",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HTTPIngressRuleValue",
          },
        },
      ],
    },
    "dummy.IngressSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressSpec",
        },
        "summary": "IngressSpec describes the Ingress the user wishes to exist.",
      },
      "fqn": "dummy.IngressSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6586,
      },
      "name": "IngressSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressSpec#backend",
            },
            "remarks": "At least one of 'backend' or 'rules' must be specified. This field is optional to allow the loadbalancer controller or defaulting logic to specify a global default.",
            "summary": "A default backend capable of servicing requests that don't match any rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6592,
          },
          "name": "backend",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IngressBackend",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressSpec#rules",
            },
            "remarks": "If unspecified, or no rule matches, all traffic is sent to the default backend.",
            "summary": "A list of host rules used to configure the Ingress.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6599,
          },
          "name": "rules",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IngressRule",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressSpec#tls",
            },
            "remarks": "Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.",
            "summary": "TLS configuration.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6606,
          },
          "name": "tls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IngressTLS",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.IngressTLS": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1beta1.IngressTLS",
        },
        "summary": "IngressTLS describes the transport layer security associated with an Ingress.",
      },
      "fqn": "dummy.IngressTLS",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9700,
      },
      "name": "IngressTLS",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressTLS#hosts",
            },
            "default": "the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
            "remarks": "The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.",
            "summary": "Hosts are a list of hosts included in the TLS certificate.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9707,
          },
          "name": "hosts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1beta1.IngressTLS#secretName",
            },
            "remarks": "Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \\"Host\\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.",
            "summary": "SecretName is the name of the secret used to terminate SSL traffic on 443.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9714,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Initializer": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer",
        },
        "summary": "Initializer is information about an initializer that has not yet completed.",
      },
      "fqn": "dummy.Initializer",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10453,
      },
      "name": "Initializer",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Initializer#name",
            },
            "summary": "name of the process that is responsible for initializing this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10459,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Initializers": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers",
        },
        "summary": "Initializers tracks the progress of initialization.",
      },
      "fqn": "dummy.Initializers",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7340,
      },
      "name": "Initializers",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers#pending",
            },
            "remarks": "When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
            "summary": "Pending is a list of initializers that must execute in order before this object is visible.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7346,
          },
          "name": "pending",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Initializer",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Initializers#result",
            },
            "summary": "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7353,
          },
          "name": "result",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Status",
          },
        },
      ],
    },
    "dummy.IntOrString": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.util.intstr.IntOrString",
        },
      },
      "fqn": "dummy.IntOrString",
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9976,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9980,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "dummy.IntOrString",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9977,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "dummy.IntOrString",
            },
          },
          "static": true,
        },
      ],
      "name": "IntOrString",
    },
    "dummy.JSONSchemaProps": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps",
        },
        "summary": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).",
      },
      "fqn": "dummy.JSONSchemaProps",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11984,
      },
      "name": "JSONSchemaProps",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#additionalItems",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11998,
          },
          "name": "additionalItems",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#additionalProperties",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12003,
          },
          "name": "additionalProperties",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#allOf",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12008,
          },
          "name": "allOf",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#anyOf",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12013,
          },
          "name": "anyOf",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#default",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12018,
          },
          "name": "default",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#definitions",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12023,
          },
          "name": "definitions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#dependencies",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12028,
          },
          "name": "dependencies",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#description",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12033,
          },
          "name": "description",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#enum",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12038,
          },
          "name": "enum",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#example",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12043,
          },
          "name": "example",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#exclusiveMaximum",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12048,
          },
          "name": "exclusiveMaximum",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#exclusiveMinimum",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12053,
          },
          "name": "exclusiveMinimum",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#externalDocs",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12058,
          },
          "name": "externalDocs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ExternalDocumentation",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#format",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12063,
          },
          "name": "format",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#id",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12068,
          },
          "name": "id",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#items",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12073,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#maximum",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12093,
          },
          "name": "maximum",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#maxItems",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12078,
          },
          "name": "maxItems",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#maxLength",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12083,
          },
          "name": "maxLength",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#maxProperties",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12088,
          },
          "name": "maxProperties",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#minimum",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12113,
          },
          "name": "minimum",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#minItems",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12098,
          },
          "name": "minItems",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#minLength",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12103,
          },
          "name": "minLength",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#minProperties",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12108,
          },
          "name": "minProperties",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#multipleOf",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12118,
          },
          "name": "multipleOf",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#not",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12123,
          },
          "name": "not",
          "optional": true,
          "type": Object {
            "fqn": "dummy.JSONSchemaProps",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#nullable",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12128,
          },
          "name": "nullable",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#oneOf",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12133,
          },
          "name": "oneOf",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#pattern",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12138,
          },
          "name": "pattern",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#patternProperties",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12143,
          },
          "name": "patternProperties",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#properties",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12148,
          },
          "name": "properties",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.JSONSchemaProps",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#$ref",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11988,
          },
          "name": "ref",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#required",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12153,
          },
          "name": "required",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#$schema",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11993,
          },
          "name": "schema",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#title",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12158,
          },
          "name": "title",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#type",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12163,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps#uniqueItems",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12168,
          },
          "name": "uniqueItems",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Job": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1.Job",
        },
        "summary": "Job represents the configuration of a single job.",
      },
      "fqn": "dummy.Job",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.batch.v1.Job\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.JobOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 542,
      },
      "name": "Job",
    },
    "dummy.JobList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1.JobList",
        },
        "summary": "JobList is a collection of jobs.",
      },
      "fqn": "dummy.JobList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.batch.v1.JobList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.JobListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 564,
      },
      "name": "JobList",
    },
    "dummy.JobListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1.JobList",
        },
        "summary": "JobList is a collection of jobs.",
      },
      "fqn": "dummy.JobListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2790,
      },
      "name": "JobListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobList#items",
            },
            "summary": "items is the list of Jobs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2796,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Job",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2803,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.JobOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1.Job",
        },
        "summary": "Job represents the configuration of a single job.",
      },
      "fqn": "dummy.JobOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2768,
      },
      "name": "JobOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.Job#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2774,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.Job#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of a job.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2781,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.JobSpec",
          },
        },
      ],
    },
    "dummy.JobSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1.JobSpec",
        },
        "summary": "JobSpec describes how the job execution will look like.",
      },
      "fqn": "dummy.JobSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5386,
      },
      "name": "JobSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#template",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "summary": "Describes the pod that will be created when executing a job.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5435,
          },
          "name": "template",
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#activeDeadlineSeconds",
            },
            "remarks": "value must be positive integer",
            "summary": "Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5392,
          },
          "name": "activeDeadlineSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#backoffLimit",
            },
            "default": "6",
            "remarks": "Defaults to 6",
            "summary": "Specifies the number of retries before marking this job failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5400,
          },
          "name": "backoffLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#completions",
            },
            "remarks": "Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "summary": "Specifies the desired number of successfully finished pods the job should be run with.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5407,
          },
          "name": "completions",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#manualSelector",
            },
            "remarks": "Leave \`manualSelector\` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see \`manualSelector=true\` in jobs that were created with the old \`extensions/v1beta1\` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector",
            "summary": "manualSelector controls generation of pod labels and pod selectors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5414,
          },
          "name": "manualSelector",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#parallelism",
            },
            "remarks": "The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/",
            "summary": "Specifies the maximum desired number of pods the job should run at any given time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5421,
          },
          "name": "parallelism",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#selector",
            },
            "remarks": "Normally, the system sets this field for you. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "summary": "A label query over pods that should match the pod count.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5428,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1.JobSpec#ttlSecondsAfterFinished",
            },
            "remarks": "If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.",
            "summary": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5442,
          },
          "name": "ttlSecondsAfterFinished",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.JobTemplateSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.batch.v1beta1.JobTemplateSpec",
        },
        "summary": "JobTemplateSpec describes the data a Job should have when created from a template.",
      },
      "fqn": "dummy.JobTemplateSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7770,
      },
      "name": "JobTemplateSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.JobTemplateSpec#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata of the jobs created from this template.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7776,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.batch.v1beta1.JobTemplateSpec#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the job.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7783,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.JobSpec",
          },
        },
      ],
    },
    "dummy.KeyToPath": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.KeyToPath",
        },
        "summary": "Maps a string key to a path within a volume.",
      },
      "fqn": "dummy.KeyToPath",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12404,
      },
      "name": "KeyToPath",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.KeyToPath#key",
            },
            "summary": "The key to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12410,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.KeyToPath#path",
            },
            "remarks": "May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
            "summary": "The relative path of the file to map the key to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12424,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.KeyToPath#mode",
            },
            "remarks": "If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on this file, must be a value between 0 and 0777.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12417,
          },
          "name": "mode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.LabelSelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
        },
        "remarks": "The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
        "summary": "A label selector is a label query over a set of resources.",
      },
      "fqn": "dummy.LabelSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7499,
      },
      "name": "LabelSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#matchExpressions",
            },
            "remarks": "The requirements are ANDed.",
            "summary": "matchExpressions is a list of label selector requirements.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7505,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LabelSelectorRequirement",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector#matchLabels",
            },
            "remarks": "A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\"key\\", the operator is \\"In\\", and the values array contains only \\"value\\". The requirements are ANDed.",
            "summary": "matchLabels is a map of {key,value} pairs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7512,
          },
          "name": "matchLabels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "dummy.LabelSelectorRequirement": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement",
        },
        "summary": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "dummy.LabelSelectorRequirement",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10475,
      },
      "name": "LabelSelectorRequirement",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#key",
            },
            "summary": "key is the label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10481,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists and DoesNotExist.",
            "summary": "operator represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10488,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "values is an array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10495,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Lease": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.coordination.v1.Lease",
        },
        "summary": "Lease defines a lease concept.",
      },
      "fqn": "dummy.Lease",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.coordination.v1.Lease\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.LeaseOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 674,
      },
      "name": "Lease",
    },
    "dummy.LeaseList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.coordination.v1.LeaseList",
        },
        "summary": "LeaseList is a list of Lease objects.",
      },
      "fqn": "dummy.LeaseList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.coordination.v1.LeaseList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.LeaseListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 696,
      },
      "name": "LeaseList",
    },
    "dummy.LeaseListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.coordination.v1.LeaseList",
        },
        "summary": "LeaseList is a list of Lease objects.",
      },
      "fqn": "dummy.LeaseListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2914,
      },
      "name": "LeaseListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseList#items",
            },
            "summary": "Items is a list of schema objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2920,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Lease",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2927,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.LeaseOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.coordination.v1.Lease",
        },
        "summary": "Lease defines a lease concept.",
      },
      "fqn": "dummy.LeaseOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2892,
      },
      "name": "LeaseOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.Lease#metadata",
            },
            "summary": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2898,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.Lease#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the Lease.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2905,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LeaseSpec",
          },
        },
      ],
    },
    "dummy.LeaseSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.coordination.v1.LeaseSpec",
        },
        "summary": "LeaseSpec is a specification of a Lease.",
      },
      "fqn": "dummy.LeaseSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5562,
      },
      "name": "LeaseSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#acquireTime",
            },
            "summary": "acquireTime is a time when the current lease was acquired.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5568,
          },
          "name": "acquireTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#holderIdentity",
            },
            "summary": "holderIdentity contains the identity of the holder of a current lease.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5575,
          },
          "name": "holderIdentity",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#leaseDurationSeconds",
            },
            "remarks": "This is measure against time of last observed RenewTime.",
            "summary": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5582,
          },
          "name": "leaseDurationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#leaseTransitions",
            },
            "summary": "leaseTransitions is the number of transitions of a lease between holders.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5589,
          },
          "name": "leaseTransitions",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.coordination.v1.LeaseSpec#renewTime",
            },
            "summary": "renewTime is a time when the current holder of a lease has last updated the lease.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5596,
          },
          "name": "renewTime",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
      ],
    },
    "dummy.Lifecycle": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Lifecycle",
        },
        "remarks": "For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
        "summary": "Lifecycle describes actions that the management system should take in response to container lifecycle events.",
      },
      "fqn": "dummy.Lifecycle",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10704,
      },
      "name": "Lifecycle",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Lifecycle#postStart",
            },
            "remarks": "If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PostStart is called immediately after a container is created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10710,
          },
          "name": "postStart",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Handler",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Lifecycle#preStop",
            },
            "remarks": "The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
            "summary": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness probe failure, preemption, resource contention, etc.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10717,
          },
          "name": "preStop",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Handler",
          },
        },
      ],
    },
    "dummy.LimitRange": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRange",
        },
        "summary": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
      },
      "fqn": "dummy.LimitRange",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.LimitRange\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.LimitRangeOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 927,
      },
      "name": "LimitRange",
    },
    "dummy.LimitRangeItem": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRangeItem",
        },
        "summary": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
      },
      "fqn": "dummy.LimitRangeItem",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7858,
      },
      "name": "LimitRangeItem",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#default",
            },
            "summary": "Default resource requirement limit value by resource name if resource limit is omitted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7864,
          },
          "name": "default",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#defaultRequest",
            },
            "summary": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7871,
          },
          "name": "defaultRequest",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#max",
            },
            "summary": "Max usage constraints on this kind by resource name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7878,
          },
          "name": "max",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#maxLimitRequestRatio",
            },
            "remarks": "this represents the max burst for the named resource.",
            "summary": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7885,
          },
          "name": "maxLimitRequestRatio",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#min",
            },
            "summary": "Min usage constraints on this kind by resource name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7892,
          },
          "name": "min",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeItem#type",
            },
            "summary": "Type of resource that this limit applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7899,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.LimitRangeList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRangeList",
        },
        "summary": "LimitRangeList is a list of LimitRange items.",
      },
      "fqn": "dummy.LimitRangeList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.LimitRangeList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.LimitRangeListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 949,
      },
      "name": "LimitRangeList",
    },
    "dummy.LimitRangeListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRangeList",
        },
        "summary": "LimitRangeList is a list of LimitRange items.",
      },
      "fqn": "dummy.LimitRangeListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3265,
      },
      "name": "LimitRangeListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Items is a list of LimitRange objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3271,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LimitRange",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3278,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.LimitRangeOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRange",
        },
        "summary": "LimitRange sets resource usage limits for each kind of resource in a Namespace.",
      },
      "fqn": "dummy.LimitRangeOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3243,
      },
      "name": "LimitRangeOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRange#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3249,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRange#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the limits enforced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3256,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LimitRangeSpec",
          },
        },
      ],
    },
    "dummy.LimitRangeSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LimitRangeSpec",
        },
        "summary": "LimitRangeSpec defines a min/max usage limit for resources that match on kind.",
      },
      "fqn": "dummy.LimitRangeSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5799,
      },
      "name": "LimitRangeSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LimitRangeSpec#limits",
            },
            "summary": "Limits is the list of LimitRangeItem objects that are enforced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5805,
          },
          "name": "limits",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LimitRangeItem",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ListMeta": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta",
        },
        "remarks": "A resource may have only one of {ObjectMeta, ListMeta}.",
        "summary": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects.",
      },
      "fqn": "dummy.ListMeta",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4920,
      },
      "name": "ListMeta",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#continue",
            },
            "remarks": "The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
            "summary": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4926,
          },
          "name": "continue",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#resourceVersion",
            },
            "remarks": "Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
            "summary": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4933,
          },
          "name": "resourceVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta#selfLink",
            },
            "remarks": "Populated by the system. Read-only.",
            "summary": "selfLink is a URL representing this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4940,
          },
          "name": "selfLink",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.LocalObjectReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LocalObjectReference",
        },
        "summary": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      },
      "fqn": "dummy.LocalObjectReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6571,
      },
      "name": "LocalObjectReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LocalObjectReference#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6577,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.LocalSubjectAccessReview": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview",
        },
        "remarks": "Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
        "summary": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace.",
      },
      "fqn": "dummy.LocalSubjectAccessReview",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.authorization.v1.LocalSubjectAccessReview\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.LocalSubjectAccessReviewOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 410,
      },
      "name": "LocalSubjectAccessReview",
    },
    "dummy.LocalSubjectAccessReviewOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview",
        },
        "remarks": "Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.",
        "summary": "LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace.",
      },
      "fqn": "dummy.LocalSubjectAccessReviewOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2644,
      },
      "name": "LocalSubjectAccessReviewOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview#spec",
            },
            "remarks": "spec.namespace must be equal to the namespace you made the request against.  If empty, it is defaulted.",
            "summary": "Spec holds information about the request being evaluated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2655,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.SubjectAccessReviewSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.LocalSubjectAccessReview#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2648,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.LocalVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.LocalVolumeSource",
        },
        "summary": "Local represents directly-attached storage with node affinity (Beta feature).",
      },
      "fqn": "dummy.LocalVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8552,
      },
      "name": "LocalVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LocalVolumeSource#path",
            },
            "remarks": "It can be either a directory or block device (disk, partition, ...).",
            "summary": "The full path to the volume on the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8565,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.LocalVolumeSource#fsType",
            },
            "remarks": "It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". The default value is to auto-select a fileystem if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8558,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ManagedFieldsEntry": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry",
        },
        "summary": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      },
      "fqn": "dummy.ManagedFieldsEntry",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7362,
      },
      "name": "ManagedFieldsEntry",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#apiVersion",
            },
            "remarks": "The format is \\"group/version\\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
            "summary": "APIVersion defines the version of this resource that this field set applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7368,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#fields",
            },
            "summary": "Fields identifies a set of fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7375,
          },
          "name": "fields",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#manager",
            },
            "summary": "Manager is an identifier of the workflow managing these fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7382,
          },
          "name": "manager",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#operation",
            },
            "remarks": "The only valid values for this field are 'Apply' and 'Update'.",
            "summary": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7389,
          },
          "name": "operation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry#time",
            },
            "remarks": "It should always be empty if Operation is 'Apply'",
            "summary": "Time is timestamp of when these fields were set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7396,
          },
          "name": "time",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
      ],
    },
    "dummy.MutatingWebhookConfiguration": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration",
        },
        "summary": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.",
      },
      "fqn": "dummy.MutatingWebhookConfiguration",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.MutatingWebhookConfigurationOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11,
      },
      "name": "MutatingWebhookConfiguration",
    },
    "dummy.MutatingWebhookConfigurationList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList",
        },
        "summary": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.",
      },
      "fqn": "dummy.MutatingWebhookConfigurationList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.MutatingWebhookConfigurationListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 33,
      },
      "name": "MutatingWebhookConfigurationList",
    },
    "dummy.MutatingWebhookConfigurationListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList",
        },
        "summary": "MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.",
      },
      "fqn": "dummy.MutatingWebhookConfigurationListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2272,
      },
      "name": "MutatingWebhookConfigurationListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList#items",
            },
            "summary": "List of MutatingWebhookConfiguration.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2278,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.MutatingWebhookConfiguration",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2285,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.MutatingWebhookConfigurationOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration",
        },
        "summary": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.",
      },
      "fqn": "dummy.MutatingWebhookConfigurationOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2250,
      },
      "name": "MutatingWebhookConfigurationOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
            "summary": "Standard object metadata;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2256,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration#webhooks",
            },
            "summary": "Webhooks is a list of webhooks and the affected resources and operations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2263,
          },
          "name": "webhooks",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Webhook",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NFSVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NFSVolumeSource",
        },
        "remarks": "NFS volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents an NFS mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.NFSVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8574,
      },
      "name": "NFSVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#path",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Path that is exported by the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8580,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#server",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "Server is the hostname or IP address of the NFS server.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8595,
          },
          "name": "server",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NFSVolumeSource#readOnly",
            },
            "default": "false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "remarks": "Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "ReadOnly here will force the NFS export to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8588,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Namespace": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Namespace",
        },
        "remarks": "Use of multiple namespaces is optional.",
        "summary": "Namespace provides a scope for Names.",
      },
      "fqn": "dummy.Namespace",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Namespace\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.NamespaceOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 971,
      },
      "name": "Namespace",
    },
    "dummy.NamespaceList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NamespaceList",
        },
        "summary": "NamespaceList is a list of Namespaces.",
      },
      "fqn": "dummy.NamespaceList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.NamespaceList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.NamespaceListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 993,
      },
      "name": "NamespaceList",
    },
    "dummy.NamespaceListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NamespaceList",
        },
        "summary": "NamespaceList is a list of Namespaces.",
      },
      "fqn": "dummy.NamespaceListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3309,
      },
      "name": "NamespaceListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NamespaceList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "summary": "Items is the list of Namespace objects in the list.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3315,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Namespace",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NamespaceList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3322,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.NamespaceOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Namespace",
        },
        "remarks": "Use of multiple namespaces is optional.",
        "summary": "Namespace provides a scope for Names.",
      },
      "fqn": "dummy.NamespaceOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3287,
      },
      "name": "NamespaceOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Namespace#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3293,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Namespace#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the behavior of the Namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3300,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NamespaceSpec",
          },
        },
      ],
    },
    "dummy.NamespaceSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NamespaceSpec",
        },
        "summary": "NamespaceSpec describes the attributes on a Namespace.",
      },
      "fqn": "dummy.NamespaceSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5814,
      },
      "name": "NamespaceSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NamespaceSpec#finalizers",
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/",
            "summary": "Finalizers is an opaque list of values that must be empty to permanently remove object from storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5820,
          },
          "name": "finalizers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NetworkPolicy": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicy",
        },
        "summary": "NetworkPolicy describes what network traffic is allowed for a set of Pods.",
      },
      "fqn": "dummy.NetworkPolicy",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.networking.v1.NetworkPolicy\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.NetworkPolicyOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1499,
      },
      "name": "NetworkPolicy",
    },
    "dummy.NetworkPolicyEgressRule": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule",
        },
        "remarks": "The traffic must match both ports and to. This type is beta-level in 1.8",
        "summary": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector.",
      },
      "fqn": "dummy.NetworkPolicyEgressRule",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9723,
      },
      "name": "NetworkPolicyEgressRule",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule#ports",
            },
            "remarks": "Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
            "summary": "List of destination ports for outgoing traffic.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9729,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyPort",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyEgressRule#to",
            },
            "remarks": "Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
            "summary": "List of destinations for outgoing traffic of pods selected for this rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9736,
          },
          "name": "to",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyPeer",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NetworkPolicyIngressRule": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule",
        },
        "remarks": "The traffic must match both ports and from.",
        "summary": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector.",
      },
      "fqn": "dummy.NetworkPolicyIngressRule",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9745,
      },
      "name": "NetworkPolicyIngressRule",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule#from",
            },
            "remarks": "Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
            "summary": "List of sources which should be able to access the pods selected for this rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9751,
          },
          "name": "from",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyPeer",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyIngressRule#ports",
            },
            "remarks": "Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
            "summary": "List of ports which should be made accessible on the pods selected for this rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9758,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyPort",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NetworkPolicyList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyList",
        },
        "summary": "NetworkPolicyList is a list of NetworkPolicy objects.",
      },
      "fqn": "dummy.NetworkPolicyList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.networking.v1.NetworkPolicyList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.NetworkPolicyListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1521,
      },
      "name": "NetworkPolicyList",
    },
    "dummy.NetworkPolicyListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyList",
        },
        "summary": "NetworkPolicyList is a list of NetworkPolicy objects.",
      },
      "fqn": "dummy.NetworkPolicyListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3865,
      },
      "name": "NetworkPolicyListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyList#items",
            },
            "summary": "Items is a list of schema objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3871,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicy",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3878,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.NetworkPolicyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicy",
        },
        "summary": "NetworkPolicy describes what network traffic is allowed for a set of Pods.",
      },
      "fqn": "dummy.NetworkPolicyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3843,
      },
      "name": "NetworkPolicyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicy#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3849,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicy#spec",
            },
            "summary": "Specification of the desired behavior for this NetworkPolicy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3856,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NetworkPolicySpec",
          },
        },
      ],
    },
    "dummy.NetworkPolicyPeer": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer",
        },
        "remarks": "Only certain combinations of fields are allowed",
        "summary": "NetworkPolicyPeer describes a peer to allow traffic from.",
      },
      "fqn": "dummy.NetworkPolicyPeer",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11809,
      },
      "name": "NetworkPolicyPeer",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#ipBlock",
            },
            "remarks": "If this field is set then neither of the other fields can be.",
            "summary": "IPBlock defines policy on a particular IPBlock.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11815,
          },
          "name": "ipBlock",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IPBlock",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#namespaceSelector",
            },
            "remarks": "This field follows standard label selector semantics; if present but empty, it selects all namespaces.

If PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.",
            "summary": "Selects Namespaces using cluster-scoped labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11824,
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPeer#podSelector",
            },
            "remarks": "This field follows standard label selector semantics; if present but empty, it selects all pods.

If NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.",
            "summary": "This is a label selector which selects Pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11833,
          },
          "name": "podSelector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
      ],
    },
    "dummy.NetworkPolicyPort": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicyPort",
        },
        "summary": "NetworkPolicyPort describes a port to allow traffic on.",
      },
      "fqn": "dummy.NetworkPolicyPort",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11787,
      },
      "name": "NetworkPolicyPort",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPort#port",
            },
            "remarks": "This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.",
            "summary": "The port on the given protocol.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11793,
          },
          "name": "port",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicyPort#protocol",
            },
            "remarks": "If not specified, this field defaults to TCP.",
            "summary": "The protocol (TCP, UDP, or SCTP) which traffic must match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11800,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.NetworkPolicySpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.networking.v1.NetworkPolicySpec",
        },
        "summary": "NetworkPolicySpec provides the specification of a NetworkPolicy.",
      },
      "fqn": "dummy.NetworkPolicySpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6615,
      },
      "name": "NetworkPolicySpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#podSelector",
            },
            "remarks": "The array of ingress rules is applied to any pods selected by this field. Multiple network policies can select the same set of pods. In this case, the ingress rules for each are combined additively. This field is NOT optional and follows standard label selector semantics. An empty podSelector matches all pods in this namespace.",
            "summary": "Selects the pods to which this NetworkPolicy object applies.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6635,
          },
          "name": "podSelector",
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#egress",
            },
            "remarks": "Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8",
            "summary": "List of egress rules to be applied to the selected pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6621,
          },
          "name": "egress",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyEgressRule",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#ingress",
            },
            "remarks": "Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)",
            "summary": "List of ingress rules to be applied to the selected pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6628,
          },
          "name": "ingress",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NetworkPolicyIngressRule",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.networking.v1.NetworkPolicySpec#policyTypes",
            },
            "remarks": "Valid options are \\"Ingress\\", \\"Egress\\", or \\"Ingress,Egress\\". If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ \\"Egress\\" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include \\"Egress\\" (since such a policy would not include an Egress section and would otherwise default to just [ \\"Ingress\\" ]). This field is beta-level in 1.8",
            "summary": "List of rule types that the NetworkPolicy relates to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6642,
          },
          "name": "policyTypes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Node": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Node",
        },
        "remarks": "Each node will have a unique identifier in the cache (i.e. in etcd).",
        "summary": "Node is a worker node in Kubernetes.",
      },
      "fqn": "dummy.Node",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Node\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.NodeOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1015,
      },
      "name": "Node",
    },
    "dummy.NodeAffinity": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeAffinity",
        },
        "summary": "Node affinity is a group of node affinity scheduling rules.",
      },
      "fqn": "dummy.NodeAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10638,
      },
      "name": "NodeAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10644,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PreferredSchedulingTerm",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10651,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NodeSelector",
          },
        },
      ],
    },
    "dummy.NodeConfigSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeConfigSource",
        },
        "remarks": "Exactly one subfield (excluding metadata) must be non-nil.",
        "summary": "NodeConfigSource specifies a source of node configuration.",
      },
      "fqn": "dummy.NodeConfigSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7908,
      },
      "name": "NodeConfigSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeConfigSource#configMap",
            },
            "summary": "ConfigMap is a reference to a Node's ConfigMap.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7914,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ConfigMapNodeConfigSource",
          },
        },
      ],
    },
    "dummy.NodeList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeList",
        },
        "summary": "NodeList is the whole list of all Nodes which have been registered with master.",
      },
      "fqn": "dummy.NodeList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.NodeList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.NodeListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1037,
      },
      "name": "NodeList",
    },
    "dummy.NodeListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeList",
        },
        "summary": "NodeList is the whole list of all Nodes which have been registered with master.",
      },
      "fqn": "dummy.NodeListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3353,
      },
      "name": "NodeListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeList#items",
            },
            "summary": "List of nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3359,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Node",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3366,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.NodeOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Node",
        },
        "remarks": "Each node will have a unique identifier in the cache (i.e. in etcd).",
        "summary": "Node is a worker node in Kubernetes.",
      },
      "fqn": "dummy.NodeOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3331,
      },
      "name": "NodeOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Node#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3337,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Node#spec",
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the behavior of a node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3344,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NodeSpec",
          },
        },
      ],
    },
    "dummy.NodeSelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeSelector",
        },
        "remarks": "that is, it represents the OR of the selectors represented by the node selector terms.",
        "summary": "A node selector represents the union of the results of one or more label queries over a set of nodes;",
      },
      "fqn": "dummy.NodeSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10623,
      },
      "name": "NodeSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelector#nodeSelectorTerms",
            },
            "remarks": "A list of node selector terms. The terms are ORed.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10629,
          },
          "name": "nodeSelectorTerms",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NodeSelectorTerm",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NodeSelectorRequirement": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeSelectorRequirement",
        },
        "summary": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      },
      "fqn": "dummy.NodeSelectorRequirement",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12705,
      },
      "name": "NodeSelectorRequirement",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12711,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
            "summary": "Represents a key's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12718,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelectorRequirement#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12725,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NodeSelectorTerm": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeSelectorTerm",
        },
        "remarks": "The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
        "summary": "A null or empty node selector term matches no objects.",
      },
      "fqn": "dummy.NodeSelectorTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12177,
      },
      "name": "NodeSelectorTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelectorTerm#matchExpressions",
            },
            "summary": "A list of node selector requirements by node's labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12183,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NodeSelectorRequirement",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSelectorTerm#matchFields",
            },
            "summary": "A list of node selector requirements by node's fields.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12190,
          },
          "name": "matchFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.NodeSelectorRequirement",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.NodeSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.NodeSpec",
        },
        "summary": "NodeSpec describes the attributes that a node is created with.",
      },
      "fqn": "dummy.NodeSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5829,
      },
      "name": "NodeSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#configSource",
            },
            "summary": "If specified, the source to get node configuration from The DynamicKubeletConfig feature gate must be enabled for the Kubelet to use this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5835,
          },
          "name": "configSource",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NodeConfigSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#externalID",
            },
            "remarks": "Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966",
            "summary": "Deprecated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5842,
          },
          "name": "externalID",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#podCIDR",
            },
            "summary": "PodCIDR represents the pod IP range assigned to the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5849,
          },
          "name": "podCIDR",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#providerID",
            },
            "summary": "ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5856,
          },
          "name": "providerID",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#taints",
            },
            "summary": "If specified, the node's taints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5863,
          },
          "name": "taints",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Taint",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.NodeSpec#unschedulable",
            },
            "remarks": "By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration",
            "summary": "Unschedulable controls node schedulability of new pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5870,
          },
          "name": "unschedulable",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.NonResourceAttributes": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.NonResourceAttributes",
        },
        "summary": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface.",
      },
      "fqn": "dummy.NonResourceAttributes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7662,
      },
      "name": "NonResourceAttributes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.NonResourceAttributes#path",
            },
            "summary": "Path is the URL path of the request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7668,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.NonResourceAttributes#verb",
            },
            "summary": "Verb is the standard HTTP verb.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7675,
          },
          "name": "verb",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ObjectFieldSelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ObjectFieldSelector",
        },
        "summary": "ObjectFieldSelector selects an APIVersioned field of an object.",
      },
      "fqn": "dummy.ObjectFieldSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12578,
      },
      "name": "ObjectFieldSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectFieldSelector#fieldPath",
            },
            "summary": "Path of the field to select in the specified API version.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12591,
          },
          "name": "fieldPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectFieldSelector#apiVersion",
            },
            "summary": "Version of the schema the FieldPath is written in terms of, defaults to \\"v1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12584,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ObjectMeta": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta",
        },
        "summary": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      },
      "fqn": "dummy.ObjectMeta",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4674,
      },
      "name": "ObjectMeta",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#annotations",
            },
            "remarks": "They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
            "summary": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4680,
          },
          "name": "annotations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#clusterName",
            },
            "remarks": "This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
            "summary": "The name of the cluster which the object belongs to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4687,
          },
          "name": "clusterName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#creationTimestamp",
            },
            "remarks": "It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "CreationTimestamp is a timestamp representing the server time when this object was created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4696,
          },
          "name": "creationTimestamp",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#deletionGracePeriodSeconds",
            },
            "remarks": "Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
            "summary": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4703,
          },
          "name": "deletionGracePeriodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#deletionTimestamp",
            },
            "remarks": "This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4712,
          },
          "name": "deletionTimestamp",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#finalizers",
            },
            "remarks": "Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
            "summary": "Must be empty before the object is deleted from the registry.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4719,
          },
          "name": "finalizers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#generateName",
            },
            "remarks": "If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
            "summary": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4730,
          },
          "name": "generateName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#generation",
            },
            "remarks": "Populated by the system. Read-only.",
            "summary": "A sequence number representing a specific generation of the desired state.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4737,
          },
          "name": "generation",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#initializers",
            },
            "remarks": "This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.

When an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.

DEPRECATED - initializers are an alpha field and will be removed in v1.15.",
            "summary": "An initializer is a controller which enforces some system invariant at object creation time.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4748,
          },
          "name": "initializers",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Initializers",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#labels",
            },
            "remarks": "May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
            "summary": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4755,
          },
          "name": "labels",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#managedFields",
            },
            "remarks": "This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \\"ci-cd\\". The set of fields is always in the version that the workflow used when modifying the object.

This field is alpha and can be changed or removed without notice.",
            "summary": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4764,
          },
          "name": "managedFields",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ManagedFieldsEntry",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#name",
            },
            "remarks": "Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name must be unique within a namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4771,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#namespace",
            },
            "remarks": "An empty namespace is equivalent to the \\"default\\" namespace, but \\"default\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
            "summary": "Namespace defines the space within each name must be unique.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4780,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#ownerReferences",
            },
            "remarks": "If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
            "summary": "List of objects depended by this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4787,
          },
          "name": "ownerReferences",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.OwnerReference",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#resourceVersion",
            },
            "remarks": "May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
            "summary": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4796,
          },
          "name": "resourceVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#selfLink",
            },
            "remarks": "Populated by the system. Read-only.",
            "summary": "SelfLink is a URL representing this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4803,
          },
          "name": "selfLink",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta#uid",
            },
            "remarks": "It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "summary": "UID is the unique in time and space value for this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4812,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ObjectReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ObjectReference",
        },
        "summary": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      },
      "fqn": "dummy.ObjectReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5605,
      },
      "name": "ObjectReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#apiVersion",
            },
            "summary": "API version of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5611,
          },
          "name": "apiVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#fieldPath",
            },
            "summary": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\"spec.containers{name}\\" (where \\"name\\" refers to the name of the container that triggered the event) or if no container name is specified \\"spec.containers[2]\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5618,
          },
          "name": "fieldPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#kind",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Kind of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5625,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5632,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#namespace",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
            "summary": "Namespace of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5639,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#resourceVersion",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
            "summary": "Specific resourceVersion to which this reference is made, if any.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5646,
          },
          "name": "resourceVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ObjectReference#uid",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
            "summary": "UID of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5653,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.OwnerReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference",
        },
        "remarks": "An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
        "summary": "OwnerReference contains enough information to let you identify an owning object.",
      },
      "fqn": "dummy.OwnerReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7405,
      },
      "name": "OwnerReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#apiVersion",
            },
            "summary": "API version of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7411,
          },
          "name": "apiVersion",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#kind",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Kind of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7433,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#name",
            },
            "remarks": "More info: http://kubernetes.io/docs/user-guide/identifiers#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7440,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#uid",
            },
            "remarks": "More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "summary": "UID of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7447,
          },
          "name": "uid",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#blockOwnerDeletion",
            },
            "default": "false. To set this field, a user needs \\"delete\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "remarks": "Defaults to false. To set this field, a user needs \\"delete\\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
            "summary": "If true, AND if the owner has the \\"foregroundDeletion\\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7419,
          },
          "name": "blockOwnerDeletion",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference#controller",
            },
            "summary": "If true, this reference points to the managing controller.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7426,
          },
          "name": "controller",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.PersistentVolume": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolume",
        },
        "remarks": "It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
        "summary": "PersistentVolume (PV) is a storage resource provisioned by an administrator.",
      },
      "fqn": "dummy.PersistentVolume",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PersistentVolume\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PersistentVolumeOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1059,
      },
      "name": "PersistentVolume",
    },
    "dummy.PersistentVolumeClaim": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaim",
        },
        "summary": "PersistentVolumeClaim is a user's request for and claim to a persistent volume.",
      },
      "fqn": "dummy.PersistentVolumeClaim",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PersistentVolumeClaim\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PersistentVolumeClaimOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1081,
      },
      "name": "PersistentVolumeClaim",
    },
    "dummy.PersistentVolumeClaimList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList",
        },
        "summary": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
      },
      "fqn": "dummy.PersistentVolumeClaimList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PersistentVolumeClaimList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PersistentVolumeClaimListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1103,
      },
      "name": "PersistentVolumeClaimList",
    },
    "dummy.PersistentVolumeClaimListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList",
        },
        "summary": "PersistentVolumeClaimList is a list of PersistentVolumeClaim items.",
      },
      "fqn": "dummy.PersistentVolumeClaimListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3419,
      },
      "name": "PersistentVolumeClaimListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "A list of persistent volume claims.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3425,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PersistentVolumeClaim",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3432,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PersistentVolumeClaimOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaim",
        },
        "summary": "PersistentVolumeClaim is a user's request for and claim to a persistent volume.",
      },
      "fqn": "dummy.PersistentVolumeClaimOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3397,
      },
      "name": "PersistentVolumeClaimOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaim#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3403,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaim#spec",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "Spec defines the desired characteristics of a volume requested by a pod author.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3410,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PersistentVolumeClaimSpec",
          },
        },
      ],
    },
    "dummy.PersistentVolumeClaimSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec",
        },
        "summary": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes.",
      },
      "fqn": "dummy.PersistentVolumeClaimSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6097,
      },
      "name": "PersistentVolumeClaimSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
            "summary": "AccessModes contains the desired access modes the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6103,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#dataSource",
            },
            "remarks": "If the provisioner can support VolumeSnapshot data source, it will create a new volume and data will be restored to the volume at the same time. If the provisioner does not support VolumeSnapshot data source, volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
            "summary": "This field requires the VolumeSnapshotDataSource alpha feature gate to be enabled and currently VolumeSnapshot is the only supported data source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6110,
          },
          "name": "dataSource",
          "optional": true,
          "type": Object {
            "fqn": "dummy.TypedLocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#resources",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
            "summary": "Resources represents the minimum resources the volume should have.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6117,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceRequirements",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#selector",
            },
            "summary": "A label query over volumes to consider for binding.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6124,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#storageClassName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
            "summary": "Name of the StorageClass required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6131,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in claim spec. This is a beta feature.",
            "summary": "volumeMode defines what type of volume is required by the claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6138,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimSpec#volumeName",
            },
            "summary": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6145,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.PersistentVolumeClaimVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource",
        },
        "remarks": "This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
        "summary": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.",
      },
      "fqn": "dummy.PersistentVolumeClaimVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11451,
      },
      "name": "PersistentVolumeClaimVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource#claimName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11457,
          },
          "name": "claimName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource#readOnly",
            },
            "remarks": "Default false.",
            "summary": "Will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11464,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.PersistentVolumeList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeList",
        },
        "summary": "PersistentVolumeList is a list of PersistentVolume items.",
      },
      "fqn": "dummy.PersistentVolumeList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PersistentVolumeList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PersistentVolumeListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1125,
      },
      "name": "PersistentVolumeList",
    },
    "dummy.PersistentVolumeListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeList",
        },
        "summary": "PersistentVolumeList is a list of PersistentVolume items.",
      },
      "fqn": "dummy.PersistentVolumeListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3441,
      },
      "name": "PersistentVolumeListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
            "summary": "List of persistent volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3447,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PersistentVolume",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3454,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PersistentVolumeOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolume",
        },
        "remarks": "It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes",
        "summary": "PersistentVolume (PV) is a storage resource provisioned by an administrator.",
      },
      "fqn": "dummy.PersistentVolumeOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3375,
      },
      "name": "PersistentVolumeOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolume#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3381,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolume#spec",
            },
            "remarks": "Provisioned by an administrator. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes",
            "summary": "Spec defines a specification of a persistent volume owned by the cluster.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3388,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PersistentVolumeSpec",
          },
        },
      ],
    },
    "dummy.PersistentVolumeSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PersistentVolumeSpec",
        },
        "summary": "PersistentVolumeSpec is the specification of a persistent volume.",
      },
      "fqn": "dummy.PersistentVolumeSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5879,
      },
      "name": "PersistentVolumeSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#accessModes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes",
            "summary": "AccessModes contains all ways the volume can be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5885,
          },
          "name": "accessModes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5892,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AWSElasticBlockStoreVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5899,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AzureDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5906,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AzureFilePersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#capacity",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity",
            "summary": "A description of the persistent volume's resources and capacity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5913,
          },
          "name": "capacity",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5920,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CephFSPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#cinder",
            },
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5927,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CinderPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#claimRef",
            },
            "remarks": "Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding",
            "summary": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5934,
          },
          "name": "claimRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#csi",
            },
            "summary": "CSI represents storage that is handled by an external CSI driver (Beta feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5941,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CSIPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5948,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FCVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5955,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FlexPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5962,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FlockerVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#gcePersistentDisk",
            },
            "remarks": "Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5969,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.GCEPersistentDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#glusterfs",
            },
            "remarks": "Provisioned by an admin. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5976,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.GlusterfsPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#hostPath",
            },
            "remarks": "Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "HostPath represents a directory on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5983,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HostPathVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#iscsi",
            },
            "remarks": "Provisioned by an admin.",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5990,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ISCSIPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#local",
            },
            "summary": "Local represents directly-attached storage with node affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5997,
          },
          "name": "local",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#mountOptions",
            },
            "summary": "A list of mount options, e.g. [\\"ro\\", \\"soft\\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6004,
          },
          "name": "mountOptions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#nfs",
            },
            "remarks": "Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
            "summary": "NFS represents an NFS mount on the host.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6011,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NFSVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#nodeAffinity",
            },
            "remarks": "This field influences the scheduling of pods that use this volume.",
            "summary": "NodeAffinity defines constraints that limit what nodes this volume can be accessed from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6018,
          },
          "name": "nodeAffinity",
          "optional": true,
          "type": Object {
            "fqn": "dummy.VolumeNodeAffinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#persistentVolumeReclaimPolicy",
            },
            "remarks": "Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming",
            "summary": "What happens to a persistent volume when released from its claim.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6025,
          },
          "name": "persistentVolumeReclaimPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6032,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PhotonPersistentDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6039,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PortworxVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6046,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "dummy.QuobyteVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#rbd",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6053,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RBDPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6060,
          },
          "name": "scaleIO",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ScaleIOPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#storageClassName",
            },
            "remarks": "Empty value means that this volume does not belong to any StorageClass.",
            "summary": "Name of StorageClass to which this persistent volume belongs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6067,
          },
          "name": "storageClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://releases.k8s.io/HEAD/examples/volumes/storageos/README.md.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6074,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "dummy.StorageOSPersistentVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#volumeMode",
            },
            "remarks": "Value of Filesystem is implied when not included in spec. This is a beta feature.",
            "summary": "volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6081,
          },
          "name": "volumeMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PersistentVolumeSpec#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6088,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.VsphereVirtualDiskVolumeSource",
          },
        },
      ],
    },
    "dummy.PhotonPersistentDiskVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource",
        },
        "summary": "Represents a Photon Controller persistent disk resource.",
      },
      "fqn": "dummy.PhotonPersistentDiskVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8619,
      },
      "name": "PhotonPersistentDiskVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource#pdID",
            },
            "summary": "ID that identifies Photon Controller persistent disk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8632,
          },
          "name": "pdID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8625,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Pod": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Pod",
        },
        "remarks": "This resource is created by clients and scheduled onto hosts.",
        "summary": "Pod is a collection of containers that can run on a host.",
      },
      "fqn": "dummy.Pod",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Pod\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PodOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1147,
      },
      "name": "Pod",
    },
    "dummy.PodAffinity": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodAffinity",
        },
        "summary": "Pod affinity is a group of inter pod affinity scheduling rules.",
      },
      "fqn": "dummy.PodAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10660,
      },
      "name": "PodAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10666,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.WeightedPodAffinityTerm",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10673,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodAffinityTerm",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodAffinityTerm": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodAffinityTerm",
        },
        "summary": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running.",
      },
      "fqn": "dummy.PodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12243,
      },
      "name": "PodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#topologyKey",
            },
            "remarks": "Empty topologyKey is not allowed.",
            "summary": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12263,
          },
          "name": "topologyKey",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#labelSelector",
            },
            "summary": "A label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12249,
          },
          "name": "labelSelector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAffinityTerm#namespaces",
            },
            "remarks": "null or empty list means \\"this pod's namespace\\"",
            "summary": "namespaces specifies which namespaces the labelSelector applies to (matches against);",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12256,
          },
          "name": "namespaces",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodAntiAffinity": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodAntiAffinity",
        },
        "summary": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      },
      "fqn": "dummy.PodAntiAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10682,
      },
      "name": "PodAntiAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \\"weight\\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
            "summary": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10688,
          },
          "name": "preferredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.WeightedPodAffinityTerm",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution",
            },
            "remarks": "If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
            "summary": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10695,
          },
          "name": "requiredDuringSchedulingIgnoredDuringExecution",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodAffinityTerm",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodDNSConfig": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodDNSConfig",
        },
        "summary": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      },
      "fqn": "dummy.PodDNSConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9195,
      },
      "name": "PodDNSConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#nameservers",
            },
            "remarks": "This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
            "summary": "A list of DNS name server IP addresses.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9201,
          },
          "name": "nameservers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#options",
            },
            "remarks": "This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
            "summary": "A list of DNS resolver options.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9208,
          },
          "name": "options",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodDNSConfigOption",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodDNSConfig#searches",
            },
            "remarks": "This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
            "summary": "A list of DNS search domains for host-name lookup.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9215,
          },
          "name": "searches",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodDNSConfigOption": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodDNSConfigOption",
        },
        "summary": "PodDNSConfigOption defines DNS resolver options of a pod.",
      },
      "fqn": "dummy.PodDNSConfigOption",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10935,
      },
      "name": "PodDNSConfigOption",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodDNSConfigOption#name",
            },
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10941,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodDNSConfigOption#value",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10946,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.PodDisruptionBudget": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudget",
        },
        "summary": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods.",
      },
      "fqn": "dummy.PodDisruptionBudget",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.policy.v1beta1.PodDisruptionBudget\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PodDisruptionBudgetOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1653,
      },
      "name": "PodDisruptionBudget",
    },
    "dummy.PodDisruptionBudgetList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList",
        },
        "summary": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
      },
      "fqn": "dummy.PodDisruptionBudgetList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.policy.v1beta1.PodDisruptionBudgetList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PodDisruptionBudgetListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1675,
      },
      "name": "PodDisruptionBudgetList",
    },
    "dummy.PodDisruptionBudgetListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList",
        },
        "summary": "PodDisruptionBudgetList is a collection of PodDisruptionBudgets.",
      },
      "fqn": "dummy.PodDisruptionBudgetListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4017,
      },
      "name": "PodDisruptionBudgetListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList#items",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4021,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodDisruptionBudget",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4026,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PodDisruptionBudgetOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudget",
        },
        "summary": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods.",
      },
      "fqn": "dummy.PodDisruptionBudgetOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3997,
      },
      "name": "PodDisruptionBudgetOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudget#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4001,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudget#spec",
            },
            "summary": "Specification of the desired behavior of the PodDisruptionBudget.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4008,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodDisruptionBudgetSpec",
          },
        },
      ],
    },
    "dummy.PodDisruptionBudgetSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec",
        },
        "summary": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
      },
      "fqn": "dummy.PodDisruptionBudgetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6882,
      },
      "name": "PodDisruptionBudgetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec#maxUnavailable",
            },
            "summary": "An eviction is allowed if at most \\"maxUnavailable\\" pods selected by \\"selector\\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \\"minAvailable\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6888,
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec#minAvailable",
            },
            "summary": "An eviction is allowed if at least \\"minAvailable\\" pods selected by \\"selector\\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \\"100%\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6895,
          },
          "name": "minAvailable",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec#selector",
            },
            "summary": "Label query over pods whose evictions are managed by the disruption budget.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6902,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
      ],
    },
    "dummy.PodList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodList",
        },
        "summary": "PodList is a list of Pods.",
      },
      "fqn": "dummy.PodList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PodList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PodListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1169,
      },
      "name": "PodList",
    },
    "dummy.PodListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodList",
        },
        "summary": "PodList is a list of Pods.",
      },
      "fqn": "dummy.PodListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3485,
      },
      "name": "PodListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodList#items",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md",
            "summary": "List of pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3491,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Pod",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3498,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PodOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Pod",
        },
        "remarks": "This resource is created by clients and scheduled onto hosts.",
        "summary": "Pod is a collection of containers that can run on a host.",
      },
      "fqn": "dummy.PodOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3463,
      },
      "name": "PodOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Pod#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3469,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Pod#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3476,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodSpec",
          },
        },
      ],
    },
    "dummy.PodPreset": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.settings.v1alpha1.PodPreset",
        },
        "summary": "PodPreset is a policy resource that defines additional runtime requirements for a Pod.",
      },
      "fqn": "dummy.PodPreset",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.settings.v1alpha1.PodPreset\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PodPresetOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1917,
      },
      "name": "PodPreset",
    },
    "dummy.PodPresetList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.settings.v1alpha1.PodPresetList",
        },
        "summary": "PodPresetList is a list of PodPreset objects.",
      },
      "fqn": "dummy.PodPresetList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.settings.v1alpha1.PodPresetList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PodPresetListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1939,
      },
      "name": "PodPresetList",
    },
    "dummy.PodPresetListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.settings.v1alpha1.PodPresetList",
        },
        "summary": "PodPresetList is a list of PodPreset objects.",
      },
      "fqn": "dummy.PodPresetListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4308,
      },
      "name": "PodPresetListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetList#items",
            },
            "summary": "Items is a list of schema objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4314,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodPreset",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4321,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PodPresetOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.settings.v1alpha1.PodPreset",
        },
        "summary": "PodPreset is a policy resource that defines additional runtime requirements for a Pod.",
      },
      "fqn": "dummy.PodPresetOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4290,
      },
      "name": "PodPresetOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPreset#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4294,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPreset#spec",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4299,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodPresetSpec",
          },
        },
      ],
    },
    "dummy.PodPresetSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec",
        },
        "summary": "PodPresetSpec is a description of a pod preset.",
      },
      "fqn": "dummy.PodPresetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7035,
      },
      "name": "PodPresetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec#env",
            },
            "summary": "Env defines the collection of EnvVar to inject into containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7041,
          },
          "name": "env",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EnvVar",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec#envFrom",
            },
            "summary": "EnvFrom defines the collection of EnvFromSource to inject into containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7048,
          },
          "name": "envFrom",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.EnvFromSource",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec#selector",
            },
            "remarks": "Required.",
            "summary": "Selector is a label query over a set of resources, in this case pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7055,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec#volumeMounts",
            },
            "summary": "VolumeMounts defines the collection of VolumeMount to inject into containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7062,
          },
          "name": "volumeMounts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.VolumeMount",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.settings.v1alpha1.PodPresetSpec#volumes",
            },
            "summary": "Volumes defines the collection of Volume to inject into the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7069,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Volume",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodReadinessGate": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodReadinessGate",
        },
        "summary": "PodReadinessGate contains the reference to a pod condition.",
      },
      "fqn": "dummy.PodReadinessGate",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9246,
      },
      "name": "PodReadinessGate",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodReadinessGate#conditionType",
            },
            "summary": "ConditionType refers to a condition in the pod's condition list with matching type.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9252,
          },
          "name": "conditionType",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.PodSecurityContext": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodSecurityContext",
        },
        "remarks": "Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
        "summary": "PodSecurityContext holds pod-level security attributes and common container settings.",
      },
      "fqn": "dummy.PodSecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9261,
      },
      "name": "PodSecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#fsGroup",
            },
            "remarks": "Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:

1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----

If unset, the Kubelet will not modify the ownership and permissions of any volume.",
            "summary": "A special supplemental group that applies to all containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9271,
          },
          "name": "fsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9278,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9285,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9293,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.",
            "summary": "The SELinux context to be applied to all containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9300,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SELinuxOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#supplementalGroups",
            },
            "remarks": "If unspecified, no groups will be added to any container.",
            "summary": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9307,
          },
          "name": "supplementalGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "number",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSecurityContext#sysctls",
            },
            "remarks": "Pods with unsupported sysctls (by the container runtime) might fail to launch.",
            "summary": "Sysctls hold a list of namespaced sysctls used for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9314,
          },
          "name": "sysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Sysctl",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodSecurityPolicy": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicy",
        },
        "summary": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
      },
      "fqn": "dummy.PodSecurityPolicy",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.policy.v1beta1.PodSecurityPolicy\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PodSecurityPolicyOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1543,
      },
      "name": "PodSecurityPolicy",
    },
    "dummy.PodSecurityPolicyList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicyList",
        },
        "summary": "PodSecurityPolicyList is a list of PodSecurityPolicy objects.",
      },
      "fqn": "dummy.PodSecurityPolicyList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.policy.v1beta1.PodSecurityPolicyList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PodSecurityPolicyListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1565,
      },
      "name": "PodSecurityPolicyList",
    },
    "dummy.PodSecurityPolicyListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicyList",
        },
        "summary": "PodSecurityPolicyList is a list of PodSecurityPolicy objects.",
      },
      "fqn": "dummy.PodSecurityPolicyListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3909,
      },
      "name": "PodSecurityPolicyListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicyList#items",
            },
            "summary": "items is a list of schema objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3915,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodSecurityPolicy",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicyList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3922,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PodSecurityPolicyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicy",
        },
        "summary": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
      },
      "fqn": "dummy.PodSecurityPolicyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3887,
      },
      "name": "PodSecurityPolicyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicy#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3893,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicy#spec",
            },
            "summary": "spec defines the policy enforced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3900,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodSecurityPolicySpec",
          },
        },
      ],
    },
    "dummy.PodSecurityPolicySpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec",
        },
        "summary": "PodSecurityPolicySpec defines the policy enforced.",
      },
      "fqn": "dummy.PodSecurityPolicySpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6651,
      },
      "name": "PodSecurityPolicySpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#fsGroup",
            },
            "summary": "fsGroup is the strategy that will dictate what fs group is used by the SecurityContext.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6731,
          },
          "name": "fsGroup",
          "type": Object {
            "fqn": "dummy.FSGroupStrategyOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#runAsUser",
            },
            "summary": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6794,
          },
          "name": "runAsUser",
          "type": Object {
            "fqn": "dummy.RunAsUserStrategyOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#seLinux",
            },
            "summary": "seLinux is the strategy that will dictate the allowable labels that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6801,
          },
          "name": "seLinux",
          "type": Object {
            "fqn": "dummy.SELinuxStrategyOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#supplementalGroups",
            },
            "summary": "supplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6808,
          },
          "name": "supplementalGroups",
          "type": Object {
            "fqn": "dummy.SupplementalGroupsStrategyOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedCapabilities",
            },
            "remarks": "Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.",
            "summary": "allowedCapabilities is a list of capabilities that can be requested to add to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6671,
          },
          "name": "allowedCapabilities",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedCSIDrivers",
            },
            "remarks": "An empty value means no CSI drivers can run inline within a pod spec.",
            "summary": "AllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6664,
          },
          "name": "allowedCSIDrivers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.AllowedCSIDriver",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedFlexVolumes",
            },
            "remarks": "Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \\"volumes\\" field.",
            "summary": "allowedFlexVolumes is a whitelist of allowed Flexvolumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6678,
          },
          "name": "allowedFlexVolumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.AllowedFlexVolume",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedHostPaths",
            },
            "remarks": "Empty indicates that all host paths may be used.",
            "summary": "allowedHostPaths is a white list of allowed host paths.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6685,
          },
          "name": "allowedHostPaths",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.AllowedHostPath",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedProcMountTypes",
            },
            "remarks": "Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.",
            "summary": "AllowedProcMountTypes is a whitelist of allowed ProcMountTypes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6692,
          },
          "name": "allowedProcMountTypes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowedUnsafeSysctls",
            },
            "remarks": "Each entry is either a plain sysctl name or ends in \\"*\\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.

Examples: e.g. \\"foo/*\\" allows \\"foo/bar\\", \\"foo/baz\\", etc. e.g. \\"foo.*\\" allows \\"foo.bar\\", \\"foo.baz\\", etc.",
            "summary": "allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6701,
          },
          "name": "allowedUnsafeSysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#allowPrivilegeEscalation",
            },
            "remarks": "If unspecified, defaults to true.",
            "summary": "allowPrivilegeEscalation determines if a pod can request to allow privilege escalation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6657,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#defaultAddCapabilities",
            },
            "remarks": "You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.",
            "summary": "defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6708,
          },
          "name": "defaultAddCapabilities",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#defaultAllowPrivilegeEscalation",
            },
            "summary": "defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6715,
          },
          "name": "defaultAllowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#forbiddenSysctls",
            },
            "remarks": "Each entry is either a plain sysctl name or ends in \\"*\\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.

Examples: e.g. \\"foo/*\\" forbids \\"foo/bar\\", \\"foo/baz\\", etc. e.g. \\"foo.*\\" forbids \\"foo.bar\\", \\"foo.baz\\", etc.",
            "summary": "forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6724,
          },
          "name": "forbiddenSysctls",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#hostIPC",
            },
            "summary": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6738,
          },
          "name": "hostIPC",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#hostNetwork",
            },
            "summary": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6745,
          },
          "name": "hostNetwork",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#hostPID",
            },
            "summary": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6752,
          },
          "name": "hostPID",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#hostPorts",
            },
            "summary": "hostPorts determines which host port ranges are allowed to be exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6759,
          },
          "name": "hostPorts",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.HostPortRange",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#privileged",
            },
            "summary": "privileged determines if a pod can request to be run as privileged.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6766,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#readOnlyRootFilesystem",
            },
            "remarks": "If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
            "summary": "readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6773,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#requiredDropCapabilities",
            },
            "remarks": "These are required to be dropped and cannot be added.",
            "summary": "requiredDropCapabilities are the capabilities that will be dropped from the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6780,
          },
          "name": "requiredDropCapabilities",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#runAsGroup",
            },
            "remarks": "If this field is omitted, the pod's RunAsGroup can take any value. This field requires the RunAsGroup feature gate to be enabled.",
            "summary": "RunAsGroup is the strategy that will dictate the allowable RunAsGroup values that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6787,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RunAsGroupStrategyOptions",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec#volumes",
            },
            "remarks": "Empty indicates that no volumes may be used. To allow all volumes you may use '*'.",
            "summary": "volumes is a white list of allowed volume plugins.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6815,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodSpec",
        },
        "summary": "PodSpec is a description of a pod.",
      },
      "fqn": "dummy.PodSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6154,
      },
      "name": "PodSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#containers",
            },
            "remarks": "Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.",
            "summary": "List of containers belonging to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6181,
          },
          "name": "containers",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Container",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#activeDeadlineSeconds",
            },
            "remarks": "Value must be a positive integer.",
            "summary": "Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6160,
          },
          "name": "activeDeadlineSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#affinity",
            },
            "summary": "If specified, the pod's scheduling constraints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6167,
          },
          "name": "affinity",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Affinity",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#automountServiceAccountToken",
            },
            "summary": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6174,
          },
          "name": "automountServiceAccountToken",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#dnsConfig",
            },
            "remarks": "Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
            "summary": "Specifies the DNS parameters of a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6188,
          },
          "name": "dnsConfig",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodDNSConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#dnsPolicy",
            },
            "default": "ClusterFirst\\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
            "remarks": "Defaults to \\"ClusterFirst\\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
            "summary": "Set DNS policy for the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6196,
          },
          "name": "dnsPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#enableServiceLinks",
            },
            "default": "true.",
            "remarks": "Optional: Defaults to true.",
            "summary": "EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6204,
          },
          "name": "enableServiceLinks",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#hostAliases",
            },
            "remarks": "This is only valid for non-hostNetwork pods.",
            "summary": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6211,
          },
          "name": "hostAliases",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.HostAlias",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#hostIPC",
            },
            "default": "false.",
            "remarks": "Optional: Default to false.",
            "summary": "Use the host's ipc namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6219,
          },
          "name": "hostIPC",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#hostname",
            },
            "summary": "Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6242,
          },
          "name": "hostname",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#hostNetwork",
            },
            "default": "false.",
            "remarks": "Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.",
            "summary": "Host networking requested for this pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6227,
          },
          "name": "hostNetwork",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#hostPID",
            },
            "default": "false.",
            "remarks": "Optional: Default to false.",
            "summary": "Use the host's pid namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6235,
          },
          "name": "hostPID",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#imagePullSecrets",
            },
            "remarks": "If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
            "summary": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6249,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LocalObjectReference",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#initContainers",
            },
            "remarks": "Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, or Liveness probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
            "summary": "List of initialization containers belonging to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6256,
          },
          "name": "initContainers",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Container",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#nodeName",
            },
            "remarks": "If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.",
            "summary": "NodeName is a request to schedule this pod onto a specific node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6263,
          },
          "name": "nodeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#nodeSelector",
            },
            "remarks": "Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
            "summary": "NodeSelector is a selector which must be true for the pod to fit on a node.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6270,
          },
          "name": "nodeSelector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#priority",
            },
            "remarks": "Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.",
            "summary": "The priority value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6277,
          },
          "name": "priority",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#priorityClassName",
            },
            "remarks": "\\"system-node-critical\\" and \\"system-cluster-critical\\" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.",
            "summary": "If specified, indicates the pod's priority.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6284,
          },
          "name": "priorityClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#readinessGates",
            },
            "remarks": "A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to \\"True\\" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md",
            "summary": "If specified, all readiness gates will be evaluated for pod readiness.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6291,
          },
          "name": "readinessGates",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodReadinessGate",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#restartPolicy",
            },
            "default": "Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "remarks": "One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",
            "summary": "Restart policy for all containers within the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6299,
          },
          "name": "restartPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#runtimeClassName",
            },
            "summary": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the \\"legacy\\" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is an alpha feature and may change in the future.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6306,
          },
          "name": "runtimeClassName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#schedulerName",
            },
            "remarks": "If not specified, the pod will be dispatched by default scheduler.",
            "summary": "If specified, the pod will be dispatched by specified scheduler.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6313,
          },
          "name": "schedulerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#securityContext",
            },
            "default": "empty.  See type description for default values of each field.",
            "remarks": "Optional: Defaults to empty.  See type description for default values of each field.",
            "summary": "SecurityContext holds pod-level security attributes and common container settings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6321,
          },
          "name": "securityContext",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodSecurityContext",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#serviceAccount",
            },
            "remarks": "Deprecated: Use serviceAccountName instead.",
            "summary": "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6328,
          },
          "name": "serviceAccount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#serviceAccountName",
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "summary": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6335,
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#shareProcessNamespace",
            },
            "default": "false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.",
            "remarks": "When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false. This field is beta-level and may be disabled with the PodShareProcessNamespace feature.",
            "summary": "Share a single process namespace between all of the containers in a pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6343,
          },
          "name": "shareProcessNamespace",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#subdomain",
            },
            "summary": "If specified, the fully qualified Pod hostname will be \\"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\\". If not specified, the pod will not have a domainname at all.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6350,
          },
          "name": "subdomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#terminationGracePeriodSeconds",
            },
            "default": "30 seconds.",
            "remarks": "May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
            "summary": "Optional duration in seconds the pod needs to terminate gracefully.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6358,
          },
          "name": "terminationGracePeriodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#tolerations",
            },
            "summary": "If specified, the pod's tolerations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6365,
          },
          "name": "tolerations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Toleration",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodSpec#volumes",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes",
            "summary": "List of volumes that can be mounted by containers belonging to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6372,
          },
          "name": "volumes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Volume",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PodTemplate": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodTemplate",
        },
        "summary": "PodTemplate describes a template for creating copies of a predefined pod.",
      },
      "fqn": "dummy.PodTemplate",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PodTemplate\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.PodTemplateOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1191,
      },
      "name": "PodTemplate",
    },
    "dummy.PodTemplateList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodTemplateList",
        },
        "summary": "PodTemplateList is a list of PodTemplates.",
      },
      "fqn": "dummy.PodTemplateList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.PodTemplateList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PodTemplateListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1213,
      },
      "name": "PodTemplateList",
    },
    "dummy.PodTemplateListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodTemplateList",
        },
        "summary": "PodTemplateList is a list of PodTemplates.",
      },
      "fqn": "dummy.PodTemplateListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3529,
      },
      "name": "PodTemplateListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplateList#items",
            },
            "summary": "List of pod templates.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3535,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PodTemplate",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplateList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3542,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PodTemplateOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodTemplate",
        },
        "summary": "PodTemplate describes a template for creating copies of a predefined pod.",
      },
      "fqn": "dummy.PodTemplateOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3507,
      },
      "name": "PodTemplateOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplate#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3513,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplate#template",
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Template defines the pods that will be created from this pod template.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3520,
          },
          "name": "template",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
      ],
    },
    "dummy.PodTemplateSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PodTemplateSpec",
        },
        "summary": "PodTemplateSpec describes the data a pod should have when created from a template.",
      },
      "fqn": "dummy.PodTemplateSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6381,
      },
      "name": "PodTemplateSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplateSpec#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6387,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PodTemplateSpec#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Specification of the desired behavior of the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6394,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodSpec",
          },
        },
      ],
    },
    "dummy.Policy": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.auditregistration.v1alpha1.Policy",
        },
        "summary": "Policy defines the configuration of how audit events are logged.",
      },
      "fqn": "dummy.Policy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7640,
      },
      "name": "Policy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.Policy#level",
            },
            "remarks": "available options: None, Metadata, Request, RequestResponse required",
            "summary": "The Level that all requests are recorded at.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7646,
          },
          "name": "level",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.auditregistration.v1alpha1.Policy#stages",
            },
            "summary": "Stages is a list of stages for which events are created.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7653,
          },
          "name": "stages",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PolicyRule": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.PolicyRule",
        },
        "summary": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      },
      "fqn": "dummy.PolicyRule",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6926,
      },
      "name": "PolicyRule",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#verbs",
            },
            "remarks": "VerbAll represents all kinds.",
            "summary": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6960,
          },
          "name": "verbs",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#apiGroups",
            },
            "remarks": "If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.",
            "summary": "APIGroups is the name of the APIGroup that contains the resources.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6932,
          },
          "name": "apiGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#nonResourceURLs",
            },
            "remarks": "*s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \\"pods\\" or \\"secrets\\") or non-resource URL paths (such as \\"/api\\"),  but not both.",
            "summary": "NonResourceURLs is a set of partial urls that a user should have access to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6939,
          },
          "name": "nonResourceURLs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#resourceNames",
            },
            "remarks": "An empty set means that everything is allowed.",
            "summary": "ResourceNames is an optional white list of names that the rule applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6946,
          },
          "name": "resourceNames",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.PolicyRule#resources",
            },
            "remarks": "ResourceAll represents all resources.",
            "summary": "Resources is a list of resources this rule applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6953,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.PortworxVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PortworxVolumeSource",
        },
        "summary": "PortworxVolumeSource represents a Portworx volume resource.",
      },
      "fqn": "dummy.PortworxVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8641,
      },
      "name": "PortworxVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#volumeID",
            },
            "summary": "VolumeID uniquely identifies a Portworx volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8662,
          },
          "name": "volumeID",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#fsType",
            },
            "remarks": "Ex. \\"ext4\\", \\"xfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8647,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PortworxVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8655,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.Preconditions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions",
        },
        "summary": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      },
      "fqn": "dummy.Preconditions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9953,
      },
      "name": "Preconditions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions#resourceVersion",
            },
            "summary": "Specifies the target ResourceVersion.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9959,
          },
          "name": "resourceVersion",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions#uid",
            },
            "summary": "Specifies the target UID.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9966,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.PreferredSchedulingTerm": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm",
        },
        "summary": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      },
      "fqn": "dummy.PreferredSchedulingTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12199,
      },
      "name": "PreferredSchedulingTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm#preference",
            },
            "summary": "A node selector term, associated with the corresponding weight.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12205,
          },
          "name": "preference",
          "type": Object {
            "fqn": "dummy.NodeSelectorTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.PreferredSchedulingTerm#weight",
            },
            "summary": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12212,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.PriorityClass": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.scheduling.v1.PriorityClass",
        },
        "remarks": "The value can be any valid integer.",
        "summary": "PriorityClass defines mapping from a priority class name to the priority integer value.",
      },
      "fqn": "dummy.PriorityClass",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.scheduling.v1.PriorityClass\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PriorityClassOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1873,
      },
      "name": "PriorityClass",
    },
    "dummy.PriorityClassList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.scheduling.v1.PriorityClassList",
        },
        "summary": "PriorityClassList is a collection of priority classes.",
      },
      "fqn": "dummy.PriorityClassList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.scheduling.v1.PriorityClassList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.PriorityClassListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1895,
      },
      "name": "PriorityClassList",
    },
    "dummy.PriorityClassListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.scheduling.v1.PriorityClassList",
        },
        "summary": "PriorityClassList is a collection of priority classes.",
      },
      "fqn": "dummy.PriorityClassListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4268,
      },
      "name": "PriorityClassListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClassList#items",
            },
            "summary": "items is the list of PriorityClasses.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4274,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PriorityClass",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClassList#metadata",
            },
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4281,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.PriorityClassOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.scheduling.v1.PriorityClass",
        },
        "remarks": "The value can be any valid integer.",
        "summary": "PriorityClass defines mapping from a priority class name to the priority integer value.",
      },
      "fqn": "dummy.PriorityClassOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4232,
      },
      "name": "PriorityClassOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#value",
            },
            "remarks": "This is the actual priority that pods receive when they have the name of this class in their pod spec.",
            "summary": "The value of this priority class.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4259,
          },
          "name": "value",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#description",
            },
            "summary": "description is an arbitrary string that usually provides guidelines on when this priority class should be used.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4238,
          },
          "name": "description",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#globalDefault",
            },
            "remarks": "Only one PriorityClass can be marked as \`globalDefault\`. However, if more than one PriorityClasses exists with their \`globalDefault\` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.",
            "summary": "globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4245,
          },
          "name": "globalDefault",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.scheduling.v1.PriorityClass#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4252,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.Probe": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Probe",
        },
        "summary": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      },
      "fqn": "dummy.Probe",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10726,
      },
      "name": "Probe",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#exec",
            },
            "remarks": "Exec specifies the action to take.",
            "summary": "One and only one of the following should be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10732,
          },
          "name": "exec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ExecAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#failureThreshold",
            },
            "default": "3. Minimum value is 1.",
            "remarks": "Defaults to 3. Minimum value is 1.",
            "summary": "Minimum consecutive failures for the probe to be considered failed after having succeeded.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10740,
          },
          "name": "failureThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#httpGet",
            },
            "summary": "HTTPGet specifies the http request to perform.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10747,
          },
          "name": "httpGet",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HTTPGetAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#initialDelaySeconds",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after the container has started before liveness probes are initiated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10754,
          },
          "name": "initialDelaySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#periodSeconds",
            },
            "default": "10 seconds. Minimum value is 1.",
            "remarks": "Default to 10 seconds. Minimum value is 1.",
            "summary": "How often (in seconds) to perform the probe.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10762,
          },
          "name": "periodSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#successThreshold",
            },
            "default": "1. Must be 1 for liveness. Minimum value is 1.",
            "remarks": "Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
            "summary": "Minimum consecutive successes for the probe to be considered successful after having failed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10770,
          },
          "name": "successThreshold",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#tcpSocket",
            },
            "remarks": "TCP hooks not yet supported",
            "summary": "TCPSocket specifies an action involving a TCP port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10777,
          },
          "name": "tcpSocket",
          "optional": true,
          "type": Object {
            "fqn": "dummy.TCPSocketAction",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Probe#timeoutSeconds",
            },
            "default": "1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "remarks": "Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
            "summary": "Number of seconds after which the probe times out.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10785,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.ProjectedVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ProjectedVolumeSource",
        },
        "summary": "Represents a projected volume source.",
      },
      "fqn": "dummy.ProjectedVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11473,
      },
      "name": "ProjectedVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ProjectedVolumeSource#sources",
            },
            "summary": "list of volume projections.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11486,
          },
          "name": "sources",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.VolumeProjection",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ProjectedVolumeSource#defaultMode",
            },
            "remarks": "Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11479,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.Quantity": Object {
      "assembly": "dummy",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.api.resource.Quantity",
        },
      },
      "fqn": "dummy.Quantity",
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8086,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8090,
          },
          "name": "fromNumber",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "number",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "dummy.Quantity",
            },
          },
          "static": true,
        },
        Object {
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8087,
          },
          "name": "fromString",
          "parameters": Array [
            Object {
              "name": "value",
              "type": Object {
                "primitive": "string",
              },
            },
          ],
          "returns": Object {
            "type": Object {
              "fqn": "dummy.Quantity",
            },
          },
          "static": true,
        },
      ],
      "name": "Quantity",
    },
    "dummy.QuobyteVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.QuobyteVolumeSource",
        },
        "remarks": "Quobyte volumes do not support ownership management or SELinux relabeling.",
        "summary": "Represents a Quobyte mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.QuobyteVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8671,
      },
      "name": "QuobyteVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#registry",
            },
            "summary": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8693,
          },
          "name": "registry",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#volume",
            },
            "summary": "Volume is a string that references an already created Quobyte volume by name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8715,
          },
          "name": "volume",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#group",
            },
            "default": "no group",
            "summary": "Group to map volume access to Default is no group.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8678,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8686,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#tenant",
            },
            "summary": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8700,
          },
          "name": "tenant",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.QuobyteVolumeSource#user",
            },
            "default": "serivceaccount user",
            "summary": "User to map volume access to Defaults to serivceaccount user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8708,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.RBDPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource",
        },
        "remarks": "RBD volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a Rados Block Device mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.RBDPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8724,
      },
      "name": "RBDPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#image",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8737,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#monitors",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8752,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8730,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8745,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#pool",
            },
            "default": "rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8760,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#readOnly",
            },
            "default": "false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8768,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#secretRef",
            },
            "default": "nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8776,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDPersistentVolumeSource#user",
            },
            "default": "admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8784,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.RBDVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.RBDVolumeSource",
        },
        "remarks": "RBD volumes support ownership management and SELinux relabeling.",
        "summary": "Represents a Rados Block Device mount that lasts the lifetime of a pod.",
      },
      "fqn": "dummy.RBDVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11495,
      },
      "name": "RBDVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#image",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados image name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11508,
          },
          "name": "image",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#monitors",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "A collection of Ceph monitors.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11523,
          },
          "name": "monitors",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#fsType",
            },
            "remarks": "Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
            "summary": "Filesystem type of the volume that you want to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11501,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#keyring",
            },
            "default": "etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is /etc/ceph/keyring. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "Keyring is the path to key ring for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11516,
          },
          "name": "keyring",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#pool",
            },
            "default": "rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados pool name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11531,
          },
          "name": "pool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#readOnly",
            },
            "default": "false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11539,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#secretRef",
            },
            "default": "nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "If provided overrides keyring. Default is nil. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "SecretRef is name of the authentication secret for RBDUser.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11547,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.RBDVolumeSource#user",
            },
            "default": "admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "remarks": "Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
            "summary": "The rados user name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11555,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.RawExtension": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.runtime.RawExtension",
        },
        "remarks": "To use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.

// Internal package: type MyAPIObject struct {
runtime.TypeMeta \`json:\\",inline\\"\`
MyPlugin runtime.Object \`json:\\"myPlugin\\"\`
} type PluginA struct {
AOption string \`json:\\"aOption\\"\`
}

// External package: type MyAPIObject struct {
runtime.TypeMeta \`json:\\",inline\\"\`
MyPlugin runtime.RawExtension \`json:\\"myPlugin\\"\`
} type PluginA struct {
AOption string \`json:\\"aOption\\"\`
}

// On the wire, the JSON will look something like this: {
\\"kind\\":\\"MyAPIObject\\",
\\"apiVersion\\":\\"v1\\",
\\"myPlugin\\": {
\\"kind\\":\\"PluginA\\",
\\"aOption\\":\\"foo\\",
},
}

So what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
        "summary": "RawExtension is used to hold extensions in external versions.",
      },
      "fqn": "dummy.RawExtension",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4976,
      },
      "name": "RawExtension",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.runtime.RawExtension#Raw",
            },
            "summary": "Raw is the underlying serialization of this object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4982,
          },
          "name": "raw",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ReplicaSet": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ReplicaSet",
        },
        "summary": "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
      },
      "fqn": "dummy.ReplicaSet",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.ReplicaSet\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ReplicaSetOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 231,
      },
      "name": "ReplicaSet",
    },
    "dummy.ReplicaSetList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ReplicaSetList",
        },
        "summary": "ReplicaSetList is a collection of ReplicaSets.",
      },
      "fqn": "dummy.ReplicaSetList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.ReplicaSetList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ReplicaSetListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 253,
      },
      "name": "ReplicaSetList",
    },
    "dummy.ReplicaSetListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ReplicaSetList",
        },
        "summary": "ReplicaSetList is a collection of ReplicaSets.",
      },
      "fqn": "dummy.ReplicaSetListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2499,
      },
      "name": "ReplicaSetListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
            "summary": "List of ReplicaSets.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2505,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ReplicaSet",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2512,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ReplicaSetOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ReplicaSet",
        },
        "summary": "ReplicaSet ensures that a specified number of pod replicas are running at any given time.",
      },
      "fqn": "dummy.ReplicaSetOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2477,
      },
      "name": "ReplicaSetOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSet#metadata",
            },
            "remarks": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s) that the ReplicaSet manages.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2483,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSet#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the specification of the desired behavior of the ReplicaSet.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2490,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ReplicaSetSpec",
          },
        },
      ],
    },
    "dummy.ReplicaSetSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.ReplicaSetSpec",
        },
        "summary": "ReplicaSetSpec is the specification of a ReplicaSet.",
      },
      "fqn": "dummy.ReplicaSetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5104,
      },
      "name": "ReplicaSetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#selector",
            },
            "remarks": "Label keys and values that must match in order to be controlled by this replica set. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "summary": "Selector is a label query over pods that should match the replica count.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5126,
          },
          "name": "selector",
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#minReadySeconds",
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5111,
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#replicas",
            },
            "default": "1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "remarks": "This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller",
            "summary": "Replicas is the number of desired replicas.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5119,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.ReplicaSetSpec#template",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "summary": "Template is the object that describes the pod that will be created if insufficient replicas are detected.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5133,
          },
          "name": "template",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
      ],
    },
    "dummy.ReplicationController": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ReplicationController",
        },
        "summary": "ReplicationController represents the configuration of a replication controller.",
      },
      "fqn": "dummy.ReplicationController",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ReplicationController\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ReplicationControllerOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1235,
      },
      "name": "ReplicationController",
    },
    "dummy.ReplicationControllerList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ReplicationControllerList",
        },
        "summary": "ReplicationControllerList is a collection of replication controllers.",
      },
      "fqn": "dummy.ReplicationControllerList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ReplicationControllerList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ReplicationControllerListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1257,
      },
      "name": "ReplicationControllerList",
    },
    "dummy.ReplicationControllerListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ReplicationControllerList",
        },
        "summary": "ReplicationControllerList is a collection of replication controllers.",
      },
      "fqn": "dummy.ReplicationControllerListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3573,
      },
      "name": "ReplicationControllerListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller",
            "summary": "List of replication controllers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3579,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ReplicationController",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3586,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ReplicationControllerOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ReplicationController",
        },
        "summary": "ReplicationController represents the configuration of a replication controller.",
      },
      "fqn": "dummy.ReplicationControllerOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3551,
      },
      "name": "ReplicationControllerOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationController#metadata",
            },
            "remarks": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "If the Labels of a ReplicationController are empty, they are defaulted to be the same as the Pod(s) that the replication controller manages.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3557,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationController#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the specification of the desired behavior of the replication controller.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3564,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ReplicationControllerSpec",
          },
        },
      ],
    },
    "dummy.ReplicationControllerSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ReplicationControllerSpec",
        },
        "summary": "ReplicationControllerSpec is the specification of a replication controller.",
      },
      "fqn": "dummy.ReplicationControllerSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6403,
      },
      "name": "ReplicationControllerSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#minReadySeconds",
            },
            "default": "0 (pod will be considered available as soon as it is ready)",
            "remarks": "Defaults to 0 (pod will be considered available as soon as it is ready)",
            "summary": "Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6410,
          },
          "name": "minReadySeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#replicas",
            },
            "default": "1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
            "remarks": "This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller",
            "summary": "Replicas is the number of desired replicas.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6418,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#selector",
            },
            "remarks": "If Selector is empty, it is defaulted to the labels present on the Pod template. Label keys and values that must match in order to be controlled by this replication controller, if empty defaulted to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "summary": "Selector is a label query over pods that should match the Replicas count.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6425,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ReplicationControllerSpec#template",
            },
            "remarks": "This takes precedence over a TemplateRef. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template",
            "summary": "Template is the object that describes the pod that will be created if insufficient replicas are detected.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6432,
          },
          "name": "template",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
      ],
    },
    "dummy.ResourceAttributes": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.ResourceAttributes",
        },
        "summary": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface.",
      },
      "fqn": "dummy.ResourceAttributes",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7684,
      },
      "name": "ResourceAttributes",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#group",
            },
            "remarks": "\\"*\\" means all.",
            "summary": "Group is the API Group of the Resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7690,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#name",
            },
            "remarks": "\\"\\" (empty) means all.",
            "summary": "Name is the name of the resource being requested for a \\"get\\" or deleted for a \\"delete\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7697,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#namespace",
            },
            "remarks": "Currently, there is no distinction between no namespace and all namespaces \\"\\" (empty) is defaulted for LocalSubjectAccessReviews \\"\\" (empty) is empty for cluster-scoped resources \\"\\" (empty) means \\"all\\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
            "summary": "Namespace is the namespace of the action being requested.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7704,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#resource",
            },
            "remarks": "\\"*\\" means all.",
            "summary": "Resource is one of the existing resource types.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7711,
          },
          "name": "resource",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#subresource",
            },
            "remarks": "\\"\\" means none.",
            "summary": "Subresource is one of the existing resource types.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7718,
          },
          "name": "subresource",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#verb",
            },
            "remarks": "\\"*\\" means all.",
            "summary": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7725,
          },
          "name": "verb",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.ResourceAttributes#version",
            },
            "remarks": "\\"*\\" means all.",
            "summary": "Version is the API Version of the Resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7732,
          },
          "name": "version",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ResourceFieldSelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceFieldSelector",
        },
        "summary": "ResourceFieldSelector represents container resources (cpu, memory) and their output format.",
      },
      "fqn": "dummy.ResourceFieldSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12600,
      },
      "name": "ResourceFieldSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#resource",
            },
            "summary": "Required: resource to select.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12620,
          },
          "name": "resource",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#containerName",
            },
            "summary": "Container name: required for volumes, optional for env vars.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12606,
          },
          "name": "containerName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceFieldSelector#divisor",
            },
            "summary": "Specifies the output format of the exposed resources, defaults to \\"1\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12613,
          },
          "name": "divisor",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Quantity",
          },
        },
      ],
    },
    "dummy.ResourceQuota": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceQuota",
        },
        "summary": "ResourceQuota sets aggregate quota restrictions enforced per namespace.",
      },
      "fqn": "dummy.ResourceQuota",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ResourceQuota\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ResourceQuotaOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1279,
      },
      "name": "ResourceQuota",
    },
    "dummy.ResourceQuotaList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceQuotaList",
        },
        "summary": "ResourceQuotaList is a list of ResourceQuota items.",
      },
      "fqn": "dummy.ResourceQuotaList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ResourceQuotaList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ResourceQuotaListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1301,
      },
      "name": "ResourceQuotaList",
    },
    "dummy.ResourceQuotaListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceQuotaList",
        },
        "summary": "ResourceQuotaList is a list of ResourceQuota items.",
      },
      "fqn": "dummy.ResourceQuotaListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3617,
      },
      "name": "ResourceQuotaListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuotaList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "summary": "Items is a list of ResourceQuota objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3623,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ResourceQuota",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuotaList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3630,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ResourceQuotaOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceQuota",
        },
        "summary": "ResourceQuota sets aggregate quota restrictions enforced per namespace.",
      },
      "fqn": "dummy.ResourceQuotaOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3595,
      },
      "name": "ResourceQuotaOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuota#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3601,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuota#spec",
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the desired quota.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3608,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceQuotaSpec",
          },
        },
      ],
    },
    "dummy.ResourceQuotaSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceQuotaSpec",
        },
        "summary": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
      },
      "fqn": "dummy.ResourceQuotaSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6441,
      },
      "name": "ResourceQuotaSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#hard",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
            "summary": "hard is the set of desired hard limits for each named resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6447,
          },
          "name": "hard",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#scopes",
            },
            "remarks": "If not specified, the quota matches all objects.",
            "summary": "A collection of filters that must match each object tracked by a quota.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6461,
          },
          "name": "scopes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceQuotaSpec#scopeSelector",
            },
            "remarks": "For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.",
            "summary": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6454,
          },
          "name": "scopeSelector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ScopeSelector",
          },
        },
      ],
    },
    "dummy.ResourceRequirements": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ResourceRequirements",
        },
        "summary": "ResourceRequirements describes the compute resource requirements.",
      },
      "fqn": "dummy.ResourceRequirements",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8983,
      },
      "name": "ResourceRequirements",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceRequirements#limits",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Limits describes the maximum amount of compute resources allowed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8989,
          },
          "name": "limits",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ResourceRequirements#requests",
            },
            "remarks": "If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
            "summary": "Requests describes the minimum amount of compute resources required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8996,
          },
          "name": "requests",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Quantity",
              },
              "kind": "map",
            },
          },
        },
      ],
    },
    "dummy.Role": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.Role",
        },
        "summary": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
      },
      "fqn": "dummy.Role",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.Role\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.RoleOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1785,
      },
      "name": "Role",
    },
    "dummy.RoleBinding": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleBinding",
        },
        "remarks": "It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
        "summary": "RoleBinding references a role, but does not contain it.",
      },
      "fqn": "dummy.RoleBinding",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.RoleBinding\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.RoleBindingOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1807,
      },
      "name": "RoleBinding",
    },
    "dummy.RoleBindingList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleBindingList",
        },
        "summary": "RoleBindingList is a collection of RoleBindings.",
      },
      "fqn": "dummy.RoleBindingList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.RoleBindingList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.RoleBindingListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1829,
      },
      "name": "RoleBindingList",
    },
    "dummy.RoleBindingListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleBindingList",
        },
        "summary": "RoleBindingList is a collection of RoleBindings.",
      },
      "fqn": "dummy.RoleBindingListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4188,
      },
      "name": "RoleBindingListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleBindingList#items",
            },
            "summary": "Items is a list of RoleBindings.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4194,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.RoleBinding",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleBindingList#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4201,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.RoleBindingOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleBinding",
        },
        "remarks": "It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
        "summary": "RoleBinding references a role, but does not contain it.",
      },
      "fqn": "dummy.RoleBindingOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4159,
      },
      "name": "RoleBindingOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#roleRef",
            },
            "remarks": "If the RoleRef cannot be resolved, the Authorizer must return an error.",
            "summary": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4172,
          },
          "name": "roleRef",
          "type": Object {
            "fqn": "dummy.RoleRef",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4165,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleBinding#subjects",
            },
            "summary": "Subjects holds references to the objects the role applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4179,
          },
          "name": "subjects",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Subject",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.RoleList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleList",
        },
        "summary": "RoleList is a collection of Roles.",
      },
      "fqn": "dummy.RoleList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.rbac.v1.RoleList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.RoleListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1851,
      },
      "name": "RoleList",
    },
    "dummy.RoleListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleList",
        },
        "summary": "RoleList is a collection of Roles.",
      },
      "fqn": "dummy.RoleListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4210,
      },
      "name": "RoleListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleList#items",
            },
            "summary": "Items is a list of Roles.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4216,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Role",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleList#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4223,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.RoleOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.Role",
        },
        "summary": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
      },
      "fqn": "dummy.RoleOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4137,
      },
      "name": "RoleOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Role#metadata",
            },
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4143,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Role#rules",
            },
            "summary": "Rules holds all the PolicyRules for this Role.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4150,
          },
          "name": "rules",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PolicyRule",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.RoleRef": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.RoleRef",
        },
        "summary": "RoleRef contains information that points to the role being used.",
      },
      "fqn": "dummy.RoleRef",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6969,
      },
      "name": "RoleRef",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleRef#apiGroup",
            },
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6975,
          },
          "name": "apiGroup",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleRef#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6982,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.RoleRef#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6989,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.RollingUpdateDaemonSet": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.RollingUpdateDaemonSet",
        },
        "summary": "Spec to control the desired behavior of daemon set rolling update.",
      },
      "fqn": "dummy.RollingUpdateDaemonSet",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10504,
      },
      "name": "RollingUpdateDaemonSet",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDaemonSet#maxUnavailable",
            },
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.",
            "summary": "The maximum number of DaemonSet pods that can be unavailable during the update.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10510,
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
      ],
    },
    "dummy.RollingUpdateDeployment": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment",
        },
        "summary": "Spec to control the desired behavior of rolling update.",
      },
      "fqn": "dummy.RollingUpdateDeployment",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10519,
      },
      "name": "RollingUpdateDeployment",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment#maxSurge",
            },
            "default": "25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.",
            "summary": "The maximum number of pods that can be scheduled above the desired number of pods.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10526,
          },
          "name": "maxSurge",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.RollingUpdateDeployment#maxUnavailable",
            },
            "default": "25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
            "remarks": "Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.",
            "summary": "The maximum number of pods that can be unavailable during the update.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10534,
          },
          "name": "maxUnavailable",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
      ],
    },
    "dummy.RollingUpdateStatefulSetStrategy": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy",
        },
        "summary": "RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.",
      },
      "fqn": "dummy.RollingUpdateStatefulSetStrategy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10543,
      },
      "name": "RollingUpdateStatefulSetStrategy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy#partition",
            },
            "remarks": "Default value is 0.",
            "summary": "Partition indicates the ordinal at which the StatefulSet should be partitioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10549,
          },
          "name": "partition",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.RuleWithOperations": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations",
        },
        "remarks": "It is recommended to make sure that all the tuple expansions are valid.",
        "summary": "RuleWithOperations is a tuple of Operations and Resources.",
      },
      "fqn": "dummy.RuleWithOperations",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7521,
      },
      "name": "RuleWithOperations",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations#apiGroups",
            },
            "remarks": "'*' is all groups. If '*' is present, the length of the slice must be one. Required.",
            "summary": "APIGroups is the API groups the resources belong to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7527,
          },
          "name": "apiGroups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations#apiVersions",
            },
            "remarks": "'*' is all versions. If '*' is present, the length of the slice must be one. Required.",
            "summary": "APIVersions is the API versions the resources belong to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7534,
          },
          "name": "apiVersions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations#operations",
            },
            "remarks": "If '*' is present, the length of the slice must be one. Required.",
            "summary": "Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7541,
          },
          "name": "operations",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations#resources",
            },
            "remarks": "For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '_/scale' means all scale subresources. '_/*' means all resources and their subresources.

If wildcard is present, the validation rule will ensure resources do not overlap with each other.

Depending on the enclosing object, subresources might not be allowed. Required.",
            "summary": "Resources is a list of resources this rule applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7554,
          },
          "name": "resources",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations#scope",
            },
            "default": ".",
            "remarks": "Valid values are \\"Cluster\\", \\"Namespaced\\", and \\"*\\" \\"Cluster\\" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. \\"Namespaced\\" means that only namespaced resources will match this rule. \\"*\\" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is \\"*\\".",
            "summary": "scope specifies the scope of this rule.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7562,
          },
          "name": "scope",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.RunAsGroupStrategyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions",
        },
        "summary": "RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.",
      },
      "fqn": "dummy.RunAsGroupStrategyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9865,
      },
      "name": "RunAsGroupStrategyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions#rule",
            },
            "summary": "rule is the strategy that will dictate the allowable RunAsGroup values that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9878,
          },
          "name": "rule",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions#ranges",
            },
            "remarks": "If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.",
            "summary": "ranges are the allowed ranges of gids that may be used.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9871,
          },
          "name": "ranges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IDRange",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.RunAsUserStrategyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions",
        },
        "summary": "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.",
      },
      "fqn": "dummy.RunAsUserStrategyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9887,
      },
      "name": "RunAsUserStrategyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions#rule",
            },
            "summary": "rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9900,
          },
          "name": "rule",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions#ranges",
            },
            "remarks": "If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.",
            "summary": "ranges are the allowed ranges of uids that may be used.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9893,
          },
          "name": "ranges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IDRange",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.RuntimeClass": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.node.v1beta1.RuntimeClass",
        },
        "remarks": "The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md",
        "summary": "RuntimeClass defines a class of container runtime supported in the cluster.",
      },
      "fqn": "dummy.RuntimeClass",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.node.v1beta1.RuntimeClass\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.RuntimeClassOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1587,
      },
      "name": "RuntimeClass",
    },
    "dummy.RuntimeClassList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.node.v1beta1.RuntimeClassList",
        },
        "summary": "RuntimeClassList is a list of RuntimeClass objects.",
      },
      "fqn": "dummy.RuntimeClassList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.node.v1beta1.RuntimeClassList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.RuntimeClassListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1609,
      },
      "name": "RuntimeClassList",
    },
    "dummy.RuntimeClassListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.node.v1beta1.RuntimeClassList",
        },
        "summary": "RuntimeClassList is a list of RuntimeClass objects.",
      },
      "fqn": "dummy.RuntimeClassListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3953,
      },
      "name": "RuntimeClassListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.node.v1beta1.RuntimeClassList#items",
            },
            "summary": "Items is a list of schema objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3959,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.RuntimeClass",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.node.v1beta1.RuntimeClassList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3966,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.RuntimeClassOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.node.v1beta1.RuntimeClass",
        },
        "remarks": "The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md",
        "summary": "RuntimeClass defines a class of container runtime supported in the cluster.",
      },
      "fqn": "dummy.RuntimeClassOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3931,
      },
      "name": "RuntimeClassOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.node.v1beta1.RuntimeClass#handler",
            },
            "remarks": "The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called \\"runc\\" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must conform to the DNS Label (RFC 1123) requirements, and is immutable.",
            "summary": "Handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3937,
          },
          "name": "handler",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.node.v1beta1.RuntimeClass#metadata",
            },
            "summary": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3944,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.SELinuxOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SELinuxOptions",
        },
        "summary": "SELinuxOptions are the labels to be applied to the container.",
      },
      "fqn": "dummy.SELinuxOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10955,
      },
      "name": "SELinuxOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#level",
            },
            "summary": "Level is SELinux level label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10961,
          },
          "name": "level",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#role",
            },
            "summary": "Role is a SELinux role label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10968,
          },
          "name": "role",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#type",
            },
            "summary": "Type is a SELinux type label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10975,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SELinuxOptions#user",
            },
            "summary": "User is a SELinux user label that applies to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10982,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SELinuxStrategyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions",
        },
        "summary": "SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.",
      },
      "fqn": "dummy.SELinuxStrategyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9909,
      },
      "name": "SELinuxStrategyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions#rule",
            },
            "summary": "rule is the strategy that will dictate the allowable labels that may be set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9915,
          },
          "name": "rule",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions#seLinuxOptions",
            },
            "remarks": "required for MustRunAs More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
            "summary": "seLinuxOptions required to run as;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9922,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SELinuxOptions",
          },
        },
      ],
    },
    "dummy.Scale": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.Scale",
        },
        "summary": "Scale represents a scaling request for a resource.",
      },
      "fqn": "dummy.Scale",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.autoscaling.v1.Scale\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ScaleOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 322,
      },
      "name": "Scale",
    },
    "dummy.ScaleIOPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource",
        },
        "summary": "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume.",
      },
      "fqn": "dummy.ScaleIOPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8793,
      },
      "name": "ScaleIOPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8807,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8829,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "dummy.SecretReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8858,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#fsType",
            },
            "default": "xfs\\"",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\"",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8800,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8814,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8822,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8836,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8844,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8851,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8865,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ScaleIOVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource",
        },
        "summary": "ScaleIOVolumeSource represents a persistent ScaleIO volume.",
      },
      "fqn": "dummy.ScaleIOVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11564,
      },
      "name": "ScaleIOVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#gateway",
            },
            "summary": "The host address of the ScaleIO API Gateway.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11578,
          },
          "name": "gateway",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#secretRef",
            },
            "remarks": "If this is not provided, Login operation will fail.",
            "summary": "SecretRef references to the secret for ScaleIO user and other sensitive information.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11600,
          },
          "name": "secretRef",
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#system",
            },
            "summary": "The name of the storage system as configured in ScaleIO.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11629,
          },
          "name": "system",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#fsType",
            },
            "default": "xfs\\".",
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Default is \\"xfs\\".",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11571,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#protectionDomain",
            },
            "summary": "The name of the ScaleIO Protection Domain for the configured storage.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11585,
          },
          "name": "protectionDomain",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11593,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#sslEnabled",
            },
            "summary": "Flag to enable/disable SSL communication with Gateway, default false.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11607,
          },
          "name": "sslEnabled",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#storageMode",
            },
            "default": "ThinProvisioned.",
            "remarks": "Default is ThinProvisioned.",
            "summary": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11615,
          },
          "name": "storageMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#storagePool",
            },
            "summary": "The ScaleIO Storage Pool associated with the protection domain.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11622,
          },
          "name": "storagePool",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScaleIOVolumeSource#volumeName",
            },
            "summary": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11636,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ScaleOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.Scale",
        },
        "summary": "Scale represents a scaling request for a resource.",
      },
      "fqn": "dummy.ScaleOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2562,
      },
      "name": "ScaleOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.Scale#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
            "summary": "Standard object metadata;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2568,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.Scale#spec",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.",
            "summary": "defines the behavior of the scale.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2575,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ScaleSpec",
          },
        },
      ],
    },
    "dummy.ScaleSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.autoscaling.v1.ScaleSpec",
        },
        "summary": "ScaleSpec describes the attributes of a scale subresource.",
      },
      "fqn": "dummy.ScaleSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5206,
      },
      "name": "ScaleSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.autoscaling.v1.ScaleSpec#replicas",
            },
            "summary": "desired number of instances for the scaled object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5212,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.ScopeSelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ScopeSelector",
        },
        "summary": "A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.",
      },
      "fqn": "dummy.ScopeSelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9578,
      },
      "name": "ScopeSelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScopeSelector#matchExpressions",
            },
            "summary": "A list of scope selector requirements by scope of the resources.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9584,
          },
          "name": "matchExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ScopedResourceSelectorRequirement",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ScopedResourceSelectorRequirement": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement",
        },
        "summary": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
      },
      "fqn": "dummy.ScopedResourceSelectorRequirement",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11728,
      },
      "name": "ScopedResourceSelectorRequirement",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#operator",
            },
            "remarks": "Valid operators are In, NotIn, Exists, DoesNotExist.",
            "summary": "Represents a scope's relationship to a set of values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11734,
          },
          "name": "operator",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#scopeName",
            },
            "summary": "The name of the scope that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11741,
          },
          "name": "scopeName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ScopedResourceSelectorRequirement#values",
            },
            "remarks": "If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11748,
          },
          "name": "values",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Secret": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Secret",
        },
        "remarks": "The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
        "summary": "Secret holds secret data of a certain type.",
      },
      "fqn": "dummy.Secret",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Secret\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.SecretOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1323,
      },
      "name": "Secret",
    },
    "dummy.SecretEnvSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretEnvSource",
        },
        "remarks": "The contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
        "summary": "SecretEnvSource selects a Secret to populate the environment variables with.",
      },
      "fqn": "dummy.SecretEnvSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11926,
      },
      "name": "SecretEnvSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretEnvSource#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11932,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretEnvSource#optional",
            },
            "summary": "Specify whether the Secret must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11939,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.SecretKeySelector": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretKeySelector",
        },
        "summary": "SecretKeySelector selects a key of a Secret.",
      },
      "fqn": "dummy.SecretKeySelector",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12629,
      },
      "name": "SecretKeySelector",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#key",
            },
            "remarks": "Must be a valid secret key.",
            "summary": "The key of the secret to select from.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12635,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12642,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretKeySelector#optional",
            },
            "summary": "Specify whether the Secret or it's key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12649,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.SecretList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretList",
        },
        "summary": "SecretList is a list of Secret.",
      },
      "fqn": "dummy.SecretList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.SecretList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.SecretListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1345,
      },
      "name": "SecretList",
    },
    "dummy.SecretListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretList",
        },
        "summary": "SecretList is a list of Secret.",
      },
      "fqn": "dummy.SecretListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3675,
      },
      "name": "SecretListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/secret",
            "summary": "Items is a list of secret objects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3681,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Secret",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3688,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.SecretOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Secret",
        },
        "remarks": "The total bytes of the values in the Data field must be less than MaxSecretSize bytes.",
        "summary": "Secret holds secret data of a certain type.",
      },
      "fqn": "dummy.SecretOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3639,
      },
      "name": "SecretOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Secret#data",
            },
            "remarks": "Each key must consist of alphanumeric characters, '-', '_' or '.'. The serialized form of the secret data is a base64 encoded string, representing the arbitrary (possibly non-string) data value here. Described in https://tools.ietf.org/html/rfc4648#section-4",
            "summary": "Data contains the secret data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3645,
          },
          "name": "data",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Secret#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3652,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Secret#stringData",
            },
            "remarks": "It is provided as a write-only convenience method. All keys and values are merged into the data field on write, overwriting any existing values. It is never output when reading from the API.",
            "summary": "stringData allows specifying non-binary secret data in string form.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3659,
          },
          "name": "stringData",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Secret#type",
            },
            "summary": "Used to facilitate programmatic handling of secret data.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3666,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SecretProjection": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretProjection",
        },
        "remarks": "The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
        "summary": "Adapts a secret into a projected volume.",
      },
      "fqn": "dummy.SecretProjection",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12804,
      },
      "name": "SecretProjection",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretProjection#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12810,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.KeyToPath",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretProjection#name",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Name of the referent.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12817,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretProjection#optional",
            },
            "summary": "Specify whether the Secret or its key must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12824,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
      ],
    },
    "dummy.SecretReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretReference",
        },
        "remarks": "It has enough information to retrieve secret in any namespace",
        "summary": "SecretReference represents a Secret Reference.",
      },
      "fqn": "dummy.SecretReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10601,
      },
      "name": "SecretReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretReference#name",
            },
            "summary": "Name is unique within a namespace to reference a secret resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10607,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretReference#namespace",
            },
            "summary": "Namespace defines the space within which the secret name must be unique.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10614,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SecretVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecretVolumeSource",
        },
        "remarks": "The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
        "summary": "Adapts a Secret into a volume.",
      },
      "fqn": "dummy.SecretVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11647,
      },
      "name": "SecretVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#defaultMode",
            },
            "default": "0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "remarks": "Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
            "summary": "Optional: mode bits to use on created files by default.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11654,
          },
          "name": "defaultMode",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#items",
            },
            "remarks": "If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
            "summary": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11661,
          },
          "name": "items",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.KeyToPath",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#optional",
            },
            "summary": "Specify whether the Secret or it's keys must be defined.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11668,
          },
          "name": "optional",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecretVolumeSource#secretName",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Name of the secret in the pod's namespace to use.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11675,
          },
          "name": "secretName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SecurityContext": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SecurityContext",
        },
        "remarks": "Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
        "summary": "SecurityContext holds security configuration that will be applied to a container.",
      },
      "fqn": "dummy.SecurityContext",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10838,
      },
      "name": "SecurityContext",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#allowPrivilegeEscalation",
            },
            "remarks": "This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
            "summary": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10844,
          },
          "name": "allowPrivilegeEscalation",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#capabilities",
            },
            "default": "the default set of capabilities granted by the container runtime.",
            "remarks": "Defaults to the default set of capabilities granted by the container runtime.",
            "summary": "The capabilities to add/drop when running containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10852,
          },
          "name": "capabilities",
          "optional": true,
          "type": Object {
            "fqn": "dummy.Capabilities",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#privileged",
            },
            "default": "false.",
            "remarks": "Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
            "summary": "Run container in privileged mode.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10860,
          },
          "name": "privileged",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#procMount",
            },
            "remarks": "The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
            "summary": "procMount denotes the type of proc mount to use for the containers.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10867,
          },
          "name": "procMount",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#readOnlyRootFilesystem",
            },
            "default": "false.",
            "remarks": "Default is false.",
            "summary": "Whether this container has a read-only root filesystem.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10875,
          },
          "name": "readOnlyRootFilesystem",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsGroup",
            },
            "remarks": "Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The GID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10882,
          },
          "name": "runAsGroup",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsNonRoot",
            },
            "remarks": "If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "Indicates that the container must run as a non-root user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10889,
          },
          "name": "runAsNonRoot",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#runAsUser",
            },
            "default": "user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "remarks": "Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The UID to run the entrypoint of the container process.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10897,
          },
          "name": "runAsUser",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SecurityContext#seLinuxOptions",
            },
            "remarks": "If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
            "summary": "The SELinux context to be applied to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10904,
          },
          "name": "seLinuxOptions",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SELinuxOptions",
          },
        },
      ],
    },
    "dummy.SelfSubjectAccessReview": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview",
        },
        "remarks": "Not filling in a spec.namespace means \\"in all namespaces\\".  Self is a special case, because users should always be able to check whether they can perform an action",
        "summary": "SelfSubjectAccessReview checks whether or the current user can perform an action.",
      },
      "fqn": "dummy.SelfSubjectAccessReview",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.authorization.v1.SelfSubjectAccessReview\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.SelfSubjectAccessReviewOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 432,
      },
      "name": "SelfSubjectAccessReview",
    },
    "dummy.SelfSubjectAccessReviewOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview",
        },
        "remarks": "Not filling in a spec.namespace means \\"in all namespaces\\".  Self is a special case, because users should always be able to check whether they can perform an action",
        "summary": "SelfSubjectAccessReview checks whether or the current user can perform an action.",
      },
      "fqn": "dummy.SelfSubjectAccessReviewOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2664,
      },
      "name": "SelfSubjectAccessReviewOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview#spec",
            },
            "remarks": "user and groups must be empty",
            "summary": "Spec holds information about the request being evaluated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2675,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.SelfSubjectAccessReviewSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReview#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2668,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.SelfSubjectAccessReviewSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec",
        },
        "remarks": "Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
        "summary": "SelfSubjectAccessReviewSpec is a description of the access request.",
      },
      "fqn": "dummy.SelfSubjectAccessReviewSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5315,
      },
      "name": "SelfSubjectAccessReviewSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec#nonResourceAttributes",
            },
            "summary": "NonResourceAttributes describes information for a non-resource access request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5321,
          },
          "name": "nonResourceAttributes",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NonResourceAttributes",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec#resourceAttributes",
            },
            "summary": "ResourceAuthorizationAttributes describes information for a resource access request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5328,
          },
          "name": "resourceAttributes",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceAttributes",
          },
        },
      ],
    },
    "dummy.SelfSubjectRulesReview": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview",
        },
        "remarks": "The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
        "summary": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace.",
      },
      "fqn": "dummy.SelfSubjectRulesReview",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.authorization.v1.SelfSubjectRulesReview\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.SelfSubjectRulesReviewOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 454,
      },
      "name": "SelfSubjectRulesReview",
    },
    "dummy.SelfSubjectRulesReviewOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview",
        },
        "remarks": "The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.",
        "summary": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace.",
      },
      "fqn": "dummy.SelfSubjectRulesReviewOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2684,
      },
      "name": "SelfSubjectRulesReviewOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview#spec",
            },
            "summary": "Spec holds information about the request being evaluated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2695,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.SelfSubjectRulesReviewSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReview#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2688,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.SelfSubjectRulesReviewSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec",
        },
      },
      "fqn": "dummy.SelfSubjectRulesReviewSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5335,
      },
      "name": "SelfSubjectRulesReviewSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec#namespace",
            },
            "remarks": "Required.",
            "summary": "Namespace to evaluate rules for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5341,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Service": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Service",
        },
        "summary": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
      },
      "fqn": "dummy.Service",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.Service\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ServiceOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1367,
      },
      "name": "Service",
    },
    "dummy.ServiceAccount": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceAccount",
        },
        "summary": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets.",
      },
      "fqn": "dummy.ServiceAccount",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ServiceAccount\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ServiceAccountOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1389,
      },
      "name": "ServiceAccount",
    },
    "dummy.ServiceAccountList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceAccountList",
        },
        "summary": "ServiceAccountList is a list of ServiceAccount objects.",
      },
      "fqn": "dummy.ServiceAccountList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ServiceAccountList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ServiceAccountListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1411,
      },
      "name": "ServiceAccountList",
    },
    "dummy.ServiceAccountListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceAccountList",
        },
        "summary": "ServiceAccountList is a list of ServiceAccount objects.",
      },
      "fqn": "dummy.ServiceAccountListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3755,
      },
      "name": "ServiceAccountListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccountList#items",
            },
            "remarks": "More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
            "summary": "List of ServiceAccounts.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3761,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ServiceAccount",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccountList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3768,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ServiceAccountOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceAccount",
        },
        "summary": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets.",
      },
      "fqn": "dummy.ServiceAccountOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3719,
      },
      "name": "ServiceAccountOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccount#automountServiceAccountToken",
            },
            "remarks": "Can be overridden at the pod level.",
            "summary": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3725,
          },
          "name": "automountServiceAccountToken",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccount#imagePullSecrets",
            },
            "remarks": "ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
            "summary": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3732,
          },
          "name": "imagePullSecrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.LocalObjectReference",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccount#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3739,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccount#secrets",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/configuration/secret",
            "summary": "Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3746,
          },
          "name": "secrets",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ObjectReference",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.ServiceAccountTokenProjection": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection",
        },
        "remarks": "This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
        "summary": "ServiceAccountTokenProjection represents a projected service account token volume.",
      },
      "fqn": "dummy.ServiceAccountTokenProjection",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12833,
      },
      "name": "ServiceAccountTokenProjection",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#path",
            },
            "summary": "Path is the path relative to the mount point of the file to project the token into.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12854,
          },
          "name": "path",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#audience",
            },
            "remarks": "A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
            "summary": "Audience is the intended audience of the token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12839,
          },
          "name": "audience",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceAccountTokenProjection#expirationSeconds",
            },
            "default": "1 hour and must be at least 10 minutes.",
            "remarks": "As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
            "summary": "ExpirationSeconds is the requested duration of validity of the service account token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12847,
          },
          "name": "expirationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.ServiceList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceList",
        },
        "summary": "ServiceList holds a list of services.",
      },
      "fqn": "dummy.ServiceList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.core.v1.ServiceList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ServiceListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1433,
      },
      "name": "ServiceList",
    },
    "dummy.ServiceListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceList",
        },
        "summary": "ServiceList holds a list of services.",
      },
      "fqn": "dummy.ServiceListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3777,
      },
      "name": "ServiceListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceList#items",
            },
            "summary": "List of services.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3783,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Service",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3790,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ServiceOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Service",
        },
        "summary": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.",
      },
      "fqn": "dummy.ServiceOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 3697,
      },
      "name": "ServiceOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Service#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3703,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Service#spec",
            },
            "remarks": "https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
            "summary": "Spec defines the behavior of a service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 3710,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ServiceSpec",
          },
        },
      ],
    },
    "dummy.ServicePort": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServicePort",
        },
        "summary": "ServicePort contains information on service's port.",
      },
      "fqn": "dummy.ServicePort",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9593,
      },
      "name": "ServicePort",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServicePort#port",
            },
            "summary": "The port that will be exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9614,
          },
          "name": "port",
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServicePort#name",
            },
            "remarks": "This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. This maps to the 'Name' field in EndpointPort objects. Optional if only one ServicePort is defined on this service.",
            "summary": "The name of this port within the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9599,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServicePort#nodePort",
            },
            "default": "to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "remarks": "Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
            "summary": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9607,
          },
          "name": "nodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServicePort#protocol",
            },
            "default": "TCP.",
            "remarks": "Supports \\"TCP\\", \\"UDP\\", and \\"SCTP\\". Default is TCP.",
            "summary": "The IP protocol for this port.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9622,
          },
          "name": "protocol",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServicePort#targetPort",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
            "summary": "Number or name of the port to access on the pods targeted by the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9629,
          },
          "name": "targetPort",
          "optional": true,
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
      ],
    },
    "dummy.ServiceReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ServiceReference",
        },
        "summary": "ServiceReference holds a reference to Service.legacy.k8s.io.",
      },
      "fqn": "dummy.ServiceReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10424,
      },
      "name": "ServiceReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ServiceReference#name",
            },
            "remarks": "Required",
            "summary": "\`name\` is the name of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10430,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ServiceReference#namespace",
            },
            "remarks": "Required",
            "summary": "\`namespace\` is the namespace of the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10437,
          },
          "name": "namespace",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ServiceReference#path",
            },
            "summary": "\`path\` is an optional URL path which will be sent in any request to this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10444,
          },
          "name": "path",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ServiceSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.ServiceSpec",
        },
        "summary": "ServiceSpec describes the attributes that a user creates on a service.",
      },
      "fqn": "dummy.ServiceSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6470,
      },
      "name": "ServiceSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#clusterIP",
            },
            "remarks": "If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are \\"None\\", empty string (\\"\\"), or a valid IP address. \\"None\\" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "clusterIP is the IP address of the service and is usually assigned randomly by the master.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6476,
          },
          "name": "clusterIP",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalIPs",
            },
            "remarks": "These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.",
            "summary": "externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6483,
          },
          "name": "externalIPs",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalName",
            },
            "remarks": "No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.",
            "summary": "externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6490,
          },
          "name": "externalName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#externalTrafficPolicy",
            },
            "remarks": "\\"Local\\" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. \\"Cluster\\" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.",
            "summary": "externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6497,
          },
          "name": "externalTrafficPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#healthCheckNodePort",
            },
            "remarks": "If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.",
            "summary": "healthCheckNodePort specifies the healthcheck nodePort for the service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6504,
          },
          "name": "healthCheckNodePort",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#loadBalancerIP",
            },
            "remarks": "This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.",
            "summary": "Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6511,
          },
          "name": "loadBalancerIP",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#loadBalancerSourceRanges",
            },
            "remarks": "This field will be ignored if the cloud-provider does not support the feature.\\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
            "summary": "If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6518,
          },
          "name": "loadBalancerSourceRanges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#ports",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "The list of ports that are exposed by this service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6525,
          },
          "name": "ports",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ServicePort",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#publishNotReadyAddresses",
            },
            "remarks": "The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.",
            "summary": "publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6532,
          },
          "name": "publishNotReadyAddresses",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#selector",
            },
            "remarks": "If empty or not present, the service is assumed to have an external process managing its endpoints, which Kubernetes will not modify. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/",
            "summary": "Route service traffic to pods with label keys and values matching this selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6539,
          },
          "name": "selector",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#sessionAffinity",
            },
            "default": "None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "remarks": "Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
            "summary": "Supports \\"ClientIP\\" and \\"None\\".",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6547,
          },
          "name": "sessionAffinity",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#sessionAffinityConfig",
            },
            "summary": "sessionAffinityConfig contains the configurations of session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6554,
          },
          "name": "sessionAffinityConfig",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SessionAffinityConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.ServiceSpec#type",
            },
            "default": "ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "remarks": "Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. \\"ExternalName\\" maps to the specified externalName. \\"ClusterIP\\" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is \\"None\\", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. \\"NodePort\\" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. \\"LoadBalancer\\" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
            "summary": "type determines how the Service is exposed.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 6562,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SessionAffinityConfig": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.SessionAffinityConfig",
        },
        "summary": "SessionAffinityConfig represents the configurations of session affinity.",
      },
      "fqn": "dummy.SessionAffinityConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9638,
      },
      "name": "SessionAffinityConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.SessionAffinityConfig#clientIP",
            },
            "summary": "clientIP contains the configurations of Client IP based session affinity.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9644,
          },
          "name": "clientIP",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ClientIPConfig",
          },
        },
      ],
    },
    "dummy.StatefulSet": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSet",
        },
        "remarks": "Identities are defined as:
- Network: A single stable DNS and hostname.
- Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.",
        "summary": "StatefulSet represents a set of pods with consistent identities.",
      },
      "fqn": "dummy.StatefulSet",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.StatefulSet\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.StatefulSetOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 278,
      },
      "name": "StatefulSet",
    },
    "dummy.StatefulSetList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSetList",
        },
        "summary": "StatefulSetList is a collection of StatefulSets.",
      },
      "fqn": "dummy.StatefulSetList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.apps.v1.StatefulSetList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.StatefulSetListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 300,
      },
      "name": "StatefulSetList",
    },
    "dummy.StatefulSetListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSetList",
        },
        "summary": "StatefulSetList is a collection of StatefulSets.",
      },
      "fqn": "dummy.StatefulSetListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2544,
      },
      "name": "StatefulSetListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetList#items",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2548,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.StatefulSet",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetList#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2553,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.StatefulSetOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSet",
        },
        "remarks": "Identities are defined as:
- Network: A single stable DNS and hostname.
- Storage: As many VolumeClaims as requested.
The StatefulSet guarantees that a given network identity will always map to the same storage identity.",
        "summary": "StatefulSet represents a set of pods with consistent identities.",
      },
      "fqn": "dummy.StatefulSetOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2524,
      },
      "name": "StatefulSetOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSet#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2528,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSet#spec",
            },
            "summary": "Spec defines the desired identities of pods in this set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2535,
          },
          "name": "spec",
          "optional": true,
          "type": Object {
            "fqn": "dummy.StatefulSetSpec",
          },
        },
      ],
    },
    "dummy.StatefulSetSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSetSpec",
        },
        "summary": "A StatefulSetSpec is the specification of a StatefulSet.",
      },
      "fqn": "dummy.StatefulSetSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5142,
      },
      "name": "StatefulSetSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#selector",
            },
            "remarks": "It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors",
            "summary": "selector is a label query over pods that should match the replica count.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5169,
          },
          "name": "selector",
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#serviceName",
            },
            "remarks": "This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \\"pod-specific-string\\" is managed by the StatefulSet controller.",
            "summary": "serviceName is the name of the service that governs this StatefulSet.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5176,
          },
          "name": "serviceName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#template",
            },
            "remarks": "Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.",
            "summary": "template is the object that describes the pod that will be created if insufficient replicas are detected.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5183,
          },
          "name": "template",
          "type": Object {
            "fqn": "dummy.PodTemplateSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#podManagementPolicy",
            },
            "remarks": "The default policy is \`OrderedReady\`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is \`Parallel\` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.",
            "summary": "podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5148,
          },
          "name": "podManagementPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#replicas",
            },
            "remarks": "These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.",
            "summary": "replicas is the desired number of replicas of the given Template.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5155,
          },
          "name": "replicas",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#revisionHistoryLimit",
            },
            "remarks": "The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.",
            "summary": "revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5162,
          },
          "name": "revisionHistoryLimit",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#updateStrategy",
            },
            "summary": "updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5190,
          },
          "name": "updateStrategy",
          "optional": true,
          "type": Object {
            "fqn": "dummy.StatefulSetUpdateStrategy",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetSpec#volumeClaimTemplates",
            },
            "remarks": "The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.",
            "summary": "volumeClaimTemplates is a list of claims that pods are allowed to reference.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5197,
          },
          "name": "volumeClaimTemplates",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.PersistentVolumeClaim",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.StatefulSetUpdateStrategy": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy",
        },
        "remarks": "It includes any additional parameters necessary to perform the update for the indicated strategy.",
        "summary": "StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates.",
      },
      "fqn": "dummy.StatefulSetUpdateStrategy",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7617,
      },
      "name": "StatefulSetUpdateStrategy",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy#rollingUpdate",
            },
            "summary": "RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7623,
          },
          "name": "rollingUpdate",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RollingUpdateStatefulSetStrategy",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.apps.v1.StatefulSetUpdateStrategy#type",
            },
            "default": "RollingUpdate.",
            "remarks": "Default is RollingUpdate.",
            "summary": "Type indicates the type of the StatefulSetUpdateStrategy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7631,
          },
          "name": "type",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Status": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status",
        },
        "summary": "Status is a return value for calls that don't return other objects.",
      },
      "fqn": "dummy.Status",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.apimachinery.pkg.apis.meta.v1.Status\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.StatusOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2185,
      },
      "name": "Status",
    },
    "dummy.StatusCause": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause",
        },
        "summary": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      },
      "fqn": "dummy.StatusCause",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10391,
      },
      "name": "StatusCause",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#field",
            },
            "remarks": "May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

Examples:
\\"name\\" - the field \\"name\\" on the current resource
\\"items[0].name\\" - the field \\"name\\" on the first array entry in \\"items\\"",
            "summary": "The field of the resource that has caused this error, as named by its JSON serialization.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10401,
          },
          "name": "field",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#message",
            },
            "remarks": "This field may be presented as-is to a reader.",
            "summary": "A human-readable description of the cause of the error.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10408,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause#reason",
            },
            "remarks": "If this value is empty there is no information available.",
            "summary": "A machine-readable description of the cause of the error.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10415,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.StatusDetails": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails",
        },
        "remarks": "The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
        "summary": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response.",
      },
      "fqn": "dummy.StatusDetails",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7233,
      },
      "name": "StatusDetails",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#causes",
            },
            "remarks": "Not all StatusReasons may provide detailed causes.",
            "summary": "The Causes array includes more details associated with the StatusReason failure.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7239,
          },
          "name": "causes",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.StatusCause",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#group",
            },
            "summary": "The group attribute of the resource associated with the status StatusReason.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7246,
          },
          "name": "group",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#kind",
            },
            "remarks": "On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "The kind attribute of the resource associated with the status StatusReason.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7253,
          },
          "name": "kind",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#name",
            },
            "summary": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7260,
          },
          "name": "name",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#retryAfterSeconds",
            },
            "remarks": "Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
            "summary": "If specified, the time in seconds before the operation should be retried.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7267,
          },
          "name": "retryAfterSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails#uid",
            },
            "remarks": "(when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
            "summary": "UID of the resource.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7274,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.StatusOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status",
        },
        "summary": "Status is a return value for calls that don't return other objects.",
      },
      "fqn": "dummy.StatusOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4593,
      },
      "name": "StatusOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#code",
            },
            "summary": "Suggested HTTP return code for this status, 0 if not set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4599,
          },
          "name": "code",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#details",
            },
            "remarks": "Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
            "summary": "Extended data associated with the reason.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4606,
          },
          "name": "details",
          "optional": true,
          "type": Object {
            "fqn": "dummy.StatusDetails",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#message",
            },
            "summary": "A human-readable description of the status of this operation.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4613,
          },
          "name": "message",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4620,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.apimachinery.pkg.apis.meta.v1.Status#reason",
            },
            "remarks": "If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
            "summary": "A machine-readable description of why this operation is in the \\"Failure\\" status.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4627,
          },
          "name": "reason",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.StorageClass": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.StorageClass",
        },
        "remarks": "StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
        "summary": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.",
      },
      "fqn": "dummy.StorageClass",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1.StorageClass\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.StorageClassOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1963,
      },
      "name": "StorageClass",
    },
    "dummy.StorageClassList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.StorageClassList",
        },
        "summary": "StorageClassList is a collection of storage classes.",
      },
      "fqn": "dummy.StorageClassList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1.StorageClassList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.StorageClassListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 1985,
      },
      "name": "StorageClassList",
    },
    "dummy.StorageClassListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.StorageClassList",
        },
        "summary": "StorageClassList is a collection of storage classes.",
      },
      "fqn": "dummy.StorageClassListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4397,
      },
      "name": "StorageClassListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClassList#items",
            },
            "summary": "Items is the list of StorageClasses.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4403,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.StorageClass",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClassList#metadata",
            },
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4410,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.StorageClassOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.StorageClass",
        },
        "remarks": "StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.",
        "summary": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.",
      },
      "fqn": "dummy.StorageClassOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4332,
      },
      "name": "StorageClassOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#provisioner",
            },
            "summary": "Provisioner indicates the type of the provisioner.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4373,
          },
          "name": "provisioner",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#allowedTopologies",
            },
            "remarks": "Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.",
            "summary": "Restrict the node topologies where volumes can be dynamically provisioned.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4345,
          },
          "name": "allowedTopologies",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.TopologySelectorTerm",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#allowVolumeExpansion",
            },
            "summary": "AllowVolumeExpansion shows whether the storage class allow volume expand.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4338,
          },
          "name": "allowVolumeExpansion",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object's metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4352,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#mountOptions",
            },
            "summary": "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\\"ro\\", \\"soft\\"]. Not validated - mount of the PVs will simply fail if one is invalid.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4359,
          },
          "name": "mountOptions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#parameters",
            },
            "summary": "Parameters holds the parameters for the provisioner that should create volumes of this storage class.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4366,
          },
          "name": "parameters",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#reclaimPolicy",
            },
            "default": "Delete.",
            "remarks": "Defaults to Delete.",
            "summary": "Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4381,
          },
          "name": "reclaimPolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.StorageClass#volumeBindingMode",
            },
            "remarks": "When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.",
            "summary": "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4388,
          },
          "name": "volumeBindingMode",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.StorageOSPersistentVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource",
        },
        "summary": "Represents a StorageOS persistent volume resource.",
      },
      "fqn": "dummy.StorageOSPersistentVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8874,
      },
      "name": "StorageOSPersistentVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8880,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8888,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8895,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8902,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSPersistentVolumeSource#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8909,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.StorageOSVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.StorageOSVolumeSource",
        },
        "summary": "Represents a StorageOS persistent volume resource.",
      },
      "fqn": "dummy.StorageOSVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 11684,
      },
      "name": "StorageOSVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11690,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#readOnly",
            },
            "default": "false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "remarks": "ReadOnly here will force the ReadOnly setting in VolumeMounts.",
            "summary": "Defaults to false (read/write).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11698,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#secretRef",
            },
            "remarks": "If not specified, default values will be attempted.",
            "summary": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11705,
          },
          "name": "secretRef",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LocalObjectReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#volumeName",
            },
            "remarks": "Volume names are only unique within a namespace.",
            "summary": "VolumeName is the human-readable name of the StorageOS volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11712,
          },
          "name": "volumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.StorageOSVolumeSource#volumeNamespace",
            },
            "remarks": "If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \\"default\\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
            "summary": "VolumeNamespace specifies the scope of the volume within StorageOS.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11719,
          },
          "name": "volumeNamespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Subject": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.rbac.v1.Subject",
        },
        "remarks": "This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
        "summary": "Subject contains a reference to the object or user identities a role binding applies to.",
      },
      "fqn": "dummy.Subject",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 6998,
      },
      "name": "Subject",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Subject#kind",
            },
            "remarks": "Values defined by this API group are \\"User\\", \\"Group\\", and \\"ServiceAccount\\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
            "summary": "Kind of object being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7012,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Subject#name",
            },
            "summary": "Name of the object being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7019,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Subject#apiGroup",
            },
            "default": "for ServiceAccount subjects. Defaults to \\"rbac.authorization.k8s.io\\" for User and Group subjects.",
            "remarks": "Defaults to \\"\\" for ServiceAccount subjects. Defaults to \\"rbac.authorization.k8s.io\\" for User and Group subjects.",
            "summary": "APIGroup holds the API group of the referenced subject.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7005,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.rbac.v1.Subject#namespace",
            },
            "remarks": "If the object kind is non-namespace, such as \\"User\\" or \\"Group\\", and this value is not empty the Authorizer should report an error.",
            "summary": "Namespace of the referenced object.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7026,
          },
          "name": "namespace",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SubjectAccessReview": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReview",
        },
        "summary": "SubjectAccessReview checks whether or not a user or group can perform an action.",
      },
      "fqn": "dummy.SubjectAccessReview",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.authorization.v1.SubjectAccessReview\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.SubjectAccessReviewOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 476,
      },
      "name": "SubjectAccessReview",
    },
    "dummy.SubjectAccessReviewOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReview",
        },
        "summary": "SubjectAccessReview checks whether or not a user or group can perform an action.",
      },
      "fqn": "dummy.SubjectAccessReviewOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2704,
      },
      "name": "SubjectAccessReviewOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReview#spec",
            },
            "summary": "Spec holds information about the request being evaluated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2715,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.SubjectAccessReviewSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReview#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2708,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.SubjectAccessReviewSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec",
        },
        "remarks": "Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set",
        "summary": "SubjectAccessReviewSpec is a description of the access request.",
      },
      "fqn": "dummy.SubjectAccessReviewSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5265,
      },
      "name": "SubjectAccessReviewSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#extra",
            },
            "summary": "Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5271,
          },
          "name": "extra",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "collection": Object {
                  "elementtype": Object {
                    "primitive": "string",
                  },
                  "kind": "array",
                },
              },
              "kind": "map",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#groups",
            },
            "summary": "Groups is the groups you're testing for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5278,
          },
          "name": "groups",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#nonResourceAttributes",
            },
            "summary": "NonResourceAttributes describes information for a non-resource access request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5285,
          },
          "name": "nonResourceAttributes",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NonResourceAttributes",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#resourceAttributes",
            },
            "summary": "ResourceAuthorizationAttributes describes information for a resource access request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5292,
          },
          "name": "resourceAttributes",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ResourceAttributes",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#uid",
            },
            "summary": "UID information about the requesting user.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5299,
          },
          "name": "uid",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authorization.v1.SubjectAccessReviewSpec#user",
            },
            "remarks": "If you specify \\"User\\" but not \\"Groups\\", then is it interpreted as \\"What if User were not a member of any groups",
            "summary": "User is the user you're testing for.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5306,
          },
          "name": "user",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.SupplementalGroupsStrategyOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions",
        },
        "summary": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
      },
      "fqn": "dummy.SupplementalGroupsStrategyOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9931,
      },
      "name": "SupplementalGroupsStrategyOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions#ranges",
            },
            "remarks": "If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.",
            "summary": "ranges are the allowed ranges of supplemental groups.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9937,
          },
          "name": "ranges",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.IDRange",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions#rule",
            },
            "summary": "rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9944,
          },
          "name": "rule",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Sysctl": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Sysctl",
        },
        "summary": "Sysctl defines a kernel parameter to be set.",
      },
      "fqn": "dummy.Sysctl",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10991,
      },
      "name": "Sysctl",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Sysctl#name",
            },
            "summary": "Name of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10997,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Sysctl#value",
            },
            "summary": "Value of a property to set.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 11004,
          },
          "name": "value",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.TCPSocketAction": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.TCPSocketAction",
        },
        "summary": "TCPSocketAction describes an action based on opening a socket.",
      },
      "fqn": "dummy.TCPSocketAction",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12360,
      },
      "name": "TCPSocketAction",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TCPSocketAction#port",
            },
            "remarks": "Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
            "summary": "Number or name of the port to access on the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12373,
          },
          "name": "port",
          "type": Object {
            "fqn": "dummy.IntOrString",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TCPSocketAction#host",
            },
            "summary": "Optional: Host name to connect to, defaults to the pod IP.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12366,
          },
          "name": "host",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Taint": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Taint",
        },
        "summary": "The node this Taint is attached to has the \\"effect\\" on any pod that does not tolerate the Taint.",
      },
      "fqn": "dummy.Taint",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7923,
      },
      "name": "Taint",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Taint#effect",
            },
            "remarks": "The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7929,
          },
          "name": "effect",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Taint#key",
            },
            "remarks": "The taint key to be applied to a node.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7936,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Taint#timeAdded",
            },
            "remarks": "It is only written for NoExecute taints.",
            "summary": "TimeAdded represents the time at which the taint was added.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7943,
          },
          "name": "timeAdded",
          "optional": true,
          "type": Object {
            "primitive": "date",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Taint#value",
            },
            "remarks": "The taint value corresponding to the taint key.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7950,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.TokenReview": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authentication.v1.TokenReview",
        },
        "remarks": "Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
        "summary": "TokenReview attempts to authenticate a token to a known user.",
      },
      "fqn": "dummy.TokenReview",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.authentication.v1.TokenReview\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.TokenReviewOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 388,
      },
      "name": "TokenReview",
    },
    "dummy.TokenReviewOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authentication.v1.TokenReview",
        },
        "remarks": "Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.",
        "summary": "TokenReview attempts to authenticate a token to a known user.",
      },
      "fqn": "dummy.TokenReviewOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2624,
      },
      "name": "TokenReviewOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authentication.v1.TokenReview#spec",
            },
            "summary": "Spec holds information about the request being evaluated.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2635,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.TokenReviewSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authentication.v1.TokenReview#metadata",
            },
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2628,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.TokenReviewSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.authentication.v1.TokenReviewSpec",
        },
        "summary": "TokenReviewSpec is a description of the token authentication request.",
      },
      "fqn": "dummy.TokenReviewSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 5243,
      },
      "name": "TokenReviewSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authentication.v1.TokenReviewSpec#audiences",
            },
            "remarks": "Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.",
            "summary": "Audiences is a list of the identifiers that the resource server presented with the token identifies as.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5249,
          },
          "name": "audiences",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.authentication.v1.TokenReviewSpec#token",
            },
            "summary": "Token is the opaque bearer token.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 5256,
          },
          "name": "token",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Toleration": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Toleration",
        },
        "summary": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
      },
      "fqn": "dummy.Toleration",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9323,
      },
      "name": "Toleration",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Toleration#effect",
            },
            "remarks": "Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
            "summary": "Effect indicates the taint effect to match.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9329,
          },
          "name": "effect",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Toleration#key",
            },
            "remarks": "Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
            "summary": "Key is the taint key that the toleration applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9336,
          },
          "name": "key",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Toleration#operator",
            },
            "default": "Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "remarks": "Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
            "summary": "Operator represents a key's relationship to the value.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9344,
          },
          "name": "operator",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Toleration#tolerationSeconds",
            },
            "remarks": "By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
            "summary": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9351,
          },
          "name": "tolerationSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Toleration#value",
            },
            "remarks": "If the operator is Exists, the value should be empty, otherwise just a regular string.",
            "summary": "Value is the taint value the toleration matches to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9358,
          },
          "name": "value",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.TopologySelectorLabelRequirement": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement",
        },
        "remarks": "This is an alpha feature and may change in the future.",
        "summary": "A topology selector requirement is a selector that matches given label.",
      },
      "fqn": "dummy.TopologySelectorLabelRequirement",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10105,
      },
      "name": "TopologySelectorLabelRequirement",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement#key",
            },
            "summary": "The label key that the selector applies to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10111,
          },
          "name": "key",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TopologySelectorLabelRequirement#values",
            },
            "remarks": "One value must match the label to be selected. Each entry in Values is ORed.",
            "summary": "An array of string values.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10118,
          },
          "name": "values",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.TopologySelectorTerm": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.TopologySelectorTerm",
        },
        "remarks": "A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.",
        "summary": "A topology selector term represents the result of label queries.",
      },
      "fqn": "dummy.TopologySelectorTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7078,
      },
      "name": "TopologySelectorTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TopologySelectorTerm#matchLabelExpressions",
            },
            "summary": "A list of topology selector requirements by labels.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7084,
          },
          "name": "matchLabelExpressions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.TopologySelectorLabelRequirement",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.TypedLocalObjectReference": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.TypedLocalObjectReference",
        },
        "summary": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
      },
      "fqn": "dummy.TypedLocalObjectReference",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8954,
      },
      "name": "TypedLocalObjectReference",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#kind",
            },
            "summary": "Kind is the type of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8967,
          },
          "name": "kind",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#name",
            },
            "summary": "Name is the name of resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8974,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.TypedLocalObjectReference#apiGroup",
            },
            "remarks": "If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
            "summary": "APIGroup is the group for the resource being referenced.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8960,
          },
          "name": "apiGroup",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.ValidatingWebhookConfiguration": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration",
        },
        "summary": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.",
      },
      "fqn": "dummy.ValidatingWebhookConfiguration",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "optional": true,
            "type": Object {
              "fqn": "dummy.ValidatingWebhookConfigurationOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 55,
      },
      "name": "ValidatingWebhookConfiguration",
    },
    "dummy.ValidatingWebhookConfigurationList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList",
        },
        "summary": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.",
      },
      "fqn": "dummy.ValidatingWebhookConfigurationList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.ValidatingWebhookConfigurationListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 77,
      },
      "name": "ValidatingWebhookConfigurationList",
    },
    "dummy.ValidatingWebhookConfigurationListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList",
        },
        "summary": "ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.",
      },
      "fqn": "dummy.ValidatingWebhookConfigurationListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2316,
      },
      "name": "ValidatingWebhookConfigurationListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList#items",
            },
            "summary": "List of ValidatingWebhookConfiguration.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2322,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.ValidatingWebhookConfiguration",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
            "summary": "Standard list metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2329,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.ValidatingWebhookConfigurationOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration",
        },
        "summary": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.",
      },
      "fqn": "dummy.ValidatingWebhookConfigurationOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2294,
      },
      "name": "ValidatingWebhookConfigurationOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
            "summary": "Standard object metadata;",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2300,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration#webhooks",
            },
            "summary": "Webhooks is a list of webhooks and the affected resources and operations.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 2307,
          },
          "name": "webhooks",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.Webhook",
              },
              "kind": "array",
            },
          },
        },
      ],
    },
    "dummy.Volume": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.Volume",
        },
        "summary": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      },
      "fqn": "dummy.Volume",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 9367,
      },
      "name": "Volume",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#name",
            },
            "remarks": "Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
            "summary": "Volume's name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9492,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#awsElasticBlockStore",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
            "summary": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9373,
          },
          "name": "awsElasticBlockStore",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AWSElasticBlockStoreVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#azureDisk",
            },
            "summary": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9380,
          },
          "name": "azureDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AzureDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#azureFile",
            },
            "summary": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9387,
          },
          "name": "azureFile",
          "optional": true,
          "type": Object {
            "fqn": "dummy.AzureFileVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#cephfs",
            },
            "summary": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9394,
          },
          "name": "cephfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CephFSVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#cinder",
            },
            "summary": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9401,
          },
          "name": "cinder",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CinderVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#configMap",
            },
            "summary": "ConfigMap represents a configMap that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9408,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ConfigMapVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#csi",
            },
            "summary": "CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9415,
          },
          "name": "csi",
          "optional": true,
          "type": Object {
            "fqn": "dummy.CSIVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#downwardAPI",
            },
            "summary": "DownwardAPI represents downward API about the pod that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9422,
          },
          "name": "downwardAPI",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DownwardAPIVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#emptyDir",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
            "summary": "EmptyDir represents a temporary directory that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9429,
          },
          "name": "emptyDir",
          "optional": true,
          "type": Object {
            "fqn": "dummy.EmptyDirVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#fc",
            },
            "summary": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9436,
          },
          "name": "fc",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FCVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#flexVolume",
            },
            "summary": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9443,
          },
          "name": "flexVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FlexVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#flocker",
            },
            "remarks": "This depends on the Flocker control service being running",
            "summary": "Flocker represents a Flocker volume attached to a kubelet's host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9450,
          },
          "name": "flocker",
          "optional": true,
          "type": Object {
            "fqn": "dummy.FlockerVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#gcePersistentDisk",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
            "summary": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9457,
          },
          "name": "gcePersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.GCEPersistentDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#gitRepo",
            },
            "remarks": "DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
            "summary": "GitRepo represents a git repository at a particular revision.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9464,
          },
          "name": "gitRepo",
          "optional": true,
          "type": Object {
            "fqn": "dummy.GitRepoVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#glusterfs",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
            "summary": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9471,
          },
          "name": "glusterfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.GlusterfsVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#hostPath",
            },
            "remarks": "This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
            "summary": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9478,
          },
          "name": "hostPath",
          "optional": true,
          "type": Object {
            "fqn": "dummy.HostPathVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#iscsi",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/iscsi/README.md",
            "summary": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9485,
          },
          "name": "iscsi",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ISCSIVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#nfs",
            },
            "summary": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9499,
          },
          "name": "nfs",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NFSVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#persistentVolumeClaim",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
            "summary": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9506,
          },
          "name": "persistentVolumeClaim",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PersistentVolumeClaimVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#photonPersistentDisk",
            },
            "summary": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9513,
          },
          "name": "photonPersistentDisk",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PhotonPersistentDiskVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#portworxVolume",
            },
            "summary": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9520,
          },
          "name": "portworxVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.PortworxVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#projected",
            },
            "summary": "Items for all in one resources secrets, configmaps, and downward API.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9527,
          },
          "name": "projected",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ProjectedVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#quobyte",
            },
            "summary": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9534,
          },
          "name": "quobyte",
          "optional": true,
          "type": Object {
            "fqn": "dummy.QuobyteVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#rbd",
            },
            "remarks": "More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
            "summary": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9541,
          },
          "name": "rbd",
          "optional": true,
          "type": Object {
            "fqn": "dummy.RBDVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#scaleIO",
            },
            "summary": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9548,
          },
          "name": "scaleIO",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ScaleIOVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#secret",
            },
            "remarks": "More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
            "summary": "Secret represents a secret that should populate this volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9555,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#storageos",
            },
            "summary": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9562,
          },
          "name": "storageos",
          "optional": true,
          "type": Object {
            "fqn": "dummy.StorageOSVolumeSource",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.Volume#vsphereVolume",
            },
            "summary": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 9569,
          },
          "name": "vsphereVolume",
          "optional": true,
          "type": Object {
            "fqn": "dummy.VsphereVirtualDiskVolumeSource",
          },
        },
      ],
    },
    "dummy.VolumeAttachment": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachment",
        },
        "remarks": "VolumeAttachment objects are non-namespaced.",
        "summary": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.",
      },
      "fqn": "dummy.VolumeAttachment",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1.VolumeAttachment\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.VolumeAttachmentOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2009,
      },
      "name": "VolumeAttachment",
    },
    "dummy.VolumeAttachmentList": Object {
      "assembly": "dummy",
      "base": "cdk8s.ApiObject",
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentList",
        },
        "summary": "VolumeAttachmentList is a collection of VolumeAttachment objects.",
      },
      "fqn": "dummy.VolumeAttachmentList",
      "initializer": Object {
        "docs": Object {
          "summary": "Defines a \\"io.k8s.api.storage.v1.VolumeAttachmentList\\" API object.",
        },
        "parameters": Array [
          Object {
            "docs": Object {
              "summary": "the scope in which to define this object.",
            },
            "name": "scope",
            "type": Object {
              "fqn": "@aws-cdk/core.Construct",
            },
          },
          Object {
            "docs": Object {
              "summary": "a scope-local name for the object.",
            },
            "name": "name",
            "type": Object {
              "primitive": "string",
            },
          },
          Object {
            "docs": Object {
              "summary": "configuration options.",
            },
            "name": "options",
            "type": Object {
              "fqn": "dummy.VolumeAttachmentListOptions",
            },
          },
        ],
      },
      "kind": "class",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 2031,
      },
      "name": "VolumeAttachmentList",
    },
    "dummy.VolumeAttachmentListOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentList",
        },
        "summary": "VolumeAttachmentList is a collection of VolumeAttachment objects.",
      },
      "fqn": "dummy.VolumeAttachmentListOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4443,
      },
      "name": "VolumeAttachmentListOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentList#items",
            },
            "summary": "Items is the list of VolumeAttachments.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4449,
          },
          "name": "items",
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.VolumeAttachment",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentList#metadata",
            },
            "summary": "Standard list metadata More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4456,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ListMeta",
          },
        },
      ],
    },
    "dummy.VolumeAttachmentOptions": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachment",
        },
        "remarks": "VolumeAttachment objects are non-namespaced.",
        "summary": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.",
      },
      "fqn": "dummy.VolumeAttachmentOptions",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4421,
      },
      "name": "VolumeAttachmentOptions",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachment#spec",
            },
            "remarks": "Populated by the Kubernetes system.",
            "summary": "Specification of the desired attach/detach volume behavior.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4434,
          },
          "name": "spec",
          "type": Object {
            "fqn": "dummy.VolumeAttachmentSpec",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachment#metadata",
            },
            "remarks": "More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
            "summary": "Standard object metadata.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4427,
          },
          "name": "metadata",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ObjectMeta",
          },
        },
      ],
    },
    "dummy.VolumeAttachmentSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentSource",
        },
        "remarks": "Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.",
        "summary": "VolumeAttachmentSource represents a volume that should be attached.",
      },
      "fqn": "dummy.VolumeAttachmentSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10127,
      },
      "name": "VolumeAttachmentSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSource#persistentVolumeName",
            },
            "summary": "Name of the persistent volume to attach.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10133,
          },
          "name": "persistentVolumeName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.VolumeAttachmentSpec": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec",
        },
        "summary": "VolumeAttachmentSpec is the specification of a VolumeAttachment request.",
      },
      "fqn": "dummy.VolumeAttachmentSpec",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7093,
      },
      "name": "VolumeAttachmentSpec",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#attacher",
            },
            "remarks": "This is the name returned by GetPluginName().",
            "summary": "Attacher indicates the name of the volume driver that MUST handle this request.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7099,
          },
          "name": "attacher",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#nodeName",
            },
            "summary": "The node that the volume should be attached to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7106,
          },
          "name": "nodeName",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.storage.v1.VolumeAttachmentSpec#source",
            },
            "summary": "Source represents the volume that should be attached.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7113,
          },
          "name": "source",
          "type": Object {
            "fqn": "dummy.VolumeAttachmentSource",
          },
        },
      ],
    },
    "dummy.VolumeDevice": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.VolumeDevice",
        },
        "summary": "volumeDevice describes a mapping of a raw block device within a container.",
      },
      "fqn": "dummy.VolumeDevice",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10913,
      },
      "name": "VolumeDevice",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeDevice#devicePath",
            },
            "summary": "devicePath is the path inside of the container that the device will be mapped to.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10919,
          },
          "name": "devicePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeDevice#name",
            },
            "summary": "name must match the name of a persistentVolumeClaim in the pod.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10926,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.VolumeMount": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.VolumeMount",
        },
        "summary": "VolumeMount describes a mounting of a Volume within a container.",
      },
      "fqn": "dummy.VolumeMount",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 10052,
      },
      "name": "VolumeMount",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#mountPath",
            },
            "remarks": "Must not contain ':'.",
            "summary": "Path within the container at which the volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10058,
          },
          "name": "mountPath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#name",
            },
            "summary": "This must match the Name of a Volume.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10072,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#mountPropagation",
            },
            "remarks": "When not set, MountPropagationNone is used. This field is beta in 1.10.",
            "summary": "mountPropagation determines how mounts are propagated from the host to container and the other way around.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10065,
          },
          "name": "mountPropagation",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#readOnly",
            },
            "default": "false.",
            "remarks": "Defaults to false.",
            "summary": "Mounted read-only if true, read-write otherwise (false or unspecified).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10080,
          },
          "name": "readOnly",
          "optional": true,
          "type": Object {
            "primitive": "boolean",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#subPath",
            },
            "default": "volume's root).",
            "remarks": "Defaults to \\"\\" (volume's root).",
            "summary": "Path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10088,
          },
          "name": "subPath",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeMount#subPathExpr",
            },
            "default": "volume's root). SubPathExpr and SubPath are mutually exclusive. This field is alpha in 1.14.",
            "remarks": "Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\"\\" (volume's root). SubPathExpr and SubPath are mutually exclusive. This field is alpha in 1.14.",
            "summary": "Expanded path within the volume from which the container's volume should be mounted.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 10096,
          },
          "name": "subPathExpr",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.VolumeNodeAffinity": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.VolumeNodeAffinity",
        },
        "summary": "VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.",
      },
      "fqn": "dummy.VolumeNodeAffinity",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8604,
      },
      "name": "VolumeNodeAffinity",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeNodeAffinity#required",
            },
            "summary": "Required specifies hard node constraints that must be met.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8610,
          },
          "name": "required",
          "optional": true,
          "type": Object {
            "fqn": "dummy.NodeSelector",
          },
        },
      ],
    },
    "dummy.VolumeProjection": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.VolumeProjection",
        },
        "summary": "Projection that may be projected along with other supported volume types.",
      },
      "fqn": "dummy.VolumeProjection",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12469,
      },
      "name": "VolumeProjection",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeProjection#configMap",
            },
            "summary": "information about the configMap data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12475,
          },
          "name": "configMap",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ConfigMapProjection",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeProjection#downwardAPI",
            },
            "summary": "information about the downwardAPI data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12482,
          },
          "name": "downwardAPI",
          "optional": true,
          "type": Object {
            "fqn": "dummy.DownwardAPIProjection",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeProjection#secret",
            },
            "summary": "information about the secret data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12489,
          },
          "name": "secret",
          "optional": true,
          "type": Object {
            "fqn": "dummy.SecretProjection",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VolumeProjection#serviceAccountToken",
            },
            "summary": "information about the serviceAccountToken data to project.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12496,
          },
          "name": "serviceAccountToken",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ServiceAccountTokenProjection",
          },
        },
      ],
    },
    "dummy.VsphereVirtualDiskVolumeSource": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource",
        },
        "summary": "Represents a vSphere volume resource.",
      },
      "fqn": "dummy.VsphereVirtualDiskVolumeSource",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 8918,
      },
      "name": "VsphereVirtualDiskVolumeSource",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#volumePath",
            },
            "summary": "Path that identifies vSphere volume vmdk.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8945,
          },
          "name": "volumePath",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#fsType",
            },
            "remarks": "Must be a filesystem type supported by the host operating system. Ex. \\"ext4\\", \\"xfs\\", \\"ntfs\\". Implicitly inferred to be \\"ext4\\" if unspecified.",
            "summary": "Filesystem type to mount.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8924,
          },
          "name": "fsType",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#storagePolicyID",
            },
            "summary": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8931,
          },
          "name": "storagePolicyID",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource#storagePolicyName",
            },
            "summary": "Storage Policy Based Management (SPBM) profile name.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 8938,
          },
          "name": "storagePolicyName",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.Webhook": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook",
        },
        "summary": "Webhook describes an admission webhook and the resources and operations it applies to.",
      },
      "fqn": "dummy.Webhook",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 4821,
      },
      "name": "Webhook",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#clientConfig",
            },
            "remarks": "Required",
            "summary": "ClientConfig defines how to communicate with the hook.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4835,
          },
          "name": "clientConfig",
          "type": Object {
            "fqn": "dummy.WebhookClientConfig",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#name",
            },
            "remarks": "Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where \\"imagepolicy\\" is the name of the webhook, and kubernetes.io is the name of the organization. Required.",
            "summary": "The name of the admission webhook.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4850,
          },
          "name": "name",
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#admissionReviewVersions",
            },
            "default": "v1beta1']\`.",
            "remarks": "API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy. Default to \`['v1beta1']\`.",
            "summary": "AdmissionReviewVersions is an ordered list of preferred \`AdmissionReview\` versions the Webhook expects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4828,
          },
          "name": "admissionReviewVersions",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "primitive": "string",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#failurePolicy",
            },
            "default": "Ignore.",
            "remarks": "Defaults to Ignore.",
            "summary": "FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4843,
          },
          "name": "failurePolicy",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#namespaceSelector",
            },
            "default": "the empty LabelSelector, which matches everything.",
            "remarks": "If the object itself is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the webhook.

For example, to run the webhook on any objects whose namespace is not associated with \\"runlevel\\" of \\"0\\" or \\"1\\";  you will set the selector as follows: \\"namespaceSelector\\": {
\\"matchExpressions\\": [
{
  \\"key\\": \\"runlevel\\",
  \\"operator\\": \\"NotIn\\",
  \\"values\\": [
    \\"0\\",
    \\"1\\"
  ]
}
]
}

If instead you want to only run the webhook on any objects whose namespace is associated with the \\"environment\\" of \\"prod\\" or \\"staging\\"; you will set the selector as follows: \\"namespaceSelector\\": {
\\"matchExpressions\\": [
{
  \\"key\\": \\"environment\\",
  \\"operator\\": \\"In\\",
  \\"values\\": [
    \\"prod\\",
    \\"staging\\"
  ]
}
]
}

See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/ for more examples of label selectors.

Default to the empty LabelSelector, which matches everything.",
            "summary": "NamespaceSelector decides whether to run the webhook on an object based on whether the namespace for that object matches the selector.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4888,
          },
          "name": "namespaceSelector",
          "optional": true,
          "type": Object {
            "fqn": "dummy.LabelSelector",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#rules",
            },
            "remarks": "The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.",
            "summary": "Rules describes what operations on what resources/subresources the webhook cares about.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4895,
          },
          "name": "rules",
          "optional": true,
          "type": Object {
            "collection": Object {
              "elementtype": Object {
                "fqn": "dummy.RuleWithOperations",
              },
              "kind": "array",
            },
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#sideEffects",
            },
            "default": "Unknown.",
            "remarks": "Acceptable values are: Unknown, None, Some, NoneOnDryRun Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. Defaults to Unknown.",
            "summary": "SideEffects states whether this webhookk has side effects.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4903,
          },
          "name": "sideEffects",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.Webhook#timeoutSeconds",
            },
            "default": "30 seconds.",
            "remarks": "After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 30 seconds.",
            "summary": "TimeoutSeconds specifies the timeout for this webhook.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 4911,
          },
          "name": "timeoutSeconds",
          "optional": true,
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
    "dummy.WebhookClientConfig": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig",
        },
        "summary": "WebhookClientConfig contains the information to make a TLS connection with the webhook.",
      },
      "fqn": "dummy.WebhookClientConfig",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 7456,
      },
      "name": "WebhookClientConfig",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig#caBundle",
            },
            "remarks": "If unspecified, system trust roots on the apiserver are used.",
            "summary": "\`caBundle\` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7462,
          },
          "name": "caBundle",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig#service",
            },
            "remarks": "If the webhook is running within the cluster, then you should use \`service\`.

Port 443 will be used if it is open, otherwise it is an error.",
            "summary": "\`service\` is a reference to the service for this webhook. Either \`service\` or \`url\` must be specified.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7473,
          },
          "name": "service",
          "optional": true,
          "type": Object {
            "fqn": "dummy.ServiceReference",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig#url",
            },
            "remarks": "Exactly one of \`url\` or \`service\` must be specified.

The \`host\` should not refer to a service running in the cluster; use the \`service\` field instead. The host might be resolved via external DNS in some apiservers (e.g., \`kube-apiserver\` cannot resolve in-cluster DNS as that would be a layering violation). \`host\` may also be an IP address.

Please note that using \`localhost\` or \`127.0.0.1\` as a \`host\` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.

The scheme must be \\"https\\"; the URL must begin with \\"https://\\".

A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.

Attempting to use a user or basic auth e.g. \\"user:password@\\" is not allowed. Fragments (\\"#...\\") and query parameters (\\"?...\\") are not allowed, either.",
            "summary": "\`url\` gives the location of the webhook, in standard URL form (\`scheme://host:port/path\`).",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 7490,
          },
          "name": "url",
          "optional": true,
          "type": Object {
            "primitive": "string",
          },
        },
      ],
    },
    "dummy.WeightedPodAffinityTerm": Object {
      "assembly": "dummy",
      "datatype": true,
      "docs": Object {
        "custom": Object {
          "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm",
        },
        "summary": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s).",
      },
      "fqn": "dummy.WeightedPodAffinityTerm",
      "kind": "interface",
      "locationInModule": Object {
        "filename": "k8s.ts",
        "line": 12221,
      },
      "name": "WeightedPodAffinityTerm",
      "properties": Array [
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm#podAffinityTerm",
            },
            "remarks": "A pod affinity term, associated with the corresponding weight.",
            "summary": "Required.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12227,
          },
          "name": "podAffinityTerm",
          "type": Object {
            "fqn": "dummy.PodAffinityTerm",
          },
        },
        Object {
          "abstract": true,
          "docs": Object {
            "custom": Object {
              "schema": "io.k8s.api.core.v1.WeightedPodAffinityTerm#weight",
            },
            "summary": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          },
          "immutable": true,
          "locationInModule": Object {
            "filename": "k8s.ts",
            "line": 12234,
          },
          "name": "weight",
          "type": Object {
            "primitive": "number",
          },
        },
      ],
    },
  },
  "version": "0.0.0",
}
`;
