name: Release
on:
  push:
    branches:
      - master
    
jobs:
  build_artifact:
    name: Build and upload artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - uses: actions/checkout@v2
      - name: installing dependencies
        run: |
          pip3 install pipenv
          yarn install
      - name: compile
        run: |
          tools/align-version.sh
          yarn build
      - name: unit tests
        run: yarn test
      - name: create bundle
        run: yarn package
      - name: integration tests
        run: test/run-against-dist test/test-all.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  release_maven:
    name: Release to Maven
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: yarn release-maven
        env:
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}

  release_npm:
    name: Release to NPM
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: yarn release-npm
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release_nuget:
    name: Release to Nuget
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: yarn release-nuget
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  release_pypi:
    name: Release to PyPi
    needs: build_artifact
    runs-on: ubuntu-latest
    container:
      image: jsii/superchain
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Release
        run: yarn release-pypi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

  release_github:
    name: Release to Github
    needs: build_artifact
    runs-on: ubuntu-latest
    steps:   
      - name: Release
        run: yarn release-github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
